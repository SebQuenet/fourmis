{"version":3,"sources":["components/Anthill/AntHill.module.css","App.js","components/Anthill/index.jsx","drawAnts.js","displayHelp.js","reportWebVitals.js","index.js"],"names":["module","exports","AntHill","props","canvasRef","useRef","draw","handleClick","useEffect","animationFrameId","canvas","current","context","getContext","frameCount","addEventListener","e","canvasWidth","getBoundingClientRect","width","canvasHeight","height","canvasX","clientX","canvasY","clientY","render","window","requestAnimationFrame","cancelAnimationFrame","console","log","innerWidth","innerHeight","className","styles","canvasSupport","ref","drawAnts","ctx","ants","strokeStyle","listOfDeaths","forEach","point","beginPath","fillRect","x","y","ant","maturity","hex","hsl","sides","side","color","substring","h","s","l","fillStyle","ellipse","maturities","size","Math","abs","oscillator","direction","PI","fill","displayWillBreed","bredRest","lineWidth","stroke","displayFood","food","moveTo","lineTo","cos","sin","displayAntenna","drawAntenna","displayEyes","arc","pupilColor","pupilSize","mode","NORMAL_MODE","FLEEING_MODE","HUNTING_MODE","MATING_MODE","drawEyes","displaySensorArea","strokeRect","sensorArea","font","fillText","floor","speed","generation","drawSensorArea","isSelected","HEN_SIDE","VIPER_SIDE","FOX_SIDE","canKill","newborn","baby","child","adult","elderly","displayAnts","displayWalls","enableBreed","enablePrey","enableGate","enableSenescence","enableDieOnFood","displayDebug","enableChildKills","isPaused","WALL_TEMPLATES","isGate","listOfWalls","random","length","areAntsSameSide","otherAnt","isContactBetween","areCloseEnough","id","areNotSameAnts","canBothAntsHaveBaby","canAntKillOtherAnt","sqrt","reach","isAntAdult","randomSide","sidesArray","Object","keys","antFactory","uuidv4","name","generateStupidName","energy","hitPoints","strength","damageReduction","isTired","canBreed","age","i","document","key","handleContacts","canBothAntsBreed","rgb","r1","g1","b1","r2","g2","b2","brood","rgbNewAnt","newAnt","hasBred","handleBirth","isDead","push","App","nbFoxes","filter","nbVipers","nbHens","displayHelp","handleBirthday","wall","drawWalls","neighbors","adultNeighbors","threats","threat","atan2","mates","mate","preys","prey","speedFactor","wantedX","wantedY","isAntInsideWall","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f13fd7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasSupport\":\"AntHill_canvasSupport__1XU9R\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { hex, rgb } from \"color-convert\";\n\nimport generateStupidName from \"sillyname\";\n\nimport \"./App.css\";\nimport AntHill from \"./components/Anthill\";\nimport { drawAnts } from \"./drawAnts\";\nimport { displayHelp } from \"./displayHelp\";\n\nconst DEFAULT_SPEED = 1;\nconst DEFAULT_ENERGY = 2;\nconst DEFAULT_FOOD = 4000;\nconst DEFAULT_HIT_POINTS = 100;\nconst DEFAULT_SIZE = 1;\nconst DEFAULT_STRENGTH = 40;\nconst DEFAULT_REACH = 30;\nconst DEFAULT_DR = 5;\n\nexport const DEFAULT_SENSOR_AREA = 80;\n\nexport const NORMAL_MODE = \"NORMAL_MODE\";\nexport const FLEEING_MODE = \"FLEEING_MODE\";\nexport const HUNTING_MODE = \"HUNTING_MODE\";\nexport const MATING_MODE = \"MATING_MODE\";\n\nexport const HEN_SIDE = \"HEN_SIDE\";\nexport const VIPER_SIDE = \"VIPER_SIDE\";\nexport const FOX_SIDE = \"FOX_SIDE\";\n\nconst NUMBER_PER_SIDE = 30;\n\nconst FOOD_LOW = 1000;\nconst FOOD_BOOST_NEWBORN = 600;\n\nexport const sides = {\n  [HEN_SIDE]: {\n    side: HEN_SIDE,\n    color: \"#995500\",\n    canKill: { [VIPER_SIDE]: true },\n  },\n  [VIPER_SIDE]: {\n    side: VIPER_SIDE,\n    color: \"#44CC44\",\n    canKill: { [FOX_SIDE]: true },\n  },\n  [FOX_SIDE]: {\n    side: FOX_SIDE,\n    color: \"#CC4444\",\n    canKill: { [HEN_SIDE]: true },\n  },\n};\n\nexport const maturities = {\n  newborn: {\n    size: 2,\n  },\n  baby: {\n    size: 4,\n  },\n  child: {\n    size: 5,\n  },\n  adult: {\n    size: 8,\n  },\n  elderly: {\n    size: 7,\n  },\n};\n\nexport let displayAnts = true;\nexport let displayAntenna = false;\nexport let displayWillBreed = false;\nexport let displaySensorArea = false;\nexport let displayEyes = true;\nexport let displayWalls = true;\nexport let enableBreed = true;\nexport let enablePrey = false;\nexport let enableGate = false;\nexport let enableSenescence = true;\nexport let enableDieOnFood = true;\nexport let displayDebug = false;\nexport let displayFood = false;\nexport let enableChildKills = false;\nexport let isPaused = false;\n\nconst WALL_TEMPLATES = [\n  [],\n  [\n    { x: 100, y: 1400, width: 3800, height: 10 },\n    { x: 2000, y: 100, width: 10, height: 1300 },\n  ],\n  [\n    { x: 1900, y: 0, width: 200, height: 950 },\n    { x: 1900, y: 1050, width: 200, height: 950 },\n  ],\n  [\n    { x: 2000, y: 0, width: 10, height: 2000, isGate: true },\n    { x: 0, y: 1000, width: 4000, height: 10, isGate: true },\n  ],\n  [\n    { x: 2000, y: 0, width: 10, height: 2000, isGate: true },\n    { x: 1000, y: 1000, width: 2000, height: 10, isGate: true },\n    { x: 1600, y: 1000, width: 800, height: 10 },\n    { x: 1000, y: 600, width: 10, height: 800 },\n    { x: 3000, y: 600, width: 10, height: 800 },\n    { x: 1600, y: 400, width: 800, height: 10 },\n    { x: 1600, y: 1600, width: 800, height: 10 },\n    { x: 0, y: 600, width: 1000, height: 10 },\n    { x: 3000, y: 1400, width: 1000, height: 10 },\n  ],\n];\n\nexport const listOfWalls =\n  WALL_TEMPLATES[Math.floor(Math.random() * WALL_TEMPLATES.length)];\n\nexport const listOfDeaths = [];\n\nconst areAntsSameGeneration = (ant, otherAnt) =>\n  ant.generation === otherAnt.generation;\nconst areNotSameAnts = (ant, otherAnt) => ant.id !== otherAnt.id;\nconst canBothAntsBreed = (ant, otherAnt) => ant.canBreed && otherAnt.canBreed;\nconst areCloseEnough = (ant, otherAnt) =>\n  Math.abs(otherAnt.x - ant.x) < 30 && Math.abs(otherAnt.y - ant.y) < 30;\nconst areAntsSameSide = (ant, otherAnt) => ant.side === otherAnt.side;\n\nconst isContactBetween = (ant, otherAnt) =>\n  areCloseEnough(ant, otherAnt) && areNotSameAnts(ant, otherAnt);\n\nconst canBothAntsHaveBaby = (ant, otherAnt) =>\n  ant.bredRest === 0 && otherAnt.bredRest === 0;\n\nconst canAntKillOtherAnt = (ant, otherAnt) => {\n  if (\n    !enableChildKills &&\n    (otherAnt.maturity === \"newborn\" ||\n      otherAnt.maturity === \"baby\" ||\n      otherAnt.maturity === \"child\")\n  ) {\n    return false;\n  }\n\n  if (\n    Math.sqrt((ant.x - otherAnt.x) ** 2 + (ant.y - otherAnt.y) ** 2) > ant.reach\n  ) {\n    return false;\n  }\n  return ant.maturity === \"adult\" && sides[ant.side].canKill[otherAnt.side];\n};\nconst isAntAdult = (ant) => ant.maturity === \"adult\";\n\nconst randomSide = () => {\n  const sidesArray = Object.keys(sides);\n  const randomIndex = Math.floor(Math.random() * sidesArray.length);\n  return sidesArray[randomIndex];\n};\n\nconst antFactory = ({ side }) => ({\n  id: uuidv4(),\n  name: generateStupidName(),\n  x: Math.floor(Math.random() * 3600) + 200,\n  y: Math.floor(Math.random() * 1600) + 200,\n  direction: Math.PI / 2,\n  food: DEFAULT_FOOD,\n  speed: DEFAULT_SPEED,\n  energy: DEFAULT_ENERGY,\n  hitPoints: DEFAULT_HIT_POINTS,\n  strength: DEFAULT_STRENGTH,\n  reach: DEFAULT_REACH,\n  damageReduction: DEFAULT_DR,\n  sensorArea: DEFAULT_SENSOR_AREA,\n  isTired: false,\n  color: \"#44CCCC\",\n  canBreed: false,\n  bredRest: 0,\n  size: DEFAULT_SIZE,\n  age: 1,\n  maturity: \"child\",\n  generation: 1,\n  side: side ? side : randomSide(),\n});\n\nexport let ants = [];\n\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: VIPER_SIDE })];\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: HEN_SIDE })];\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: FOX_SIDE })];\n}\n\ndocument.addEventListener(\n  \"keydown\",\n  (e) => {\n    if (e.key === \"v\") {\n      ants = [...ants, antFactory({ side: VIPER_SIDE })];\n    }\n    if (e.key === \"f\") {\n      ants = [...ants, antFactory({ side: FOX_SIDE })];\n    }\n    if (e.key === \"h\") {\n      ants = [...ants, antFactory({ side: HEN_SIDE })];\n    }\n    if (e.key === \"B\") {\n      enableBreed = !enableBreed;\n    }\n    if (e.key === \"b\") {\n      displayWillBreed = !displayWillBreed;\n    }\n    if (e.key === \"a\") {\n      displayAnts = !displayAnts;\n    }\n    if (e.key === \"s\") {\n      displaySensorArea = !displaySensorArea;\n    }\n    if (e.key === \"e\") {\n      displayEyes = !displayEyes;\n    }\n    if (e.key === \"k\") {\n      enablePrey = !enablePrey;\n    }\n    if (e.key === \"w\") {\n      displayWalls = !displayWalls;\n    }\n    if (e.key === \"d\") {\n      displayDebug = !displayDebug;\n    }\n    if (e.key === \"g\") {\n      enableGate = !enableGate;\n    }\n    if (e.key === \"o\") {\n      displayFood = !displayFood;\n    }\n    if (e.key === \"x\") {\n      enableDieOnFood = !enableDieOnFood;\n    }\n    if (e.key === \"c\") {\n      enableSenescence = !enableSenescence;\n    }\n    if (e.key === \"i\") {\n      enableChildKills = !enableChildKills;\n    }\n    if (e.key === \" \") {\n      isPaused = !isPaused;\n    }\n  },\n  false\n);\n\nconst handleBirthday = (frameCount) => {\n  ants.forEach((ant) => {\n    ant.oscillator = Math.cos(frameCount / 10);\n    if (ant.bredRest > 0) {\n      ant.bredRest = ant.bredRest - 1;\n    }\n    ant.age = ant.age + 1;\n    if (ant.age < 200) {\n      ant.maturity = \"newborn\";\n    } else if (ant.age < 400) {\n      ant.maturity = \"baby\";\n    } else if (ant.age < 1200) {\n      ant.maturity = \"child\";\n    } else if (ant.age < 8000) {\n      ant.maturity = \"adult\";\n      ant.canBreed = true;\n    } else if (ant.age < 10000 && enableSenescence) {\n      ant.maturity = \"elderly\";\n      ant.canBreed = false;\n      ant.energy = 5;\n    } else if (enableSenescence) {\n      ant.isDead = true;\n    }\n  });\n};\n\nconst handleDirectionChange = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    ant.mode = NORMAL_MODE;\n    const neighbors = ants.filter(\n      (otherAnt) =>\n        Math.abs(otherAnt.x - ant.x) < ant.sensorArea &&\n        Math.abs(otherAnt.y - ant.y) < ant.sensorArea &&\n        otherAnt.id !== ant.id\n    );\n    const adultNeighbors = neighbors.filter(\n      (otherAnt) => isAntAdult(otherAnt) && otherAnt.id !== ant.id\n    );\n\n    const threats = adultNeighbors.filter((otherAnt) =>\n      canAntKillOtherAnt(otherAnt, ant)\n    );\n    if (threats.length > 0) {\n      const threat = threats[0];\n      ant.direction = Math.PI + Math.atan2(threat.y - ant.y, threat.x - ant.x);\n      ant.mode = FLEEING_MODE;\n    }\n\n    const mates = adultNeighbors.filter(\n      (otherAnt) =>\n        enableBreed &&\n        areAntsSameSide(ant, otherAnt) &&\n        canBothAntsHaveBaby(ant, otherAnt) &&\n        isAntAdult(ant)\n    );\n    if (mates.length > 0) {\n      const mate = mates[0];\n      ant.direction = Math.atan2(mate.y - ant.y, mate.x - ant.x);\n      ant.mode = MATING_MODE;\n    }\n\n    if (enablePrey || ant.food < FOOD_LOW) {\n      const preys = neighbors.filter((otherAnt) =>\n        canAntKillOtherAnt(ant, otherAnt)\n      );\n      if (preys.length > 0) {\n        const prey = preys[0];\n        ant.direction = Math.atan2(prey.y - ant.y, prey.x - ant.x);\n        ant.mode = HUNTING_MODE;\n      }\n    }\n\n    if (ant.x > 4000) {\n      ant.direction = Math.PI;\n    }\n    if (ant.x < 0) {\n      ant.direction = 0;\n    }\n    if (ant.y > 2000) {\n      ant.direction = (3 * Math.PI) / 2;\n    }\n    if (ant.y < 0) {\n      ant.direction = Math.PI / 2;\n    }\n\n    ant.direction =\n      -Math.PI / 18 + (Math.random() * Math.PI) / 9 + ant.direction;\n  });\n};\n\nconst handleMoveAnts = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    let speedFactor;\n    switch (ant.maturity) {\n      case \"newborn\":\n        speedFactor = 0;\n        break;\n      case \"baby\":\n        speedFactor = 1;\n        break;\n      case \"child\":\n        speedFactor = 2;\n        break;\n      case \"adult\":\n        speedFactor = 3;\n        break;\n      case \"elderly\":\n        speedFactor = 1;\n        break;\n      default:\n        speedFactor = 1;\n    }\n    const wantedX = ant.x + Math.cos(ant.direction) * ant.speed * speedFactor;\n    const wantedY = ant.y + Math.sin(ant.direction) * ant.speed * speedFactor;\n\n    let isAntInsideWall = false;\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ant.x = wantedX;\n        ant.y = wantedY;\n        return;\n      }\n      if (\n        wantedX >= wall.x &&\n        wantedX <= wall.x + wall.width &&\n        wantedY >= wall.y &&\n        wantedY <= wall.y + wall.height\n      ) {\n        // ant.direction = Math.PI + Math.atan2(wall.y - ant.y, wall.x - ant.x);\n        ant.direction = Math.PI + ant.direction;\n        isAntInsideWall = true;\n      }\n    });\n\n    if (!isAntInsideWall) {\n      ant.x = wantedX;\n      ant.y = wantedY;\n    }\n  });\n};\n\nconst handleFatigue = () => {\n  ants.forEach((ant) => {\n    if (ant.brood > 0) {\n      ant.brood = ant.brood - 1;\n      ant.isTired = true;\n    } else {\n      ant.isTired = false;\n    }\n  });\n};\n\nfunction handleBirth(ant, otherAnt) {\n  ant.bredRest = 400;\n  otherAnt.bredRest = 400;\n\n  const [r1, g1, b1] = hex.rgb(ant.color.substring(1));\n  const [r2, g2, b2] = hex.rgb(otherAnt.color.substring(1));\n\n  ant.brood = 100;\n  otherAnt.brood = 100;\n\n  const rgbNewAnt = [\n    Math.floor(Math.sqrt((r1 * r1 + r2 * r2) / 2)),\n    Math.floor(Math.sqrt((g1 * g1 + g2 * g2) / 2)),\n    Math.floor(Math.sqrt((b1 * b1 + b2 * b2) / 2)),\n  ];\n\n  const speed =\n    Math.floor(ant.speed + otherAnt.speed) / 2 - 0.5 + Math.random();\n  const sensorArea = Math.floor(\n    Math.floor(ant.sensorArea + otherAnt.sensorArea) / 2 - 4 + Math.random() * 8\n  );\n\n  const size =\n    Math.floor(ant.size + otherAnt.size) / 2 - 0.1 + Math.random() * 0.2;\n  const newAnt = {\n    id: uuidv4(),\n    name: generateStupidName(),\n    x: Math.floor(ant.x + otherAnt.x) / 2,\n    y: Math.floor(ant.y + otherAnt.y) / 2,\n    direction: 0,\n    brood: 0,\n    sensorArea:\n      sensorArea > DEFAULT_SENSOR_AREA ? sensorArea : DEFAULT_SENSOR_AREA,\n    speed: speed > DEFAULT_SPEED ? speed : DEFAULT_SPEED,\n    energy: DEFAULT_ENERGY,\n    hitPoints: Math.floor(\n      (ant.hitPoints + otherAnt.hitPoints) / 2 + Math.random() * 10 - 5\n    ),\n    strength: Math.floor(\n      (ant.strength + otherAnt.strength) / 2 + Math.random() * 4 - 2\n    ),\n    reach: Math.floor((ant.reach + otherAnt.reach) / 2 + Math.random() * 4 - 2),\n    damageReduction: Math.floor(\n      (ant.damageReduction + otherAnt.damageReduction) / 2\n    ),\n    color: `#${rgb.hex(rgbNewAnt)}`,\n    canBreed: false,\n    hasBred: false,\n    mode: NORMAL_MODE,\n    size: size > DEFAULT_SIZE ? size : DEFAULT_SIZE,\n    age: 0,\n    bredRest: 0,\n    generation:\n      ant.generation > otherAnt.generation\n        ? ant.generation + 1\n        : otherAnt.generation + 1,\n    food: Math.floor(ant.food + otherAnt.food) / 2 + FOOD_BOOST_NEWBORN,\n    side: ant.side,\n  };\n  ants = [...ants, newAnt];\n}\n\nconst handleContacts = () => {\n  ants.forEach((ant) => {\n    ants.forEach((otherAnt) => {\n      if (isContactBetween(ant, otherAnt)) {\n        if (\n          enableBreed &&\n          areAntsSameSide(ant, otherAnt) &&\n          canBothAntsBreed(ant, otherAnt) &&\n          canBothAntsHaveBaby(ant, otherAnt)\n        ) {\n          handleBirth(ant, otherAnt);\n        } else {\n          if (!areAntsSameSide(ant, otherAnt)) {\n            if (canAntKillOtherAnt(ant, otherAnt) && isAntAdult(ant)) {\n              otherAnt.hitPoints = otherAnt.hitPoints - ant.strength;\n              if (otherAnt.hitPoints <= 0) {\n                otherAnt.isDead = true;\n              }\n              listOfDeaths.push({ x: otherAnt.x, y: otherAnt.y });\n              ant.food = ant.food + otherAnt.food / 2;\n            }\n          }\n        }\n      }\n    });\n  });\n};\n\nconst handleDeaths = () => {\n  ants = ants.filter((ant) => !ant.isDead);\n};\nconst drawWalls = (ctx) => {\n  if (displayWalls) {\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ctx.fillStyle = \"#333333\";\n      } else {\n        ctx.fillStyle = \"#888888\";\n      }\n      ctx.fillRect(wall.x, wall.y, wall.width, wall.height);\n    });\n  }\n};\n\nconst handleFood = () => {\n  ants\n    //    .filter((ant) => ant.maturity === \"adult\" || ant.maturity === \"elderly\")\n    .forEach((ant) => {\n      ant.food = ant.food - 1;\n      if (ant.food <= 0 && enableDieOnFood) {\n        ant.isDead = true;\n      }\n    });\n};\n\nconst handleClick = ({ canvasX, canvasY }) => {\n  ants.forEach((ant) => ant.isSelected === false);\n  ants.forEach((ant) => {\n    if (!ant.maturity) {\n      return;\n    }\n    if (\n      canvasX >= ant.x - maturities[ant.maturity].size * 3 &&\n      canvasX <= ant.x + maturities[ant.maturity].size * 3 &&\n      canvasY >= ant.y - maturities[ant.maturity].size * 3 &&\n      canvasY <= ant.y + maturities[ant.maturity].size * 3\n    ) {\n      console.log(ant);\n      ant.isSelected = true;\n    }\n  });\n};\n\nfunction App() {\n  const draw = (ctx, frameCount) => {\n    if (!isPaused) {\n      ctx.beginPath();\n      ctx.fillStyle = \"#202020\";\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      displayHelp(ctx);\n      handleBirthday(frameCount);\n      handleFood();\n      handleDeaths();\n      drawWalls(ctx);\n      if (displayAnts) {\n        drawAnts(ctx, ants);\n      }\n      handleFatigue(ants);\n      handleDirectionChange();\n      handleMoveAnts();\n      handleContacts();\n    }\n  };\n  return (\n    <div className=\"App\">\n      <AntHill draw={draw} handleClick={handleClick} />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useRef, useEffect } from 'react';\nimport styles from './AntHill.module.css';\n\nconst CANVAS_WIDTH = 4000;\nconst CANVAS_HEIGHT = 2000;\n\nconst AntHill = (props) => {\n  const canvasRef = useRef(null);\n  const { draw, handleClick } = props;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    canvas.addEventListener('click', (e) => {\n\n      const canvasWidth = canvas.getBoundingClientRect().width;\n      const canvasHeight = canvas.getBoundingClientRect().height;\n      const canvasX = e.clientX*CANVAS_WIDTH/canvasWidth;\n      const canvasY = e.clientY*CANVAS_HEIGHT/canvasHeight;\n      handleClick({canvasX, canvasY});\n    }, false);\n\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n\n  }, [draw]);\n  console.log(window.innerWidth / 2);\n  console.log(window.innerHeight/ 2);\n  return <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} className={styles.canvasSupport} ref={canvasRef}{...props}></canvas>\n};\n\nexport default AntHill;","import { hex, hsl } from \"color-convert\";\nimport {\n  sides,\n  listOfDeaths,\n  displayWillBreed,\n  displayAntenna,\n  displaySensorArea,\n  displayEyes,\n  displayFood,\n  maturities,\n  NORMAL_MODE,\n  FLEEING_MODE,\n  HUNTING_MODE,\n  MATING_MODE,\n} from \"./App\";\n\nconst drawSensorArea = (ctx, ant) => {\n  ctx.lineWidth = 0.25;\n  ctx.strokeRect(\n    ant.x - ant.sensorArea / 2,\n    ant.y - ant.sensorArea / 2,\n    ant.sensorArea,\n    ant.sensorArea\n  );\n  ctx.font = \"16px monospace\";\n  ctx.fillStyle = sides[ant.side].color;\n  ctx.fillText(\n    `${Math.floor(ant.sensorArea)}`,\n    ant.x - ant.sensorArea / 2,\n    ant.y - ant.sensorArea / 2\n  );\n  ctx.fillText(\n    `${Math.floor(ant.speed * 10)}`,\n    ant.x + ant.sensorArea / 2 - 12,\n    ant.y - ant.sensorArea / 2\n  );\n  ctx.fillText(\n    `${Math.floor(ant.generation)}`,\n    ant.x,\n    ant.y - ant.sensorArea / 2\n  );\n};\n\nconst drawEyes = (ctx, ant) => {\n  const [h, s, l] = hex.hsl(sides[ant.side].color.substring(1));\n\n  const eyeSize = 4;\n  ctx.beginPath();\n  //  ctx.fillStyle = `#${hsl.hex(h, s, l + 30)}`;\n  ctx.fillStyle = \"#ffffff\";\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) * maturities[ant.maturity].size,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) * maturities[ant.maturity].size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) * maturities[ant.maturity].size,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) * maturities[ant.maturity].size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n\n  ctx.beginPath();\n  const pupilSize = ant.mode === NORMAL_MODE ? 2 : 3;\n  let pupilColor;\n  switch (ant.mode) {\n    case NORMAL_MODE:\n      pupilColor = \"#000000\";\n      break;\n    case FLEEING_MODE:\n      pupilColor = \"#008000\";\n      break;\n    case HUNTING_MODE:\n      pupilColor = \"#ff0000\";\n      break;\n    case MATING_MODE:\n      pupilColor = \"#ff00ff\";\n      break;\n    default:\n      pupilColor = \"#000000\";\n  }\n\n  /// ctx.fillStyle = `#${hsl.hex(h, s, l - 30)}`;\n  ctx.fillStyle = pupilColor;\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) * maturities[ant.maturity].size,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) * maturities[ant.maturity].size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) * maturities[ant.maturity].size,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) * maturities[ant.maturity].size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n};\n\nconst drawAntenna = (ctx, ant) => {\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.fillStyle = sides[ant.side].color;\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        10,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) * maturities[ant.maturity].size * 10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.stroke();\n\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        10,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) * maturities[ant.maturity].size * 10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.stroke();\n};\n\nexport const drawAnts = (ctx, ants) => {\n  ctx.strokeStyle = \"#331111\";\n  listOfDeaths.forEach((point) => {\n    ctx.beginPath();\n    ctx.fillRect(point.x, point.y, 1, 1);\n  });\n  ants.forEach((ant) => {\n    ctx.beginPath();\n    if (ant.maturity === \"elderly\") {\n      const [h, s, l] = hex.hsl(sides[ant.side].color.substring(1));\n      ctx.fillStyle = `#${hsl.hex(h, s / 2, l - 10)}`;\n    } else {\n      ctx.fillStyle = sides[ant.side].color;\n    }\n    ctx.ellipse(\n      ant.x,\n      ant.y,\n      maturities[ant.maturity].size * 2,\n      maturities[ant.maturity].size +\n        maturities[ant.maturity].size * Math.abs(ant.oscillator),\n      ant.direction,\n      0,\n      2 * Math.PI\n    );\n    ctx.fill();\n    if (displayWillBreed && ant.bredRest > 0) {\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 1;\n      ctx.stroke();\n    }\n    if (displayFood) {\n      if (ant.food < 500) {\n        ctx.strokeStyle = \"#ff0000\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 1000) {\n        ctx.strokeStyle = \"#ffff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 2000) {\n        ctx.strokeStyle = \"#00ff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      }\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(ant.x, ant.y);\n    ctx.lineTo(\n      ant.x + Math.cos(ant.direction) * maturities[ant.maturity].size * 2,\n      ant.y + Math.sin(ant.direction) * maturities[ant.maturity].size * 2\n    );\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = sides[ant.side].color;\n    ctx.stroke();\n\n    if (displayAntenna) {\n      drawAntenna(ctx, ant);\n    }\n    if (\n      displayEyes &&\n      (ant.maturity === \"adult\" ||\n        ant.maturity === \"elderly\" ||\n        ant.maturity === \"child\" ||\n        ant.maturity === \"baby\")\n    ) {\n      drawEyes(ctx, ant);\n    }\n\n    if (displaySensorArea) {\n      drawSensorArea(ctx, ant);\n    }\n    if (ant.isSelected) {\n      ctx.beginPath();\n      ctx.strokeStyle = \"#ff8888\";\n      ctx.fillStyle = \"#ffffff\";\n      ctx.arc(ant.x, ant.y, maturities[ant.maturity].size * 3, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n  });\n};\n","import {\n  ants,\n  FOX_SIDE,\n  VIPER_SIDE,\n  HEN_SIDE,\n  displayDebug,\n  enablePrey,\n  enableGate,\n  displayAnts,\n  displayFood,\n  enableDieOnFood,\n  enableSenescence,\n  displaySensorArea,\n  enableBreed,\n  enableChildKills,\n} from \"./App\";\n\nexport const displayHelp = (ctx) => {\n  ctx.font = \"36px serif\";\n  ctx.fillStyle = \"#ffffff\";\n  const nbFoxes = ants.filter((ant) => ant.side === FOX_SIDE).length;\n  const nbVipers = ants.filter((ant) => ant.side === VIPER_SIDE).length;\n  const nbHens = ants.filter((ant) => ant.side === HEN_SIDE).length;\n  if (displayDebug) {\n    ctx.fillStyle = \"#00FF00\";\n    ctx.fillText(\"Display debug (D) enabled\", 30, 40);\n    ctx.fillStyle = \"#CC4444\";\n    ctx.fillText(`${nbFoxes} foxes, (F) to add`, 30, 80);\n    ctx.fillStyle = \"#995500\";\n    ctx.fillText(`${nbHens} hens, (H) to add`, 30, 120);\n    ctx.fillStyle = \"#44CC44\";\n    ctx.fillText(`${nbVipers} vipers, (V) to add`, 30, 160);\n    if (enablePrey) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Prey mode (K) enabled\", 30, 200);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Prey mode (K) disabled\", 30, 200);\n    }\n    if (enableGate) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Gate (G) enabled\", 30, 240);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Gate (G) disabled\", 30, 240);\n    }\n    if (displayAnts) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Ants (A) displayed\", 30, 280);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Ants (A) hidden\", 30, 280);\n    }\n    if (displayFood) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Food (O) displayed\", 30, 320);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Food (O) hidden\", 30, 320);\n    }\n    if (enableDieOnFood) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on starvation (X) enabled\", 30, 360);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on starvation (X) disabled\", 30, 360);\n    }\n    if (enableSenescence) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on aging (C) enabled\", 30, 400);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on aging (C) disabled\", 30, 400);\n    }\n    if (displaySensorArea) {\n      ctx.fillStyle = \"#CCCC33\";\n      ctx.fillText(\"Sensor (S) displayed\", 30, 440);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Sensor (S) displayed\", 30, 440);\n    }\n    if (enableChildKills) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Allow to kill children (I) enabled\", 30, 480);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Allow to kill children (I) disabled\", 30, 480);\n    }\n    if (enableBreed) {\n      ctx.fillStyle = \"#00FF00\";\n      ctx.fillText(\"Allow to breed (+B) enabled\", 30, 520);\n    } else {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Allow to breed (+B) disabled\", 30, 520);\n    }\n  } else {\n    ctx.fillStyle = \"#808080\";\n    ctx.fillText(\"Display debug (D) disabled\", 30, 40);\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}