{"version":3,"sources":["components/Anthill/AntHill.module.css","App.js","components/Anthill/index.jsx","drawAnts.js","displayHelp.js","reportWebVitals.js","index.js"],"names":["module","exports","CANVAS_WIDTH","CANVAS_HEIGHT","AntHill","props","canvasRef","useRef","draw","handleClick","handleMouseMove","useEffect","animationFrameId","canvas","current","context","getContext","frameCount","addEventListener","e","canvasWidth","getBoundingClientRect","width","canvasHeight","height","canvasX","clientX","canvasY","clientY","render","window","requestAnimationFrame","cancelAnimationFrame","console","log","innerWidth","innerHeight","className","styles","canvasSupport","ref","drawAnts","ctx","ants","strokeStyle","listOfDeaths","forEach","point","beginPath","fillRect","x","y","ant","maturity","hex","hsl","sides","side","color","substring","h","s","l","fillStyle","ellipse","maturities","size","Math","abs","oscillator","direction","PI","fill","displayWillBreed","bredRest","lineWidth","stroke","displayFood","food","isInjuried","moveTo","lineTo","cos","sin","displayAntenna","drawAntenna","displayEyes","arc","pupilColor","pupilSize","mode","NORMAL_MODE","FLEEING_MODE","HUNTING_MODE","MATING_MODE","drawEyes","displaySensorArea","strokeRect","sensorArea","font","fillText","floor","speed","generation","drawSensorArea","isSelected","HEN_SIDE","VIPER_SIDE","FOX_SIDE","selectedAnt","canKill","newborn","baby","child","adult","elderly","displayAnts","displayWalls","enableBreed","enablePrey","enableGate","enableSenescence","enableDieOnFood","displayDebug","enableChildKills","isPaused","WALL_TEMPLATES","isGate","cursorX","cursorY","listOfWalls","random","length","areAntsSameSide","otherAnt","isContactBetween","areCloseEnough","id","areNotSameAnts","canBothAntsHaveBaby","isAntAThreatForOtherAnt","isAntAdult","randomSide","sidesArray","Object","keys","antFactory","uuidv4","name","generateStupidName","energy","hitPoints","maxHitPoints","strength","reach","damageReduction","trackingArea","perceptionArea","isTired","canBreed","age","i","document","key","distanceBetweenAnts","sqrt","handleContacts","canBothAntsBreed","rgb","r1","g1","b1","r2","g2","b2","brood","rgbNewAnt","newAnt","hasBred","handleBirth","canAntKillOtherAnt","isDead","push","find","App","nbFoxes","filter","nbVipers","nbHens","displayHelp","handleBirthday","wall","drawWalls","preys","predators","neighbors","adultNeighbors","threats","threat","atan2","mates","mate","prey","speedFactor","injuryFactor","wantedX","wantedY","isAntInsideWall","rect","drawSelectedAnt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,cAAgB,iC,iFCoNlC,I,2IClNMC,EAAe,IACfC,EAAgB,IA4CPC,EA1CC,SAACC,GACf,IAAMC,EAAYC,iBAAO,MACjBC,EAAuCH,EAAvCG,KAAMC,EAAiCJ,EAAjCI,YAAaC,EAAoBL,EAApBK,gBAqC3B,OApCAC,qBAAU,WACR,IAIIC,EAJEC,EAASP,EAAUQ,QACnBC,EAAUF,EAAOG,WAAW,MAE9BC,EAAa,EAGjBJ,EAAOK,iBAAiB,aAAa,SAACC,GACpC,IAAMC,EAAcP,EAAOQ,wBAAwBC,MAC7CC,EAAeV,EAAOQ,wBAAwBG,OAC9CC,EAAUN,EAAEO,QAAQxB,EAAakB,EACjCO,EAAUR,EAAES,QAAQzB,EAAcoB,EACxCb,EAAgB,CAACe,UAASE,eACzB,GACHd,EAAOK,iBAAiB,SAAS,SAACC,GAChC,IAAMC,EAAcP,EAAOQ,wBAAwBC,MAC7CC,EAAeV,EAAOQ,wBAAwBG,OAC9CC,EAAUN,EAAEO,QAAQxB,EAAakB,EACjCO,EAAUR,EAAES,QAAQzB,EAAcoB,EACxCd,EAAY,CAACgB,UAASE,eACrB,GASH,OAPe,SAATE,IACJZ,IACAT,EAAKO,EAASE,GACdL,EAAmBkB,OAAOC,sBAAsBF,GAElDA,GAEO,WACLC,OAAOE,qBAAqBpB,MAE7B,CAACJ,IAEJyB,QAAQC,IAAIJ,OAAOK,WAAa,GAChCF,QAAQC,IAAIJ,OAAOM,YAAa,GACzB,oCAAQd,MAAOpB,EAAcsB,OAAQrB,EAAekC,UAAWC,IAAOC,cAAeC,IAAKlC,GAAcD,KC8HpGoC,EAAW,SAACC,EAAKC,GAC5BD,EAAIE,YAAc,UAClBC,EAAaC,SAAQ,SAACC,GACpBL,EAAIM,YACJN,EAAIO,SAASF,EAAMG,EAAGH,EAAMI,EAAG,EAAG,MAEpCR,EAAKG,SAAQ,SAACM,GAEZ,GADAV,EAAIM,YACiB,YAAjBI,EAAIC,SAAwB,CAAC,IAAD,EACZC,MAAIC,IAAIC,EAAMJ,EAAIK,MAAMC,MAAMC,UAAU,IAD5B,mBACvBC,EADuB,KACpBC,EADoB,KACjBC,EADiB,KAE9BpB,EAAIqB,UAAJ,WAAoBR,MAAID,IAAIM,EAAGC,EAAI,EAAGC,EAAI,UAE1CpB,EAAIqB,UAAYP,EAAMJ,EAAIK,MAAMC,MAElChB,EAAIsB,QACFZ,EAAIF,EACJE,EAAID,EACJc,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAAO,EAC3CD,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAClCD,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAAOC,KAAKC,IAAIhB,EAAIiB,YAC1DjB,EAAIkB,UACJ,EACA,EAAIH,KAAKI,IAEX7B,EAAI8B,OACAC,GAAoBrB,EAAIsB,SAAW,IACrChC,EAAIE,YAAc,UAClBF,EAAIiC,UAAY,EAChBjC,EAAIkC,UAEFC,IACEzB,EAAI0B,KAAO,KACbpC,EAAIE,YAAc,UAClBF,EAAIiC,UAAY,EAChBjC,EAAIkC,UACKxB,EAAI0B,KAAO,KACpBpC,EAAIE,YAAc,UAClBF,EAAIiC,UAAY,EAChBjC,EAAIkC,UACKxB,EAAI0B,KAAO,MACpBpC,EAAIE,YAAc,UAClBF,EAAIiC,UAAY,EAChBjC,EAAIkC,WAGJxB,EAAI2B,aACNrC,EAAIM,YACJN,EAAIqB,UAAY,UAChBrB,EAAIsB,QACFZ,EAAIF,EACJE,EAAID,EACJc,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAAO,EAC3CD,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAClCD,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAAOC,KAAKC,IAAIhB,EAAIiB,YAC1DjB,EAAIkB,UACJH,KAAKI,GAAKJ,KAAKI,GAAK,EACpBJ,KAAKI,GAAKJ,KAAKI,GAAK,GAEtB7B,EAAI8B,QAGN9B,EAAIM,YACJN,EAAIsC,OAAO5B,EAAIF,EAAGE,EAAID,GACtBT,EAAIuC,OACF7B,EAAIF,EACFiB,KAAKe,IAAI9B,EAAIkB,WAAaL,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAAO,EACvEd,EAAID,EACFgB,KAAKgB,IAAI/B,EAAIkB,WAAaL,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAAO,GAEzExB,EAAIiC,UAAY,EAChBjC,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIkC,SAEAQ,GAnHY,SAAC1C,EAAKU,GACxBV,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIqB,UAAYP,EAAMJ,EAAIK,MAAMC,MAChChB,EAAIiC,UAAY,GAChBjC,EAAIM,YACJN,EAAIsC,OAAO5B,EAAIF,EAAGE,EAAID,GACtBT,EAAIuC,OACF7B,EAAIF,EACFiB,KAAKe,IAAI9B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACJ,GACJd,EAAID,EACFgB,KAAKgB,IAAI/B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACJ,IAENxB,EAAIiC,UAAY,EAChBjC,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIkC,SAEJlC,EAAIiC,UAAY,GAChBjC,EAAIM,YACJN,EAAIsC,OAAO5B,EAAIF,EAAGE,EAAID,GACtBT,EAAIuC,OACF7B,EAAIF,EACFiB,KAAKe,IAAI9B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACJ,GACJd,EAAID,EACFgB,KAAKgB,IAAI/B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACJ,IAENxB,EAAIiC,UAAY,EAChBjC,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIkC,SA6EAS,CAAY3C,EAAKU,IAGjBkC,GACkB,UAAjBlC,EAAIC,UACc,YAAjBD,EAAIC,UACa,UAAjBD,EAAIC,UACa,SAAjBD,EAAIC,UAjNK,SAACX,EAAKU,GAAS,IAAD,EACXE,MAAIC,IAAIC,EAAMJ,EAAIK,MAAMC,MAAMC,UAAU,IAD7B,kCAI7BjB,EAAIM,YAEJN,EAAIqB,UAAY,UAChBrB,EAAI6C,IACFnC,EAAIF,EACFiB,KAAKe,IAAI9B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACRd,EAAID,EACFgB,KAAKgB,IAAI/B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KAZM,EAcd,EACA,EAAIC,KAAKI,IAEX7B,EAAI6C,IACFnC,EAAIF,EACFiB,KAAKe,IAAI9B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACRd,EAAID,EACFgB,KAAKgB,IAAI/B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KAzBM,EA2Bd,EACA,EAAIC,KAAKI,IAEX7B,EAAI8B,OAEJ9B,EAAIM,YACJ,IACIwC,EADEC,EAAYrC,EAAIsC,OAASC,EAAc,EAAI,EAEjD,OAAQvC,EAAIsC,MACV,KAAKC,EACHH,EAAa,UACb,MACF,KAAKI,EACHJ,EAAa,UACb,MACF,KAAKK,EACHL,EAAa,UACb,MACF,KAAKM,EACHN,EAAa,UACb,MACF,QACEA,EAAa,UAIjB9C,EAAIqB,UAAYyB,EAChB9C,EAAI6C,IACFnC,EAAIF,EACFiB,KAAKe,IAAI9B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACRd,EAAID,EACFgB,KAAKgB,IAAI/B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACRuB,EACA,EACA,EAAItB,KAAKI,IAEX7B,EAAI6C,IACFnC,EAAIF,EACFiB,KAAKe,IAAI9B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACRd,EAAID,EACFgB,KAAKgB,IAAI/B,EAAIkB,UAAYH,KAAKI,GAAK,GACjCN,EAAWb,EAAIC,UAAUa,KACzBd,EAAIc,KACRuB,EACA,EACA,EAAItB,KAAKI,IAEX7B,EAAI8B,OAgIAuB,CAASrD,EAAKU,GAGZ4C,GAjPe,SAACtD,EAAKU,GAC3BV,EAAIiC,UAAY,IAChBjC,EAAIuD,WACF7C,EAAIF,EAAIE,EAAI8C,WAAa,EACzB9C,EAAID,EAAIC,EAAI8C,WAAa,EACzB9C,EAAI8C,WACJ9C,EAAI8C,YAENxD,EAAIyD,KAAO,iBACXzD,EAAIqB,UAAYP,EAAMJ,EAAIK,MAAMC,MAChChB,EAAI0D,SAAJ,UACKjC,KAAKkC,MAAMjD,EAAI8C,aAClB9C,EAAIF,EAAIE,EAAI8C,WAAa,EACzB9C,EAAID,EAAIC,EAAI8C,WAAa,GAE3BxD,EAAI0D,SAAJ,UACKjC,KAAKkC,MAAkB,GAAZjD,EAAIkD,QAClBlD,EAAIF,EAAIE,EAAI8C,WAAa,EAAI,GAC7B9C,EAAID,EAAIC,EAAI8C,WAAa,GAE3BxD,EAAI0D,SAAJ,UACKjC,KAAKkC,MAAMjD,EAAImD,aAClBnD,EAAIF,EACJE,EAAID,EAAIC,EAAI8C,WAAa,GA2NvBM,CAAe9D,EAAKU,GAElBA,EAAIqD,aACN/D,EAAIM,YACJN,EAAIE,YAAc,UAClBF,EAAIqB,UAAY,UAChBrB,EAAIiC,UAAY,EAChBjC,EAAI6C,IACFnC,EAAIF,EACJE,EAAID,EACJc,EAAWb,EAAIC,UAAUa,KAAOd,EAAIc,KAAO,EAC3C,EACA,EAAIC,KAAKI,IAEX7B,EAAIkC,cFvPGe,EAAc,cACdC,EAAe,eACfC,EAAe,eACfC,EAAc,cAEdY,EAAW,WACXC,EAAa,aACbC,EAAW,WAOpBC,EAAc,KAELrD,GAAK,mBACfkD,EAAW,CACVjD,KAAMiD,EACNhD,MAAO,UACPoD,QAAQ,eAAIH,GAAa,KAJX,cAMfA,EAAa,CACZlD,KAAMkD,EACNjD,MAAO,UACPoD,QAAQ,eAAIF,GAAW,KATT,cAWfA,EAAW,CACVnD,KAAMmD,EACNlD,MAAO,UACPoD,QAAQ,eAAIJ,GAAW,KAdT,GAkBLzC,EAAa,CACxB8C,QAAS,CACP7C,KAAM,GAER8C,KAAM,CACJ9C,KAAM,GAER+C,MAAO,CACL/C,KAAM,GAERgD,MAAO,CACLhD,KAAM,GAERiD,QAAS,CACPjD,KAAM,IAICkD,GAAc,EACdhC,GAAiB,EACjBX,GAAmB,EACnBuB,GAAoB,EACpBV,GAAc,EACd+B,GAAe,EACfC,GAAc,EACdC,GAAa,EACbC,GAAa,EACbC,GAAmB,EACnBC,GAAkB,EAClBC,GAAe,EACf9C,GAAc,EACd+C,GAAmB,EACnBC,GAAW,EAEhBC,EAAiB,CACrB,GACA,CACE,CAAE5E,EAAG,IAAKC,EAAG,KAAM7B,MAAO,KAAME,OAAQ,IACxC,CAAE0B,EAAG,IAAMC,EAAG,IAAK7B,MAAO,GAAIE,OAAQ,OAExC,CACE,CAAE0B,EAAG,KAAMC,EAAG,EAAG7B,MAAO,IAAKE,OAAQ,KACrC,CAAE0B,EAAG,KAAMC,EAAG,KAAM7B,MAAO,IAAKE,OAAQ,MAE1C,CACE,CAAE0B,EAAG,IAAMC,EAAG,EAAG7B,MAAO,GAAIE,OAAQ,IAAMuG,QAAQ,GAClD,CAAE7E,EAAG,EAAGC,EAAG,IAAM7B,MAAO,IAAME,OAAQ,GAAIuG,QAAQ,IAEpD,CACE,CAAE7E,EAAG,IAAMC,EAAG,EAAG7B,MAAO,GAAIE,OAAQ,IAAMuG,QAAQ,GAClD,CAAE7E,EAAG,IAAMC,EAAG,IAAM7B,MAAO,IAAME,OAAQ,GAAIuG,QAAQ,GACrD,CAAE7E,EAAG,KAAMC,EAAG,IAAM7B,MAAO,IAAKE,OAAQ,IACxC,CAAE0B,EAAG,IAAMC,EAAG,IAAK7B,MAAO,GAAIE,OAAQ,KACtC,CAAE0B,EAAG,IAAMC,EAAG,IAAK7B,MAAO,GAAIE,OAAQ,KACtC,CAAE0B,EAAG,KAAMC,EAAG,IAAK7B,MAAO,IAAKE,OAAQ,IACvC,CAAE0B,EAAG,KAAMC,EAAG,KAAM7B,MAAO,IAAKE,OAAQ,IACxC,CAAE0B,EAAG,EAAGC,EAAG,IAAK7B,MAAO,IAAME,OAAQ,IACrC,CAAE0B,EAAG,IAAMC,EAAG,KAAM7B,MAAO,IAAME,OAAQ,MAIzCwG,EAAU,EACVC,EAAU,EAERvH,EAAkB,SAAC,GAA0B,IAAxBe,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,QAClCqG,EAAUvG,EACVwG,EAAUtG,GAEDuG,EACTJ,EAAe3D,KAAKkC,MAAMlC,KAAKgE,SAAWL,EAAeM,SAE9CvF,EAAe,GAQtBwF,GAAkB,SAACjF,EAAKkF,GAAN,OAAmBlF,EAAIK,OAAS6E,EAAS7E,MAE3D8E,GAAmB,SAACnF,EAAKkF,GAAN,OAJF,SAAClF,EAAKkF,GAAN,OACrBnE,KAAKC,IAAIkE,EAASpF,EAAIE,EAAIF,GAAK,IAAMiB,KAAKC,IAAIkE,EAASnF,EAAIC,EAAID,GAAK,GAIpEqF,CAAepF,EAAKkF,IAPC,SAAClF,EAAKkF,GAAN,OAAmBlF,EAAIqF,KAAOH,EAASG,GAO3BC,CAAetF,EAAKkF,IAEjDK,GAAsB,SAACvF,EAAKkF,GAAN,OACT,IAAjBlF,EAAIsB,UAAwC,IAAtB4D,EAAS5D,UAE3BkE,GAA0B,SAACxF,EAAKkF,GACpC,SACGV,GACsB,YAAtBU,EAASjF,UACc,SAAtBiF,EAASjF,UACa,UAAtBiF,EAASjF,YAKW,UAAjBD,EAAIC,UAAwBG,EAAMJ,EAAIK,MAAMqD,QAAQwB,EAAS7E,QAmBhEoF,GAAa,SAACzF,GAAD,MAA0B,UAAjBA,EAAIC,UAE1ByF,GAAa,WACjB,IAAMC,EAAaC,OAAOC,KAAKzF,GAE/B,OAAOuF,EADa5E,KAAKkC,MAAMlC,KAAKgE,SAAWY,EAAWX,UAItDc,GAAa,SAAC,GAAD,IAAGzF,EAAH,EAAGA,KAAMP,EAAT,EAASA,EAAGC,EAAZ,EAAYA,EAAZ,MAAqB,CACtCsF,GAAIU,cACJC,KAAMC,MACNnG,EAAGA,GAAQiB,KAAKkC,MAAsB,KAAhBlC,KAAKgE,UAAmB,IAC9ChF,EAAGA,GAAQgB,KAAKkC,MAAsB,KAAhBlC,KAAKgE,UAAmB,IAC9C7D,UAAWH,KAAKI,GAAK,EACrBO,KAjLmB,IAkLnBwB,MApLoB,EAqLpBgD,OApLqB,EAqLrBC,UAnLyB,IAoLzBC,aAnL6B,IAoL7BC,SAlLuB,GAmLvBC,MAlLoB,GAmLpBC,gBAlLiB,EAmLjBzD,WA9KiC,GA+KjC0D,aAjL8B,GAkL9BC,eAnLgC,GAoLhCC,SAAS,EACTpG,MAAO,UACPqG,UAAU,EACVrF,SAAU,EACVR,KA7LmB,EA8LnB8F,IAAK,EACL3G,SAAU,QACVkD,WAAY,EACZ9C,KAAMA,GAAcqF,OAGXnG,GAAO,GAETsH,GAAI,EAAGA,GAnLQ,GAmLaA,KACnCtH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMkD,MAEtC,IAAK,IAAIsD,GAAI,EAAGA,GAtLQ,GAsLaA,KACnCtH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMiD,MAEtC,IAAK,IAAIuD,GAAI,EAAGA,GAzLQ,GAyLaA,KACnCtH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMmD,MAGtCsD,SAAShJ,iBACP,WACA,SAACC,GACe,MAAVA,EAAEgJ,MACJxH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMkD,OAExB,MAAVxF,EAAEgJ,MACJxH,GAAI,sBACCA,IADD,CAEFuG,GAAW,CAAEzF,KAAMkD,EAAYzD,EAAG8E,EAAS7E,EAAG8E,OAGpC,MAAV9G,EAAEgJ,MACJxH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMmD,OAExB,MAAVzF,EAAEgJ,MACJxH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMmD,EAAU1D,EAAG8E,EAAS7E,EAAG8E,OAEjD,MAAV9G,EAAEgJ,MACJxH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMiD,OAExB,MAAVvF,EAAEgJ,MACJxH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEzF,KAAMiD,EAAUxD,EAAG8E,EAAS7E,EAAG8E,OAEjD,MAAV9G,EAAEgJ,MACJ7C,GAAeA,GAEH,MAAVnG,EAAEgJ,MACJ1F,GAAoBA,GAER,MAAVtD,EAAEgJ,MACJ/C,GAAeA,GAEH,MAAVjG,EAAEgJ,MACJnE,GAAqBA,GAET,MAAV7E,EAAEgJ,MACJ7E,GAAeA,GAEH,MAAVnE,EAAEgJ,MACJ5C,GAAcA,GAEF,MAAVpG,EAAEgJ,MACJ9C,GAAgBA,GAEJ,MAAVlG,EAAEgJ,MACJxC,GAAgBA,GAEJ,MAAVxG,EAAEgJ,MACJ3C,GAAcA,GAEF,MAAVrG,EAAEgJ,MACJtF,GAAeA,GAEH,MAAV1D,EAAEgJ,MACJzC,GAAmBA,GAEP,MAAVvG,EAAEgJ,MACJ1C,GAAoBA,GAER,MAAVtG,EAAEgJ,MACJvC,GAAoBA,GAER,MAAVzG,EAAEgJ,MACJtC,GAAYA,GAEV1G,EAAEgJ,IAGQ,MAAVhJ,EAAEgJ,MACJxH,GAAO,IAEK,MAAVxB,EAAEgJ,MACJjC,EACEJ,EAAe3D,KAAKkC,MAAMlC,KAAKgE,SAAWL,EAAeM,aAG/D,GAGF,IAgCMgC,GAAsB,SAAChH,EAAKkF,GAChC,OAAOnE,KAAKkG,KAAK,SAACjH,EAAIF,EAAIoF,EAASpF,EAAM,GAAxB,SAA6BE,EAAID,EAAImF,EAASnF,EAAM,KAyOvE,IAAMmH,GAAiB,WACrB3H,GAAKG,SAAQ,SAACM,GACZT,GAAKG,SAAQ,SAACwF,GACRC,GAAiBnF,EAAKkF,KAEtBhB,GACAe,GAAgBjF,EAAKkF,IAxbN,SAAClF,EAAKkF,GAAN,OAAmBlF,EAAI2G,UAAYzB,EAASyB,SAyb3DQ,CAAiBnH,EAAKkF,IACtBK,GAAoBvF,EAAKkF,GArFnC,SAAqBlF,EAAKkF,GACxBlF,EAAIsB,SAAW,IACf4D,EAAS5D,SAAW,IAFc,MAIbpB,MAAIkH,IAAIpH,EAAIM,MAAMC,UAAU,IAJf,mBAI3B8G,EAJ2B,KAIvBC,EAJuB,KAInBC,EAJmB,OAKbrH,MAAIkH,IAAIlC,EAAS5E,MAAMC,UAAU,IALpB,mBAK3BiH,EAL2B,KAKvBC,EALuB,KAKnBC,EALmB,KAOlC1H,EAAI2H,MAAQ,IACZzC,EAASyC,MAAQ,IAEjB,IAAMC,EAAY,CAChB7G,KAAKkC,MAAMlC,KAAKkG,MAAMI,EAAKA,EAAKG,EAAKA,GAAM,IAC3CzG,KAAKkC,MAAMlC,KAAKkG,MAAMK,EAAKA,EAAKG,EAAKA,GAAM,IAC3C1G,KAAKkC,MAAMlC,KAAKkG,MAAMM,EAAKA,EAAKG,EAAKA,GAAM,KAGvCxE,EACJnC,KAAKkC,MAAMjD,EAAIkD,MAAQgC,EAAShC,OAAS,EAAI,GAAMnC,KAAKgE,SACpDjC,EAAa/B,KAAKkC,MACtBlC,KAAKkC,MAAMjD,EAAI8C,WAAaoC,EAASpC,YAAc,EAAI,EAAoB,EAAhB/B,KAAKgE,UAG5DyB,EAAezF,KAAKkC,MACxBlC,KAAKkC,MAAMjD,EAAIwG,aAAetB,EAASsB,cAAgB,EACrD,EACgB,EAAhBzF,KAAKgE,UAGH0B,EAAiB1F,KAAKkC,MAC1BlC,KAAKkC,MAAMjD,EAAIyG,eAAiBvB,EAASuB,gBAAkB,EACzD,EACgB,EAAhB1F,KAAKgE,UAGHjE,EACJC,KAAKkC,MAAMjD,EAAIc,KAAOoE,EAASpE,MAAQ,EAAI,GAAsB,GAAhBC,KAAKgE,SAClD8C,EAAS,CACbxC,GAAIU,cACJC,KAAMC,MACNnG,EAAGiB,KAAKkC,MAAMjD,EAAIF,EAAIoF,EAASpF,GAAK,EACpCC,EAAGgB,KAAKkC,MAAMjD,EAAID,EAAImF,EAASnF,GAAK,EACpCmB,UAAW,EACXyG,MAAO,EACP7E,WACEA,EAjgB6B,GAigBMA,EAjgBN,GAkgB/B0D,aAAcA,EAAe,EAAIA,EAAe,EAChDC,eAAgBA,EAAiB,EAAIA,EAAiB,EACtDvD,MAAOA,EAjhBW,EAihBaA,EAjhBb,EAkhBlBgD,OAjhBmB,EAkhBnBC,UAAWpF,KAAKkC,OACbjD,EAAImG,UAAYjB,EAASiB,WAAa,EAAoB,GAAhBpF,KAAKgE,SAAgB,GAElEqB,aAAcrF,KAAKkC,MAAMjD,EAAIoG,aAAelB,EAASkB,cAAgB,EACrEC,SAAUtF,KAAKkC,OACZjD,EAAIqG,SAAWnB,EAASmB,UAAY,EAAoB,EAAhBtF,KAAKgE,SAAe,GAE/DuB,MAAOvF,KAAKkC,OAAOjD,EAAIsG,MAAQpB,EAASoB,OAAS,EAAoB,EAAhBvF,KAAKgE,SAAe,GACzEwB,gBAAiBxF,KAAKkC,OACnBjD,EAAIuG,gBAAkBrB,EAASqB,iBAAmB,GAErDjG,MAAM,IAAD,OAAM8G,MAAIlH,IAAI0H,IACnBjB,UAAU,EACVmB,SAAS,EACTxF,KAAMC,EACNzB,KAAMA,EA7hBW,EA6hBWA,EA7hBX,EA8hBjB8F,IAAK,EACLtF,SAAU,EACV6B,WACEnD,EAAImD,WAAa+B,EAAS/B,WACtBnD,EAAImD,WAAa,EACjB+B,EAAS/B,WAAa,EAC5BzB,KAAMX,KAAKkC,MAAMjD,EAAI0B,KAAOwD,EAASxD,MAAQ,EA9gBtB,IA+gBvBrB,KAAML,EAAIK,MAEZd,GAAI,sBAAOA,IAAP,CAAasI,IAaTE,CAAY/H,EAAKkF,GAEZD,GAAgBjF,EAAKkF,IAvaT,SAAClF,EAAKkF,GAC/B,SACGV,GACsB,YAAtBU,EAASjF,UACc,SAAtBiF,EAASjF,UACa,UAAtBiF,EAASjF,aAMXc,KAAKkG,KAAK,SAACjH,EAAIF,EAAIoF,EAASpF,EAAM,GAAxB,SAA6BE,EAAID,EAAImF,EAASnF,EAAM,IAAKC,EAAIsG,QAIjD,UAAjBtG,EAAIC,UAAwBG,EAAMJ,EAAIK,MAAMqD,QAAQwB,EAAS7E,MAyZtD2H,CAAmBhI,EAAKkF,IAAaO,GAAWzF,KAClDkF,EAASiB,UAAYjB,EAASiB,UAAYnG,EAAIqG,SAC1CnB,EAASiB,WAAa,GACxBjB,EAAS+C,QAAS,EAClBxI,EAAayI,KAAK,CAAEpI,EAAGoF,EAASpF,EAAGC,EAAGmF,EAASnF,IAC/CC,EAAI0B,KAAO1B,EAAI0B,KAAOwD,EAASxD,MAE/BwD,EAASvD,YAAa,WAqChCtE,GAAc,SAAC,GAA0B,IAAxBgB,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,QAC9BM,QAAQC,IAAI2E,GACZlE,GAAKG,SAAQ,SAACM,GAAD,OAA4B,IAAnBA,EAAIqD,cAC1BxE,QAAQC,IAAIS,GAAK4I,MAAK,SAACnI,GAAD,OAASA,EAAIqD,eACnC9D,GAAKG,SAAQ,SAACM,GACPA,EAAIC,SAKP5B,GAAW2B,EAAIF,EAAoC,EAAhCe,EAAWb,EAAIC,UAAUa,MAC5CzC,GAAW2B,EAAIF,EAAoC,EAAhCe,EAAWb,EAAIC,UAAUa,MAC5CvC,GAAWyB,EAAID,EAAoC,EAAhCc,EAAWb,EAAIC,UAAUa,MAC5CvC,GAAWyB,EAAID,EAAoC,EAAhCc,EAAWb,EAAIC,UAAUa,MAE5CjC,QAAQC,IAAIkB,GACZA,EAAIqD,YAAa,EACjBI,EAAczD,GAEdyD,EAAc,KAbd5E,QAAQC,IAAI,sBAAuBkB,OAkE1BoI,OAlCf,WAuBE,OACE,qBAAKnJ,UAAU,MAAf,SACE,cAAC,EAAD,CACE7B,KAzBO,SAACkC,EAAKzB,GACZ4G,IACHnF,EAAIM,YACJN,EAAIqB,UAAY,UAChBrB,EAAIO,SAAS,EAAG,EAAGP,EAAI7B,OAAOS,MAAOoB,EAAI7B,OAAOW,QG5oB3B,SAACkB,GAC1BA,EAAIyD,KAAO,aACXzD,EAAIqB,UAAY,UAChB,IAAM0H,EAAU9I,GAAK+I,QAAO,SAACtI,GAAD,OAASA,EAAIK,OAASmD,KAAUwB,OACtDuD,EAAWhJ,GAAK+I,QAAO,SAACtI,GAAD,OAASA,EAAIK,OAASkD,KAAYyB,OACzDwD,EAASjJ,GAAK+I,QAAO,SAACtI,GAAD,OAASA,EAAIK,OAASiD,KAAU0B,OACvDT,GACFjF,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,4BAA6B,GAAI,IAC9C1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAJ,UAAgBqF,EAAhB,oCAA2D,GAAI,IAC/D/I,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAJ,UAAgBwF,EAAhB,mCAAyD,GAAI,KAC7DlJ,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAJ,UAAgBuF,EAAhB,qCAA6D,GAAI,KAC7DpE,GACF7E,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,wBAAyB,GAAI,OAE1C1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,yBAA0B,GAAI,MAEzCoB,GACF9E,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,mBAAoB,GAAI,OAErC1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,oBAAqB,GAAI,MAEpCgB,GACF1E,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,qBAAsB,GAAI,OAEvC1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,kBAAmB,GAAI,MAElCvB,GACFnC,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,qBAAsB,GAAI,OAEvC1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,kBAAmB,GAAI,MAElCsB,GACFhF,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,gCAAiC,GAAI,OAElD1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,iCAAkC,GAAI,MAEjDqB,GACF/E,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,2BAA4B,GAAI,OAE7C1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,4BAA6B,GAAI,MAE5CJ,GACFtD,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,uBAAwB,GAAI,OAEzC1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,uBAAwB,GAAI,MAEvCwB,GACFlF,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,qCAAsC,GAAI,OAEvD1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,sCAAuC,GAAI,MAEtDkB,GACF5E,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,6BAA8B,GAAI,OAE/C1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,8BAA+B,GAAI,MAElD1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAJ,sBAAoC,GAAI,KACxC1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAJ,uBAAqC,GAAI,OAEzC1D,EAAIqB,UAAY,UAChBrB,EAAI0D,SAAS,6BAA8B,GAAI,KH0jB7CyF,CAAYnJ,GAhXK,SAACzB,GACtB0B,GAAKG,SAAQ,SAACM,GACZA,EAAIiB,WAAaF,KAAKe,IAAIjE,EAAa,IACnCmC,EAAImG,UAAYnG,EAAIoG,eACtBpG,EAAImG,WAAa,IACbnG,EAAImG,WAAanG,EAAIoG,eACvBpG,EAAI2B,YAAa,IAGjB3B,EAAIsB,SAAW,IACjBtB,EAAIsB,SAAWtB,EAAIsB,SAAW,GAEhCtB,EAAI4G,IAAM5G,EAAI4G,IAAM,EAChB5G,EAAI4G,IAAM,IACZ5G,EAAIC,SAAW,UACND,EAAI4G,IAAM,IACnB5G,EAAIC,SAAW,OACND,EAAI4G,IAAM,KACnB5G,EAAIC,SAAW,QACND,EAAI4G,IAAM,KACnB5G,EAAIC,SAAW,QACfD,EAAI2G,UAAW,GACN3G,EAAI4G,IAAM,KAASvC,GAC5BrE,EAAIC,SAAW,UACfD,EAAI2G,UAAW,EACf3G,EAAIkG,OAAS,GACJ7B,IACTrE,EAAIiI,QAAS,MAsVbS,CAAe7K,GAxDnB0B,GAEGG,SAAQ,SAACM,GACRA,EAAI0B,KAAO1B,EAAI0B,KAAO,EAClB1B,EAAI0B,MAAQ,GAAK4C,IACnBtE,EAAIiI,QAAS,MArBnB1I,GAAOA,GAAK+I,QAAO,SAACtI,GAAD,OAAUA,EAAIiI,UAEjB,SAAC3I,GACb2E,GACFa,EAAYpF,SAAQ,SAACiJ,GACfA,EAAKhE,SAAWP,EAClB9E,EAAIqB,UAAY,UAEhBrB,EAAIqB,UAAY,UAElBrB,EAAIO,SAAS8I,EAAK7I,EAAG6I,EAAK5I,EAAG4I,EAAKzK,MAAOyK,EAAKvK,WAiE9CwK,CAAUtJ,GACN0E,GACF3E,EAASC,EAAKC,IAnMpBA,GAAKG,SAAQ,SAACM,GACRA,EAAI2H,MAAQ,GACd3H,EAAI2H,MAAQ3H,EAAI2H,MAAQ,EACxB3H,EAAI0G,SAAU,GAEd1G,EAAI0G,SAAU,KAnJlBnH,GAAKG,SAAQ,SAACM,GACZA,EAAIsC,KAAOC,EACXvC,EAAI6I,MAAQtJ,GAAK+I,QACf,SAACpD,GAAD,OACEA,EAASG,KAAOrF,EAAIqF,IACpBG,GAAwBxF,EAAKkF,IAC7B8B,GAAoBhH,EAAKkF,GAAYlF,EAAIwG,gBAE7CxG,EAAI8I,UAAYvJ,GAAK+I,QACnB,SAACpD,GAAD,OACEA,EAASG,KAAOrF,EAAIqF,IACpBG,GAAwBxF,EAAKkF,IAC7B8B,GAAoBhH,EAAKkF,GAAYlF,EAAIyG,qBAM/ClH,GAAKG,SAAQ,SAACM,GACZ,IAAIA,EAAI0G,QAAR,CAGA1G,EAAIsC,KAAOC,EACX,IAAMwG,EAAYxJ,GAAK+I,QACrB,SAACpD,GAAD,OACEnE,KAAKC,IAAIkE,EAASpF,EAAIE,EAAIF,GAAKE,EAAI8C,YACnC/B,KAAKC,IAAIkE,EAASnF,EAAIC,EAAID,GAAKC,EAAI8C,YACnCoC,EAASG,KAAOrF,EAAIqF,MAElB2D,EAAiBD,EAAUT,QAC/B,SAACpD,GAAD,OAAcO,GAAWP,IAAaA,EAASG,KAAOrF,EAAIqF,MAGtD4D,EAAUD,EAAeV,QAAO,SAACpD,GAAD,OACpCM,GAAwBN,EAAUlF,MAEpC,GAAIiJ,EAAQjE,OAAS,EAAG,CACtB,IAAMkE,EAASD,EAAQ,GACvBjJ,EAAIkB,UAAYH,KAAKI,GAAKJ,KAAKoI,MAAMD,EAAOnJ,EAAIC,EAAID,EAAGmJ,EAAOpJ,EAAIE,EAAIF,GACtEE,EAAIsC,KAAOE,EAGb,IAAM4G,EAAQJ,EAAeV,QAC3B,SAACpD,GAAD,OACEhB,GACAe,GAAgBjF,EAAKkF,IACrBK,GAAoBvF,EAAKkF,IACzBO,GAAWzF,MAEf,GAAIoJ,EAAMpE,OAAS,EAAG,CACpB,IAAMqE,EAAOD,EAAM,GACnBpJ,EAAIkB,UAAYH,KAAKoI,MAAME,EAAKtJ,EAAIC,EAAID,EAAGsJ,EAAKvJ,EAAIE,EAAIF,GACxDE,EAAIsC,KAAOI,EAGb,GAAIyB,GAAcnE,EAAI0B,KAvWT,IAuW0B,CACrC,IAAMmH,EAAQE,EAAUT,QAAO,SAACpD,GAAD,OAC7BM,GAAwBxF,EAAKkF,MAE/B,GAAI2D,EAAM7D,OAAS,EAAG,CACpB,IAAMsE,EAAOT,EAAM,GACnB7I,EAAIkB,UAAYH,KAAKoI,MAAMG,EAAKvJ,EAAIC,EAAID,EAAGuJ,EAAKxJ,EAAIE,EAAIF,GACxDE,EAAIsC,KAAOG,GAIXzC,EAAIF,EAAI,MACVE,EAAIkB,UAAYH,KAAKI,IAEnBnB,EAAIF,EAAI,IACVE,EAAIkB,UAAY,GAEdlB,EAAID,EAAI,MACVC,EAAIkB,UAAa,EAAIH,KAAKI,GAAM,GAE9BnB,EAAID,EAAI,IACVC,EAAIkB,UAAYH,KAAKI,GAAK,GAG5BnB,EAAIkB,WACDH,KAAKI,GAAK,GAAMJ,KAAKgE,SAAWhE,KAAKI,GAAM,EAAInB,EAAIkB,cAKxD3B,GAAKG,SAAQ,SAACM,GACZ,IAAIA,EAAI0G,QAAR,CAGA,IAAI6C,EACJ,OAAQvJ,EAAIC,UACV,IAAK,UACHsJ,EAAc,EACd,MACF,IAAK,OACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,IAAK,UACHA,EAAc,EACd,MACF,QACEA,EAAc,EAElB,IAAMC,EAAexJ,EAAI2B,WAAa,EAAI,EAAI,EACxC8H,EACJzJ,EAAIF,EAAIiB,KAAKe,IAAI9B,EAAIkB,WAAalB,EAAIkD,MAAQqG,EAAcC,EACxDE,EACJ1J,EAAID,EAAIgB,KAAKgB,IAAI/B,EAAIkB,WAAalB,EAAIkD,MAAQqG,EAAcC,EAE1DG,GAAkB,EACtB7E,EAAYpF,SAAQ,SAACiJ,GACnB,GAAIA,EAAKhE,SAAWP,EAGlB,OAFApE,EAAIF,EAAI2J,OACRzJ,EAAID,EAAI2J,GAIRD,GAAWd,EAAK7I,GAChB2J,GAAWd,EAAK7I,EAAI6I,EAAKzK,OACzBwL,GAAWf,EAAK5I,GAChB2J,GAAWf,EAAK5I,EAAI4I,EAAKvK,SAGzB4B,EAAIkB,UAAYH,KAAKI,GAAKnB,EAAIkB,UAC9ByI,GAAkB,MAIjBA,IACH3J,EAAIF,EAAI2J,EACRzJ,EAAID,EAAI2J,OA+MRxC,KAjCkB,SAAC5H,GACH,OAAhBmE,IAIJnE,EAAIM,YACJN,EAAIE,YAAc,UAClBF,EAAIiC,UAAY,EAChBjC,EAAIqB,UAAY,UAChBrB,EAAIsK,KAAK,IAAM,EAAG,IAAM,KACxBtK,EAAI8B,OACJ9B,EAAIkC,UAuBAqI,CAAgBvK,KAOdjC,YAAaA,GACbC,gBAAiBA,OIxqBVwM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS9L,OACP,cAAC,IAAM+L,WAAP,UACE,cAAC,GAAD,MAEF1D,SAAS2D,eAAe,SAM1BX,O","file":"static/js/main.61f1e313.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasSupport\":\"AntHill_canvasSupport__1XU9R\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { hex, rgb } from \"color-convert\";\n\nimport generateStupidName from \"sillyname\";\n\nimport \"./App.css\";\nimport AntHill from \"./components/Anthill\";\nimport { drawAnts } from \"./drawAnts\";\nimport { displayHelp } from \"./displayHelp\";\n\nconst DEFAULT_SPEED = 1;\nconst DEFAULT_ENERGY = 2;\nconst DEFAULT_FOOD = 4000;\nconst DEFAULT_HIT_POINTS = 100;\nconst DEFAULT_MAX_HIT_POINTS = 100;\nconst DEFAULT_SIZE = 1;\nconst DEFAULT_STRENGTH = 40;\nconst DEFAULT_REACH = 30;\nconst DEFAULT_DR = 5;\n\nexport const DEFAULT_PERCEPTION = 80;\nexport const DEFAULT_TRACKING = 80;\n\nexport const DEFAULT_SENSOR_AREA = 80;\n\nexport const NORMAL_MODE = \"NORMAL_MODE\";\nexport const FLEEING_MODE = \"FLEEING_MODE\";\nexport const HUNTING_MODE = \"HUNTING_MODE\";\nexport const MATING_MODE = \"MATING_MODE\";\n\nexport const HEN_SIDE = \"HEN_SIDE\";\nexport const VIPER_SIDE = \"VIPER_SIDE\";\nexport const FOX_SIDE = \"FOX_SIDE\";\n\nconst NUMBER_PER_SIDE = 30;\n\nconst FOOD_LOW = 1000;\nconst FOOD_BOOST_NEWBORN = 700;\n\nlet selectedAnt = null;\n\nexport const sides = {\n  [HEN_SIDE]: {\n    side: HEN_SIDE,\n    color: \"#995500\",\n    canKill: { [VIPER_SIDE]: true },\n  },\n  [VIPER_SIDE]: {\n    side: VIPER_SIDE,\n    color: \"#44CC44\",\n    canKill: { [FOX_SIDE]: true },\n  },\n  [FOX_SIDE]: {\n    side: FOX_SIDE,\n    color: \"#CC4444\",\n    canKill: { [HEN_SIDE]: true },\n  },\n};\n\nexport const maturities = {\n  newborn: {\n    size: 2,\n  },\n  baby: {\n    size: 4,\n  },\n  child: {\n    size: 5,\n  },\n  adult: {\n    size: 8,\n  },\n  elderly: {\n    size: 7,\n  },\n};\n\nexport let displayAnts = true;\nexport let displayAntenna = false;\nexport let displayWillBreed = false;\nexport let displaySensorArea = false;\nexport let displayEyes = true;\nexport let displayWalls = true;\nexport let enableBreed = true;\nexport let enablePrey = false;\nexport let enableGate = false;\nexport let enableSenescence = true;\nexport let enableDieOnFood = true;\nexport let displayDebug = false;\nexport let displayFood = false;\nexport let enableChildKills = false;\nexport let isPaused = false;\n\nconst WALL_TEMPLATES = [\n  [],\n  [\n    { x: 100, y: 1400, width: 3800, height: 10 },\n    { x: 2000, y: 100, width: 10, height: 1300 },\n  ],\n  [\n    { x: 1900, y: 0, width: 200, height: 950 },\n    { x: 1900, y: 1050, width: 200, height: 950 },\n  ],\n  [\n    { x: 2000, y: 0, width: 10, height: 2000, isGate: true },\n    { x: 0, y: 1000, width: 4000, height: 10, isGate: true },\n  ],\n  [\n    { x: 2000, y: 0, width: 10, height: 2000, isGate: true },\n    { x: 1000, y: 1000, width: 2000, height: 10, isGate: true },\n    { x: 1600, y: 1000, width: 800, height: 10 },\n    { x: 1000, y: 600, width: 10, height: 800 },\n    { x: 3000, y: 600, width: 10, height: 800 },\n    { x: 1600, y: 400, width: 800, height: 10 },\n    { x: 1600, y: 1600, width: 800, height: 10 },\n    { x: 0, y: 600, width: 1000, height: 10 },\n    { x: 3000, y: 1400, width: 1000, height: 10 },\n  ],\n];\n\nlet cursorX = 0;\nlet cursorY = 0;\n\nconst handleMouseMove = ({ canvasX, canvasY }) => {\n  cursorX = canvasX;\n  cursorY = canvasY;\n};\nexport let listOfWalls =\n  WALL_TEMPLATES[Math.floor(Math.random() * WALL_TEMPLATES.length)];\n\nexport const listOfDeaths = [];\n\nconst areAntsSameGeneration = (ant, otherAnt) =>\n  ant.generation === otherAnt.generation;\nconst areNotSameAnts = (ant, otherAnt) => ant.id !== otherAnt.id;\nconst canBothAntsBreed = (ant, otherAnt) => ant.canBreed && otherAnt.canBreed;\nconst areCloseEnough = (ant, otherAnt) =>\n  Math.abs(otherAnt.x - ant.x) < 30 && Math.abs(otherAnt.y - ant.y) < 30;\nconst areAntsSameSide = (ant, otherAnt) => ant.side === otherAnt.side;\n\nconst isContactBetween = (ant, otherAnt) =>\n  areCloseEnough(ant, otherAnt) && areNotSameAnts(ant, otherAnt);\n\nconst canBothAntsHaveBaby = (ant, otherAnt) =>\n  ant.bredRest === 0 && otherAnt.bredRest === 0;\n\nconst isAntAThreatForOtherAnt = (ant, otherAnt) => {\n  if (\n    !enableChildKills &&\n    (otherAnt.maturity === \"newborn\" ||\n      otherAnt.maturity === \"baby\" ||\n      otherAnt.maturity === \"child\")\n  ) {\n    return false;\n  }\n\n  return ant.maturity === \"adult\" && sides[ant.side].canKill[otherAnt.side];\n};\nconst canAntKillOtherAnt = (ant, otherAnt) => {\n  if (\n    !enableChildKills &&\n    (otherAnt.maturity === \"newborn\" ||\n      otherAnt.maturity === \"baby\" ||\n      otherAnt.maturity === \"child\")\n  ) {\n    return false;\n  }\n\n  if (\n    Math.sqrt((ant.x - otherAnt.x) ** 2 + (ant.y - otherAnt.y) ** 2) > ant.reach\n  ) {\n    return false;\n  }\n  return ant.maturity === \"adult\" && sides[ant.side].canKill[otherAnt.side];\n};\nconst isAntAdult = (ant) => ant.maturity === \"adult\";\n\nconst randomSide = () => {\n  const sidesArray = Object.keys(sides);\n  const randomIndex = Math.floor(Math.random() * sidesArray.length);\n  return sidesArray[randomIndex];\n};\n\nconst antFactory = ({ side, x, y }) => ({\n  id: uuidv4(),\n  name: generateStupidName(),\n  x: x ? x : Math.floor(Math.random() * 3600) + 200,\n  y: y ? y : Math.floor(Math.random() * 1600) + 200,\n  direction: Math.PI / 2,\n  food: DEFAULT_FOOD,\n  speed: DEFAULT_SPEED,\n  energy: DEFAULT_ENERGY,\n  hitPoints: DEFAULT_HIT_POINTS,\n  maxHitPoints: DEFAULT_MAX_HIT_POINTS,\n  strength: DEFAULT_STRENGTH,\n  reach: DEFAULT_REACH,\n  damageReduction: DEFAULT_DR,\n  sensorArea: DEFAULT_SENSOR_AREA,\n  trackingArea: DEFAULT_TRACKING,\n  perceptionArea: DEFAULT_PERCEPTION,\n  isTired: false,\n  color: \"#44CCCC\",\n  canBreed: false,\n  bredRest: 0,\n  size: DEFAULT_SIZE,\n  age: 1,\n  maturity: \"child\",\n  generation: 1,\n  side: side ? side : randomSide(),\n});\n\nexport let ants = [];\n\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: VIPER_SIDE })];\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: HEN_SIDE })];\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: FOX_SIDE })];\n}\n\ndocument.addEventListener(\n  \"keydown\",\n  (e) => {\n    if (e.key === \"v\") {\n      ants = [...ants, antFactory({ side: VIPER_SIDE })];\n    }\n    if (e.key === \"V\") {\n      ants = [\n        ...ants,\n        antFactory({ side: VIPER_SIDE, x: cursorX, y: cursorY }),\n      ];\n    }\n    if (e.key === \"f\") {\n      ants = [...ants, antFactory({ side: FOX_SIDE })];\n    }\n    if (e.key === \"F\") {\n      ants = [...ants, antFactory({ side: FOX_SIDE, x: cursorX, y: cursorY })];\n    }\n    if (e.key === \"h\") {\n      ants = [...ants, antFactory({ side: HEN_SIDE })];\n    }\n    if (e.key === \"H\") {\n      ants = [...ants, antFactory({ side: HEN_SIDE, x: cursorX, y: cursorY })];\n    }\n    if (e.key === \"B\") {\n      enableBreed = !enableBreed;\n    }\n    if (e.key === \"b\") {\n      displayWillBreed = !displayWillBreed;\n    }\n    if (e.key === \"a\") {\n      displayAnts = !displayAnts;\n    }\n    if (e.key === \"s\") {\n      displaySensorArea = !displaySensorArea;\n    }\n    if (e.key === \"e\") {\n      displayEyes = !displayEyes;\n    }\n    if (e.key === \"k\") {\n      enablePrey = !enablePrey;\n    }\n    if (e.key === \"w\") {\n      displayWalls = !displayWalls;\n    }\n    if (e.key === \"d\") {\n      displayDebug = !displayDebug;\n    }\n    if (e.key === \"g\") {\n      enableGate = !enableGate;\n    }\n    if (e.key === \"o\") {\n      displayFood = !displayFood;\n    }\n    if (e.key === \"x\") {\n      enableDieOnFood = !enableDieOnFood;\n    }\n    if (e.key === \"c\") {\n      enableSenescence = !enableSenescence;\n    }\n    if (e.key === \"i\") {\n      enableChildKills = !enableChildKills;\n    }\n    if (e.key === \" \") {\n      isPaused = !isPaused;\n    }\n    if (e.key === \"D\") {\n      debugger;\n    }\n    if (e.key === \"K\") {\n      ants = [];\n    }\n    if (e.key === \">\") {\n      listOfWalls =\n        WALL_TEMPLATES[Math.floor(Math.random() * WALL_TEMPLATES.length)];\n    }\n  },\n  false\n);\n\nconst handleBirthday = (frameCount) => {\n  ants.forEach((ant) => {\n    ant.oscillator = Math.cos(frameCount / 10);\n    if (ant.hitPoints < ant.maxHitPoints) {\n      ant.hitPoints += 0.25;\n      if (ant.hitPoints >= ant.maxHitPoints) {\n        ant.isInjuried = false;\n      }\n    }\n    if (ant.bredRest > 0) {\n      ant.bredRest = ant.bredRest - 1;\n    }\n    ant.age = ant.age + 1;\n    if (ant.age < 200) {\n      ant.maturity = \"newborn\";\n    } else if (ant.age < 400) {\n      ant.maturity = \"baby\";\n    } else if (ant.age < 1200) {\n      ant.maturity = \"child\";\n    } else if (ant.age < 8000) {\n      ant.maturity = \"adult\";\n      ant.canBreed = true;\n    } else if (ant.age < 10000 && enableSenescence) {\n      ant.maturity = \"elderly\";\n      ant.canBreed = false;\n      ant.energy = 5;\n    } else if (enableSenescence) {\n      ant.isDead = true;\n    }\n  });\n};\n\nconst distanceBetweenAnts = (ant, otherAnt) => {\n  return Math.sqrt((ant.x - otherAnt.x) ** 2 + (ant.y - otherAnt.y) ** 2);\n};\n\nconst handlePerceptions = () => {\n  ants.forEach((ant) => {\n    ant.mode = NORMAL_MODE;\n    ant.preys = ants.filter(\n      (otherAnt) =>\n        otherAnt.id !== ant.id &&\n        isAntAThreatForOtherAnt(ant, otherAnt) &&\n        distanceBetweenAnts(ant, otherAnt) < ant.trackingArea\n    );\n    ant.predators = ants.filter(\n      (otherAnt) =>\n        otherAnt.id !== ant.id &&\n        isAntAThreatForOtherAnt(ant, otherAnt) &&\n        distanceBetweenAnts(ant, otherAnt) < ant.perceptionArea\n    );\n  });\n};\n\nconst handleDirectionChange = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    ant.mode = NORMAL_MODE;\n    const neighbors = ants.filter(\n      (otherAnt) =>\n        Math.abs(otherAnt.x - ant.x) < ant.sensorArea &&\n        Math.abs(otherAnt.y - ant.y) < ant.sensorArea &&\n        otherAnt.id !== ant.id\n    );\n    const adultNeighbors = neighbors.filter(\n      (otherAnt) => isAntAdult(otherAnt) && otherAnt.id !== ant.id\n    );\n\n    const threats = adultNeighbors.filter((otherAnt) =>\n      isAntAThreatForOtherAnt(otherAnt, ant)\n    );\n    if (threats.length > 0) {\n      const threat = threats[0];\n      ant.direction = Math.PI + Math.atan2(threat.y - ant.y, threat.x - ant.x);\n      ant.mode = FLEEING_MODE;\n    }\n\n    const mates = adultNeighbors.filter(\n      (otherAnt) =>\n        enableBreed &&\n        areAntsSameSide(ant, otherAnt) &&\n        canBothAntsHaveBaby(ant, otherAnt) &&\n        isAntAdult(ant)\n    );\n    if (mates.length > 0) {\n      const mate = mates[0];\n      ant.direction = Math.atan2(mate.y - ant.y, mate.x - ant.x);\n      ant.mode = MATING_MODE;\n    }\n\n    if (enablePrey || ant.food < FOOD_LOW) {\n      const preys = neighbors.filter((otherAnt) =>\n        isAntAThreatForOtherAnt(ant, otherAnt)\n      );\n      if (preys.length > 0) {\n        const prey = preys[0];\n        ant.direction = Math.atan2(prey.y - ant.y, prey.x - ant.x);\n        ant.mode = HUNTING_MODE;\n      }\n    }\n\n    if (ant.x > 4000) {\n      ant.direction = Math.PI;\n    }\n    if (ant.x < 0) {\n      ant.direction = 0;\n    }\n    if (ant.y > 2000) {\n      ant.direction = (3 * Math.PI) / 2;\n    }\n    if (ant.y < 0) {\n      ant.direction = Math.PI / 2;\n    }\n\n    ant.direction =\n      -Math.PI / 18 + (Math.random() * Math.PI) / 9 + ant.direction;\n  });\n};\n\nconst handleMoveAnts = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    let speedFactor;\n    switch (ant.maturity) {\n      case \"newborn\":\n        speedFactor = 0;\n        break;\n      case \"baby\":\n        speedFactor = 1;\n        break;\n      case \"child\":\n        speedFactor = 2;\n        break;\n      case \"adult\":\n        speedFactor = 3;\n        break;\n      case \"elderly\":\n        speedFactor = 1;\n        break;\n      default:\n        speedFactor = 1;\n    }\n    const injuryFactor = ant.isInjuried ? 2 / 3 : 1;\n    const wantedX =\n      ant.x + Math.cos(ant.direction) * ant.speed * speedFactor * injuryFactor;\n    const wantedY =\n      ant.y + Math.sin(ant.direction) * ant.speed * speedFactor * injuryFactor;\n\n    let isAntInsideWall = false;\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ant.x = wantedX;\n        ant.y = wantedY;\n        return;\n      }\n      if (\n        wantedX >= wall.x &&\n        wantedX <= wall.x + wall.width &&\n        wantedY >= wall.y &&\n        wantedY <= wall.y + wall.height\n      ) {\n        // ant.direction = Math.PI + Math.atan2(wall.y - ant.y, wall.x - ant.x);\n        ant.direction = Math.PI + ant.direction;\n        isAntInsideWall = true;\n      }\n    });\n\n    if (!isAntInsideWall) {\n      ant.x = wantedX;\n      ant.y = wantedY;\n    }\n  });\n};\n\nconst handleFatigue = () => {\n  ants.forEach((ant) => {\n    if (ant.brood > 0) {\n      ant.brood = ant.brood - 1;\n      ant.isTired = true;\n    } else {\n      ant.isTired = false;\n    }\n  });\n};\n\nfunction handleBirth(ant, otherAnt) {\n  ant.bredRest = 400;\n  otherAnt.bredRest = 400;\n\n  const [r1, g1, b1] = hex.rgb(ant.color.substring(1));\n  const [r2, g2, b2] = hex.rgb(otherAnt.color.substring(1));\n\n  ant.brood = 100;\n  otherAnt.brood = 100;\n\n  const rgbNewAnt = [\n    Math.floor(Math.sqrt((r1 * r1 + r2 * r2) / 2)),\n    Math.floor(Math.sqrt((g1 * g1 + g2 * g2) / 2)),\n    Math.floor(Math.sqrt((b1 * b1 + b2 * b2) / 2)),\n  ];\n\n  const speed =\n    Math.floor(ant.speed + otherAnt.speed) / 2 - 0.5 + Math.random();\n  const sensorArea = Math.floor(\n    Math.floor(ant.sensorArea + otherAnt.sensorArea) / 2 - 4 + Math.random() * 8\n  );\n\n  const trackingArea = Math.floor(\n    Math.floor(ant.trackingArea + otherAnt.trackingArea) / 2 -\n      4 +\n      Math.random() * 8\n  );\n\n  const perceptionArea = Math.floor(\n    Math.floor(ant.perceptionArea + otherAnt.perceptionArea) / 2 -\n      4 +\n      Math.random() * 8\n  );\n\n  const size =\n    Math.floor(ant.size + otherAnt.size) / 2 - 0.2 + Math.random() * 0.4;\n  const newAnt = {\n    id: uuidv4(),\n    name: generateStupidName(),\n    x: Math.floor(ant.x + otherAnt.x) / 2,\n    y: Math.floor(ant.y + otherAnt.y) / 2,\n    direction: 0,\n    brood: 0,\n    sensorArea:\n      sensorArea > DEFAULT_SENSOR_AREA ? sensorArea : DEFAULT_SENSOR_AREA,\n    trackingArea: trackingArea > 0 ? trackingArea : 0,\n    perceptionArea: perceptionArea > 0 ? perceptionArea : 0,\n    speed: speed > DEFAULT_SPEED ? speed : DEFAULT_SPEED,\n    energy: DEFAULT_ENERGY,\n    hitPoints: Math.floor(\n      (ant.hitPoints + otherAnt.hitPoints) / 2 + Math.random() * 10 - 5\n    ),\n    maxHitPoints: Math.floor(ant.maxHitPoints + otherAnt.maxHitPoints) / 2,\n    strength: Math.floor(\n      (ant.strength + otherAnt.strength) / 2 + Math.random() * 4 - 2\n    ),\n    reach: Math.floor((ant.reach + otherAnt.reach) / 2 + Math.random() * 4 - 2),\n    damageReduction: Math.floor(\n      (ant.damageReduction + otherAnt.damageReduction) / 2\n    ),\n    color: `#${rgb.hex(rgbNewAnt)}`,\n    canBreed: false,\n    hasBred: false,\n    mode: NORMAL_MODE,\n    size: size > DEFAULT_SIZE ? size : DEFAULT_SIZE,\n    age: 0,\n    bredRest: 0,\n    generation:\n      ant.generation > otherAnt.generation\n        ? ant.generation + 1\n        : otherAnt.generation + 1,\n    food: Math.floor(ant.food + otherAnt.food) / 2 + FOOD_BOOST_NEWBORN,\n    side: ant.side,\n  };\n  ants = [...ants, newAnt];\n}\n\nconst handleContacts = () => {\n  ants.forEach((ant) => {\n    ants.forEach((otherAnt) => {\n      if (isContactBetween(ant, otherAnt)) {\n        if (\n          enableBreed &&\n          areAntsSameSide(ant, otherAnt) &&\n          canBothAntsBreed(ant, otherAnt) &&\n          canBothAntsHaveBaby(ant, otherAnt)\n        ) {\n          handleBirth(ant, otherAnt);\n        } else {\n          if (!areAntsSameSide(ant, otherAnt)) {\n            if (canAntKillOtherAnt(ant, otherAnt) && isAntAdult(ant)) {\n              otherAnt.hitPoints = otherAnt.hitPoints - ant.strength;\n              if (otherAnt.hitPoints <= 0) {\n                otherAnt.isDead = true;\n                listOfDeaths.push({ x: otherAnt.x, y: otherAnt.y });\n                ant.food = ant.food + otherAnt.food;\n              } else {\n                otherAnt.isInjuried = true;\n              }\n            }\n          }\n        }\n      }\n    });\n  });\n};\n\nconst handleDeaths = () => {\n  ants = ants.filter((ant) => !ant.isDead);\n};\nconst drawWalls = (ctx) => {\n  if (displayWalls) {\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ctx.fillStyle = \"#333333\";\n      } else {\n        ctx.fillStyle = \"#888888\";\n      }\n      ctx.fillRect(wall.x, wall.y, wall.width, wall.height);\n    });\n  }\n};\n\nconst handleFood = () => {\n  ants\n    //    .filter((ant) => ant.maturity === \"adult\" || ant.maturity === \"elderly\")\n    .forEach((ant) => {\n      ant.food = ant.food - 1;\n      if (ant.food <= 0 && enableDieOnFood) {\n        ant.isDead = true;\n      }\n    });\n};\n\nconst handleClick = ({ canvasX, canvasY }) => {\n  console.log(selectedAnt);\n  ants.forEach((ant) => ant.isSelected === false);\n  console.log(ants.find((ant) => ant.isSelected));\n  ants.forEach((ant) => {\n    if (!ant.maturity) {\n      console.log(\"No maturity for ant\", ant);\n      return;\n    }\n    if (\n      canvasX >= ant.x - maturities[ant.maturity].size * 3 &&\n      canvasX <= ant.x + maturities[ant.maturity].size * 3 &&\n      canvasY >= ant.y - maturities[ant.maturity].size * 3 &&\n      canvasY <= ant.y + maturities[ant.maturity].size * 3\n    ) {\n      console.log(ant);\n      ant.isSelected = true;\n      selectedAnt = ant;\n    } else {\n      selectedAnt = null;\n    }\n  });\n};\n\nconst drawSelectedAnt = (ctx) => {\n  if (selectedAnt === null) {\n    return;\n  }\n\n  ctx.beginPath();\n  ctx.strokeStyle = \"#FFFF00\";\n  ctx.lineWidth = 2;\n  ctx.fillStyle = \"#000000\";\n  ctx.rect(3000, 0, 1000, 1000);\n  ctx.fill();\n  ctx.stroke();\n};\n\nfunction App() {\n  const draw = (ctx, frameCount) => {\n    if (!isPaused) {\n      ctx.beginPath();\n      ctx.fillStyle = \"#202020\";\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      displayHelp(ctx);\n      handleBirthday(frameCount);\n      handleFood();\n      handleDeaths();\n      drawWalls(ctx);\n      if (displayAnts) {\n        drawAnts(ctx, ants);\n      }\n      handleFatigue(ants);\n      handlePerceptions();\n      handleDirectionChange();\n      handleMoveAnts();\n      handleContacts();\n      drawSelectedAnt(ctx);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <AntHill\n        draw={draw}\n        handleClick={handleClick}\n        handleMouseMove={handleMouseMove}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useRef, useEffect } from 'react';\nimport styles from './AntHill.module.css';\n\nconst CANVAS_WIDTH = 4000;\nconst CANVAS_HEIGHT = 2000;\n\nconst AntHill = (props) => {\n  const canvasRef = useRef(null);\n  const { draw, handleClick, handleMouseMove } = props;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    canvas.addEventListener('mousemove', (e) => {\n      const canvasWidth = canvas.getBoundingClientRect().width;\n      const canvasHeight = canvas.getBoundingClientRect().height;\n      const canvasX = e.clientX*CANVAS_WIDTH/canvasWidth;\n      const canvasY = e.clientY*CANVAS_HEIGHT/canvasHeight;\n      handleMouseMove({canvasX, canvasY});\n    }, false);\n    canvas.addEventListener('click', (e) => {\n      const canvasWidth = canvas.getBoundingClientRect().width;\n      const canvasHeight = canvas.getBoundingClientRect().height;\n      const canvasX = e.clientX*CANVAS_WIDTH/canvasWidth;\n      const canvasY = e.clientY*CANVAS_HEIGHT/canvasHeight;\n      handleClick({canvasX, canvasY});\n    }, false);\n\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw]);\n\n  console.log(window.innerWidth / 2);\n  console.log(window.innerHeight/ 2);\n  return <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} className={styles.canvasSupport} ref={canvasRef}{...props}></canvas>\n};\n\nexport default AntHill;","import { hex, hsl } from \"color-convert\";\nimport {\n  sides,\n  listOfDeaths,\n  displayWillBreed,\n  displayAntenna,\n  displaySensorArea,\n  displayEyes,\n  displayFood,\n  maturities,\n  NORMAL_MODE,\n  FLEEING_MODE,\n  HUNTING_MODE,\n  MATING_MODE,\n} from \"./App\";\n\nconst drawSensorArea = (ctx, ant) => {\n  ctx.lineWidth = 0.25;\n  ctx.strokeRect(\n    ant.x - ant.sensorArea / 2,\n    ant.y - ant.sensorArea / 2,\n    ant.sensorArea,\n    ant.sensorArea\n  );\n  ctx.font = \"16px monospace\";\n  ctx.fillStyle = sides[ant.side].color;\n  ctx.fillText(\n    `${Math.floor(ant.sensorArea)}`,\n    ant.x - ant.sensorArea / 2,\n    ant.y - ant.sensorArea / 2\n  );\n  ctx.fillText(\n    `${Math.floor(ant.speed * 10)}`,\n    ant.x + ant.sensorArea / 2 - 12,\n    ant.y - ant.sensorArea / 2\n  );\n  ctx.fillText(\n    `${Math.floor(ant.generation)}`,\n    ant.x,\n    ant.y - ant.sensorArea / 2\n  );\n};\n\nconst drawEyes = (ctx, ant) => {\n  const [h, s, l] = hex.hsl(sides[ant.side].color.substring(1));\n\n  const eyeSize = 4;\n  ctx.beginPath();\n  //  ctx.fillStyle = `#${hsl.hex(h, s, l + 30)}`;\n  ctx.fillStyle = \"#ffffff\";\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n\n  ctx.beginPath();\n  const pupilSize = ant.mode === NORMAL_MODE ? 2 : 3;\n  let pupilColor;\n  switch (ant.mode) {\n    case NORMAL_MODE:\n      pupilColor = \"#000000\";\n      break;\n    case FLEEING_MODE:\n      pupilColor = \"#008000\";\n      break;\n    case HUNTING_MODE:\n      pupilColor = \"#ff0000\";\n      break;\n    case MATING_MODE:\n      pupilColor = \"#ff00ff\";\n      break;\n    default:\n      pupilColor = \"#000000\";\n  }\n\n  /// ctx.fillStyle = `#${hsl.hex(h, s, l - 30)}`;\n  ctx.fillStyle = pupilColor;\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n};\n\nconst drawAntenna = (ctx, ant) => {\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.fillStyle = sides[ant.side].color;\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.stroke();\n\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.stroke();\n};\n\nexport const drawAnts = (ctx, ants) => {\n  ctx.strokeStyle = \"#331111\";\n  listOfDeaths.forEach((point) => {\n    ctx.beginPath();\n    ctx.fillRect(point.x, point.y, 1, 1);\n  });\n  ants.forEach((ant) => {\n    ctx.beginPath();\n    if (ant.maturity === \"elderly\") {\n      const [h, s, l] = hex.hsl(sides[ant.side].color.substring(1));\n      ctx.fillStyle = `#${hsl.hex(h, s / 2, l - 10)}`;\n    } else {\n      ctx.fillStyle = sides[ant.side].color;\n    }\n    ctx.ellipse(\n      ant.x,\n      ant.y,\n      maturities[ant.maturity].size * ant.size * 2,\n      maturities[ant.maturity].size * ant.size +\n        maturities[ant.maturity].size * ant.size * Math.abs(ant.oscillator),\n      ant.direction,\n      0,\n      2 * Math.PI\n    );\n    ctx.fill();\n    if (displayWillBreed && ant.bredRest > 0) {\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 1;\n      ctx.stroke();\n    }\n    if (displayFood) {\n      if (ant.food < 500) {\n        ctx.strokeStyle = \"#ff0000\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 1000) {\n        ctx.strokeStyle = \"#ffff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 2000) {\n        ctx.strokeStyle = \"#00ff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      }\n    }\n    if (ant.isInjuried) {\n      ctx.beginPath();\n      ctx.fillStyle = \"#ff0000\";\n      ctx.ellipse(\n        ant.x,\n        ant.y,\n        maturities[ant.maturity].size * ant.size * 2,\n        maturities[ant.maturity].size * ant.size +\n          maturities[ant.maturity].size * ant.size * Math.abs(ant.oscillator),\n        ant.direction,\n        Math.PI - Math.PI / 3,\n        Math.PI + Math.PI / 3\n      );\n      ctx.fill();\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(ant.x, ant.y);\n    ctx.lineTo(\n      ant.x +\n        Math.cos(ant.direction) * maturities[ant.maturity].size * ant.size * 2,\n      ant.y +\n        Math.sin(ant.direction) * maturities[ant.maturity].size * ant.size * 2\n    );\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = sides[ant.side].color;\n    ctx.stroke();\n\n    if (displayAntenna) {\n      drawAntenna(ctx, ant);\n    }\n    if (\n      displayEyes &&\n      (ant.maturity === \"adult\" ||\n        ant.maturity === \"elderly\" ||\n        ant.maturity === \"child\" ||\n        ant.maturity === \"baby\")\n    ) {\n      drawEyes(ctx, ant);\n    }\n\n    if (displaySensorArea) {\n      drawSensorArea(ctx, ant);\n    }\n    if (ant.isSelected) {\n      ctx.beginPath();\n      ctx.strokeStyle = \"#ff8888\";\n      ctx.fillStyle = \"#ffffff\";\n      ctx.lineWidth = 3;\n      ctx.arc(\n        ant.x,\n        ant.y,\n        maturities[ant.maturity].size * ant.size * 3,\n        0,\n        2 * Math.PI\n      );\n      ctx.stroke();\n    }\n  });\n};\n","import {\n  ants,\n  FOX_SIDE,\n  VIPER_SIDE,\n  HEN_SIDE,\n  displayDebug,\n  enablePrey,\n  enableGate,\n  displayAnts,\n  displayFood,\n  enableDieOnFood,\n  enableSenescence,\n  displaySensorArea,\n  enableBreed,\n  enableChildKills,\n} from \"./App\";\n\nexport const displayHelp = (ctx) => {\n  ctx.font = \"36px serif\";\n  ctx.fillStyle = \"#ffffff\";\n  const nbFoxes = ants.filter((ant) => ant.side === FOX_SIDE).length;\n  const nbVipers = ants.filter((ant) => ant.side === VIPER_SIDE).length;\n  const nbHens = ants.filter((ant) => ant.side === HEN_SIDE).length;\n  if (displayDebug) {\n    ctx.fillStyle = \"#00FF00\";\n    ctx.fillText(\"Display debug (d) enabled\", 30, 40);\n    ctx.fillStyle = \"#CC4444\";\n    ctx.fillText(`${nbFoxes} foxes, (f) to add (F) on cursor`, 30, 80);\n    ctx.fillStyle = \"#995500\";\n    ctx.fillText(`${nbHens} hens, (h) to add (H) on cursor`, 30, 120);\n    ctx.fillStyle = \"#44CC44\";\n    ctx.fillText(`${nbVipers} vipers, (v) to add (V) on cursor`, 30, 160);\n    if (enablePrey) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Prey mode (k) enabled\", 30, 200);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Prey mode (k) disabled\", 30, 200);\n    }\n    if (enableGate) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Gate (g) enabled\", 30, 240);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Gate (g) disabled\", 30, 240);\n    }\n    if (displayAnts) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Ants (a) displayed\", 30, 280);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Ants (a) hidden\", 30, 280);\n    }\n    if (displayFood) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Food (o) displayed\", 30, 320);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Food (o) hidden\", 30, 320);\n    }\n    if (enableDieOnFood) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on starvation (x) enabled\", 30, 360);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on starvation (x) disabled\", 30, 360);\n    }\n    if (enableSenescence) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on aging (c) enabled\", 30, 400);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on aging (c) disabled\", 30, 400);\n    }\n    if (displaySensorArea) {\n      ctx.fillStyle = \"#CCCC33\";\n      ctx.fillText(\"Sensor (s) displayed\", 30, 440);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Sensor (s) displayed\", 30, 440);\n    }\n    if (enableChildKills) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Allow to kill children (i) enabled\", 30, 480);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Allow to kill children (i) disabled\", 30, 480);\n    }\n    if (enableBreed) {\n      ctx.fillStyle = \"#00FF00\";\n      ctx.fillText(\"Allow to breed (B) enabled\", 30, 520);\n    } else {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Allow to breed (B) disabled\", 30, 520);\n    }\n    ctx.fillStyle = \"#880000\";\n    ctx.fillText(`Kill everybody, (K)`, 30, 560);\n    ctx.fillStyle = \"#808080\";\n    ctx.fillText(`Randomize walls, (>)`, 30, 600);\n  } else {\n    ctx.fillStyle = \"#808080\";\n    ctx.fillText(\"Display debug (d) disabled\", 30, 40);\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}