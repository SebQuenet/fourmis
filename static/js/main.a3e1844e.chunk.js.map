{"version":3,"sources":["components/Anthill/AntHill.module.css","App.js","components/Anthill/index.jsx","drawAnts.js","displayHelp.js","reportWebVitals.js","index.js"],"names":["module","exports","CANVAS_WIDTH","CANVAS_HEIGHT","AntHill","props","canvasRef","useRef","draw","handleClick","handleMouseMove","useEffect","animationFrameId","canvas","current","context","getContext","frameCount","addEventListener","e","canvasWidth","getBoundingClientRect","width","canvasHeight","height","canvasX","clientX","canvasY","clientY","render","window","requestAnimationFrame","cancelAnimationFrame","console","log","innerWidth","innerHeight","className","styles","canvasSupport","ref","drawAnts","ctx","ants","strokeStyle","listOfDeaths","forEach","point","beginPath","fillRect","x","y","ant","maturity","hex","hsl","color","substring","h","s","l","fillStyle","ellipse","maturities","size","Math","abs","oscillator","direction","PI","fill","displayWillBreed","bredRest","lineWidth","stroke","displayFood","food","isInjuried","moveTo","lineTo","cos","sin","displayAntenna","drawAntenna","displayEyes","arc","pupilColor","pupilSize","mode","NORMAL_MODE","FLEEING_MODE","HUNTING_MODE","MATING_MODE","drawEyes","displaySensorArea","strokeRect","sensorArea","font","fillText","floor","speed","generation","drawSensorArea","perceptionArea","trackingArea","pheromonsArea","drawPerceptionCircles","isSelected","HEN_SIDE","VIPER_SIDE","FOX_SIDE","selectedAnt","sides","side","canKill","newborn","baby","child","adult","elderly","displayAnts","displayWalls","enableBreed","enablePrey","enableGate","enableSenescence","enableDieOnFood","displayDebug","enableChildKills","isPaused","WALL_TEMPLATES","isGate","cursorX","cursorY","listOfWalls","random","length","areAntsSameSide","otherAnt","isContactBetween","areCloseEnough","id","areNotSameAnts","canBothAntsHaveBaby","isAntAThreatForOtherAnt","isAntAdult","antFactory","antSide","sidesArray","Object","keys","randomSide","uuidv4","name","generateStupidName","energy","hitPoints","maxHitPoints","strength","reach","damageReduction","isTired","canBreed","age","i","document","key","filter","distanceBetweenAnts","sqrt","handleContacts","canBothAntsBreed","rgb","r1","g1","b1","r2","g2","b2","brood","rgbNewAnt","newAnt","hasBred","handleBirth","canAntKillOtherAnt","isDead","push","find","App","nbFoxes","nbVipers","nbHens","displayHelp","handleBirthday","wall","drawWalls","preys","predators","mates","neighbors","adultNeighbors","mate","atan2","threats","threat","prey","speedFactor","injuryFactor","wantedX","wantedY","isAntInsideWall","rect","drawSelectedAnt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,cAAgB,iC,iFCyNlC,I,2ICvNMC,EAAe,IACfC,EAAgB,IA4CPC,EA1CC,SAACC,GACf,IAAMC,EAAYC,iBAAO,MACjBC,EAAuCH,EAAvCG,KAAMC,EAAiCJ,EAAjCI,YAAaC,EAAoBL,EAApBK,gBAqC3B,OApCAC,qBAAU,WACR,IAIIC,EAJEC,EAASP,EAAUQ,QACnBC,EAAUF,EAAOG,WAAW,MAE9BC,EAAa,EAGjBJ,EAAOK,iBAAiB,aAAa,SAACC,GACpC,IAAMC,EAAcP,EAAOQ,wBAAwBC,MAC7CC,EAAeV,EAAOQ,wBAAwBG,OAC9CC,EAAUN,EAAEO,QAAQxB,EAAakB,EACjCO,EAAUR,EAAES,QAAQzB,EAAcoB,EACxCb,EAAgB,CAACe,UAASE,eACzB,GACHd,EAAOK,iBAAiB,SAAS,SAACC,GAChC,IAAMC,EAAcP,EAAOQ,wBAAwBC,MAC7CC,EAAeV,EAAOQ,wBAAwBG,OAC9CC,EAAUN,EAAEO,QAAQxB,EAAakB,EACjCO,EAAUR,EAAES,QAAQzB,EAAcoB,EACxCd,EAAY,CAACgB,UAASE,eACrB,GASH,OAPe,SAATE,IACJZ,IACAT,EAAKO,EAASE,GACdL,EAAmBkB,OAAOC,sBAAsBF,GAElDA,GAEO,WACLC,OAAOE,qBAAqBpB,MAE7B,CAACJ,IAEJyB,QAAQC,IAAIJ,OAAOK,WAAa,GAChCF,QAAQC,IAAIJ,OAAOM,YAAa,GACzB,oCAAQd,MAAOpB,EAAcsB,OAAQrB,EAAekC,UAAWC,IAAOC,cAAeC,IAAKlC,GAAcD,KC0KpGoC,EAAW,SAACC,EAAKC,GAC5BD,EAAIE,YAAc,UAClBC,EAAaC,SAAQ,SAACC,GACpBL,EAAIM,YACJN,EAAIO,SAASF,EAAMG,EAAGH,EAAMI,EAAG,EAAG,MAEpCR,EAAKG,SAAQ,SAACM,GAEZ,GADAV,EAAIM,YACiB,YAAjBI,EAAIC,SAAwB,CAAC,IAAD,EACZC,MAAIC,IAAIH,EAAII,MAAMC,UAAU,IADhB,mBACvBC,EADuB,KACpBC,EADoB,KACjBC,EADiB,KAE9BlB,EAAImB,UAAJ,WAAoBN,MAAID,IAAII,EAAGC,EAAI,EAAGC,EAAI,UAE1ClB,EAAImB,UAAYT,EAAII,MAEtBd,EAAIoB,QACFV,EAAIF,EACJE,EAAID,EACJY,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAAO,EAC3CD,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAClCD,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAAOC,KAAKC,IAAId,EAAIe,YAC1Df,EAAIgB,UACJ,EACA,EAAIH,KAAKI,IAEX3B,EAAI4B,OACAC,GAAoBnB,EAAIoB,SAAW,IACrC9B,EAAIE,YAAc,UAClBF,EAAI+B,UAAY,EAChB/B,EAAIgC,UAEFC,IACEvB,EAAIwB,KAAO,KACblC,EAAIE,YAAc,UAClBF,EAAI+B,UAAY,EAChB/B,EAAIgC,UACKtB,EAAIwB,KAAO,KACpBlC,EAAIE,YAAc,UAClBF,EAAI+B,UAAY,EAChB/B,EAAIgC,UACKtB,EAAIwB,KAAO,MACpBlC,EAAIE,YAAc,UAClBF,EAAI+B,UAAY,EAChB/B,EAAIgC,WAGJtB,EAAIyB,aACNnC,EAAIM,YACJN,EAAImB,UAAY,UAChBnB,EAAIoB,QACFV,EAAIF,EACJE,EAAID,EACJY,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAAO,EAC3CD,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAClCD,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAAOC,KAAKC,IAAId,EAAIe,YAC1Df,EAAIgB,UACJH,KAAKI,GAAKJ,KAAKI,GAAK,EACpBJ,KAAKI,GAAKJ,KAAKI,GAAK,GAEtB3B,EAAI4B,QAGN5B,EAAIM,YACJN,EAAIoC,OAAO1B,EAAIF,EAAGE,EAAID,GACtBT,EAAIqC,OACF3B,EAAIF,EACFe,KAAKe,IAAI5B,EAAIgB,WAAaL,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAAO,EACvEZ,EAAID,EACFc,KAAKgB,IAAI7B,EAAIgB,WAAaL,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAAO,GAEzEtB,EAAI+B,UAAY,EAChB/B,EAAIE,YAAcQ,EAAII,MACtBd,EAAIgC,SAEAQ,GAnHY,SAACxC,EAAKU,GACxBV,EAAIE,YAAcQ,EAAII,MACtBd,EAAImB,UAAYT,EAAII,MACpBd,EAAI+B,UAAY,GAChB/B,EAAIM,YACJN,EAAIoC,OAAO1B,EAAIF,EAAGE,EAAID,GACtBT,EAAIqC,OACF3B,EAAIF,EACFe,KAAKe,IAAI5B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACJ,GACJZ,EAAID,EACFc,KAAKgB,IAAI7B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACJ,IAENtB,EAAI+B,UAAY,EAChB/B,EAAIE,YAAcQ,EAAII,MACtBd,EAAIgC,SAEJhC,EAAI+B,UAAY,GAChB/B,EAAIM,YACJN,EAAIoC,OAAO1B,EAAIF,EAAGE,EAAID,GACtBT,EAAIqC,OACF3B,EAAIF,EACFe,KAAKe,IAAI5B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACJ,GACJZ,EAAID,EACFc,KAAKgB,IAAI7B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACJ,IAENtB,EAAI+B,UAAY,EAChB/B,EAAIE,YAAcQ,EAAII,MACtBd,EAAIgC,SA6EAS,CAAYzC,EAAKU,IAGjBgC,GACkB,UAAjBhC,EAAIC,UACc,YAAjBD,EAAIC,UACa,UAAjBD,EAAIC,UACa,SAAjBD,EAAIC,UAjNK,SAACX,EAAKU,GAAS,IAAD,EACXE,MAAIC,IAAIH,EAAII,MAAMC,UAAU,IADjB,kCAI7Bf,EAAIM,YAEJN,EAAImB,UAAY,UAChBnB,EAAI2C,IACFjC,EAAIF,EACFe,KAAKe,IAAI5B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACRZ,EAAID,EACFc,KAAKgB,IAAI7B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KAZM,EAcd,EACA,EAAIC,KAAKI,IAEX3B,EAAI2C,IACFjC,EAAIF,EACFe,KAAKe,IAAI5B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACRZ,EAAID,EACFc,KAAKgB,IAAI7B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KAzBM,EA2Bd,EACA,EAAIC,KAAKI,IAEX3B,EAAI4B,OAEJ5B,EAAIM,YACJ,IACIsC,EADEC,EAAYnC,EAAIoC,OAASC,EAAc,EAAI,EAEjD,OAAQrC,EAAIoC,MACV,KAAKC,EACHH,EAAa,UACb,MACF,KAAKI,EACHJ,EAAa,UACb,MACF,KAAKK,EACHL,EAAa,UACb,MACF,KAAKM,EACHN,EAAa,UACb,MACF,QACEA,EAAa,UAIjB5C,EAAImB,UAAYyB,EAChB5C,EAAI2C,IACFjC,EAAIF,EACFe,KAAKe,IAAI5B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACRZ,EAAID,EACFc,KAAKgB,IAAI7B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACRuB,EACA,EACA,EAAItB,KAAKI,IAEX3B,EAAI2C,IACFjC,EAAIF,EACFe,KAAKe,IAAI5B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACRZ,EAAID,EACFc,KAAKgB,IAAI7B,EAAIgB,UAAYH,KAAKI,GAAK,GACjCN,EAAWX,EAAIC,UAAUW,KACzBZ,EAAIY,KACRuB,EACA,EACA,EAAItB,KAAKI,IAEX3B,EAAI4B,OAgIAuB,CAASnD,EAAKU,GAGZ0C,IAjPe,SAACpD,EAAKU,GAC3BV,EAAI+B,UAAY,IAChB/B,EAAIqD,WACF3C,EAAIF,EAAIE,EAAI4C,WAAa,EACzB5C,EAAID,EAAIC,EAAI4C,WAAa,EACzB5C,EAAI4C,WACJ5C,EAAI4C,YAENtD,EAAIuD,KAAO,iBACXvD,EAAImB,UAAYT,EAAII,MACpBd,EAAIwD,SAAJ,UACKjC,KAAKkC,MAAM/C,EAAI4C,aAClB5C,EAAIF,EAAIE,EAAI4C,WAAa,EACzB5C,EAAID,EAAIC,EAAI4C,WAAa,GAE3BtD,EAAIwD,SAAJ,UACKjC,KAAKkC,MAAkB,GAAZ/C,EAAIgD,QAClBhD,EAAIF,EAAIE,EAAI4C,WAAa,EAAI,GAC7B5C,EAAID,EAAIC,EAAI4C,WAAa,GAE3BtD,EAAIwD,SAAJ,UACKjC,KAAKkC,MAAM/C,EAAIiD,aAClBjD,EAAIF,EACJE,EAAID,EAAIC,EAAI4C,WAAa,GA2NvBM,CAAe5D,EAAKU,GA9RI,SAACV,EAAKU,GAClCV,EAAIM,YACJN,EAAI+B,UAAY,EAChB/B,EAAIE,YAAc,UAClBF,EAAI2C,IAAIjC,EAAIF,EAAGE,EAAID,EAAGC,EAAImD,eAAgB,EAAG,EAAItC,KAAKI,IACtD3B,EAAIgC,SAEJhC,EAAIuD,KAAO,iBACXvD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,UACKjC,KAAKkC,MAAM/C,EAAImD,iBAClBnD,EAAIF,EAAIE,EAAImD,eAAiB,EAC7BnD,EAAID,GAGNT,EAAIM,YACJN,EAAI+B,UAAY,EAChB/B,EAAIE,YAAc,UAClBF,EAAI2C,IAAIjC,EAAIF,EAAGE,EAAID,EAAGC,EAAIoD,aAAc,EAAG,EAAIvC,KAAKI,IACpD3B,EAAIgC,SAEJhC,EAAIuD,KAAO,iBACXvD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,UACKjC,KAAKkC,MAAM/C,EAAIoD,eAClBpD,EAAIF,EAAIE,EAAIoD,aAAe,GAC3BpD,EAAID,GAGNT,EAAIM,YACJN,EAAI+B,UAAY,EAChB/B,EAAIE,YAAc,UAClBF,EAAI2C,IAAIjC,EAAIF,EAAGE,EAAID,EAAGC,EAAIqD,cAAe,EAAG,EAAIxC,KAAKI,IACrD3B,EAAIgC,SAEJhC,EAAIuD,KAAO,iBACXvD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,UACKjC,KAAKkC,MAAM/C,EAAIqD,gBAClBrD,EAAIF,EACJE,EAAID,EAAIC,EAAIqD,cAAgB,GAuP1BC,CAAsBhE,EAAKU,IAEzBA,EAAIuD,aACNjE,EAAIM,YACJN,EAAIE,YAAc,UAClBF,EAAImB,UAAY,UAChBnB,EAAI+B,UAAY,EAChB/B,EAAI2C,IACFjC,EAAIF,EACJE,EAAID,EACJY,EAAWX,EAAIC,UAAUW,KAAOZ,EAAIY,KAAO,EAC3C,EACA,EAAIC,KAAKI,IAEX3B,EAAIgC,cFnSGe,EAAc,cACdC,EAAe,eACfC,EAAe,eACfC,EAAc,cAEdgB,EAAW,WACXC,EAAa,aACbC,EAAW,WAOpBC,EAAc,KAELC,GAAK,mBACfJ,EAAW,CACVK,KAAML,EACNpD,MAAO,UACP0D,QAAQ,eAAIL,GAAa,KAJX,cAMfA,EAAa,CACZI,KAAMJ,EACNrD,MAAO,UACP0D,QAAQ,eAAIJ,GAAW,KATT,cAWfA,EAAW,CACVG,KAAMH,EACNtD,MAAO,UACP0D,QAAQ,eAAIN,GAAW,KAdT,GAkBL7C,EAAa,CACxBoD,QAAS,CACPnD,KAAM,GAERoD,KAAM,CACJpD,KAAM,GAERqD,MAAO,CACLrD,KAAM,GAERsD,MAAO,CACLtD,KAAM,GAERuD,QAAS,CACPvD,KAAM,IAICwD,GAAc,EACdtC,GAAiB,EACjBX,GAAmB,EACnBuB,GAAoB,EACpBV,GAAc,EACdqC,GAAe,EACfC,GAAc,EACdC,GAAa,EACbC,GAAa,EACbC,GAAmB,EACnBC,GAAkB,EAClBC,GAAe,EACfpD,GAAc,EACdqD,GAAmB,EACnBC,GAAW,EAEhBC,EAAiB,CACrB,GACA,CACE,CAAEhF,EAAG,IAAKC,EAAG,KAAM7B,MAAO,KAAME,OAAQ,IACxC,CAAE0B,EAAG,IAAMC,EAAG,IAAK7B,MAAO,GAAIE,OAAQ,OAExC,CACE,CAAE0B,EAAG,KAAMC,EAAG,EAAG7B,MAAO,IAAKE,OAAQ,KACrC,CAAE0B,EAAG,KAAMC,EAAG,KAAM7B,MAAO,IAAKE,OAAQ,MAE1C,CACE,CAAE0B,EAAG,IAAMC,EAAG,EAAG7B,MAAO,GAAIE,OAAQ,IAAM2G,QAAQ,GAClD,CAAEjF,EAAG,EAAGC,EAAG,IAAM7B,MAAO,IAAME,OAAQ,GAAI2G,QAAQ,IAEpD,CACE,CAAEjF,EAAG,IAAMC,EAAG,EAAG7B,MAAO,GAAIE,OAAQ,IAAM2G,QAAQ,GAClD,CAAEjF,EAAG,IAAMC,EAAG,IAAM7B,MAAO,IAAME,OAAQ,GAAI2G,QAAQ,GACrD,CAAEjF,EAAG,KAAMC,EAAG,IAAM7B,MAAO,IAAKE,OAAQ,IACxC,CAAE0B,EAAG,IAAMC,EAAG,IAAK7B,MAAO,GAAIE,OAAQ,KACtC,CAAE0B,EAAG,IAAMC,EAAG,IAAK7B,MAAO,GAAIE,OAAQ,KACtC,CAAE0B,EAAG,KAAMC,EAAG,IAAK7B,MAAO,IAAKE,OAAQ,IACvC,CAAE0B,EAAG,KAAMC,EAAG,KAAM7B,MAAO,IAAKE,OAAQ,IACxC,CAAE0B,EAAG,EAAGC,EAAG,IAAK7B,MAAO,IAAME,OAAQ,IACrC,CAAE0B,EAAG,IAAMC,EAAG,KAAM7B,MAAO,IAAME,OAAQ,MAIzC4G,EAAU,EACVC,EAAU,EAER3H,EAAkB,SAAC,GAA0B,IAAxBe,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,QAClCyG,EAAU3G,EACV4G,EAAU1G,GAED2G,EACTJ,EAAejE,KAAKkC,MAAMlC,KAAKsE,SAAWL,EAAeM,SAE9C3F,EAAe,GAQtB4F,GAAkB,SAACrF,EAAKsF,GAAN,OAAmBtF,EAAI6D,OAASyB,EAASzB,MAE3D0B,GAAmB,SAACvF,EAAKsF,GAAN,OAJF,SAACtF,EAAKsF,GAAN,OACrBzE,KAAKC,IAAIwE,EAASxF,EAAIE,EAAIF,GAAK,IAAMe,KAAKC,IAAIwE,EAASvF,EAAIC,EAAID,GAAK,GAIpEyF,CAAexF,EAAKsF,IAPC,SAACtF,EAAKsF,GAAN,OAAmBtF,EAAIyF,KAAOH,EAASG,GAO3BC,CAAe1F,EAAKsF,IAEjDK,GAAsB,SAAC3F,EAAKsF,GAAN,OACT,IAAjBtF,EAAIoB,UAAwC,IAAtBkE,EAASlE,UAE3BwE,GAA0B,SAAC5F,EAAKsF,GACpC,SACGV,GACsB,YAAtBU,EAASrF,UACc,SAAtBqF,EAASrF,UACa,UAAtBqF,EAASrF,YAKW,UAAjBD,EAAIC,UAAwB2D,EAAM5D,EAAI6D,MAAMC,QAAQwB,EAASzB,QAmBhEgC,GAAa,SAAC7F,GAAD,MAA0B,UAAjBA,EAAIC,UAQ1B6F,GAAa,SAAC,GAAoB,IAAlBjC,EAAiB,EAAjBA,KAAM/D,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACvBgG,EAAUlC,GAPC,WACjB,IAAMmC,EAAaC,OAAOC,KAAKtC,GAE/B,OAAOoC,EADanF,KAAKkC,MAAMlC,KAAKsE,SAAWa,EAAWZ,SAK5Be,GAC9B,MAAO,CACLV,GAAIW,cACJC,KAAMC,MACNxG,EAAGA,GAAQe,KAAKkC,MAAsB,KAAhBlC,KAAKsE,UAAmB,IAC9CpF,EAAGA,GAAQc,KAAKkC,MAAsB,KAAhBlC,KAAKsE,UAAmB,IAC9CnE,UAAWH,KAAKI,GAAK,EACrBO,KApLiB,IAqLjBwB,MAvLkB,EAwLlBuD,OAvLmB,EAwLnBC,UAtLuB,IAuLvBC,aAtL2B,IAuL3BC,SArLqB,GAsLrBC,MArLkB,GAsLlBC,gBArLe,EAsLfhE,WAhL+B,GAiL/BQ,aApL4B,GAqL5BC,cApL4B,IAqL5BF,eAvL8B,GAwL9B0D,SAAS,EACTzG,MAAOwD,EAAMC,GAAMzD,MACnB0G,UAAU,EACV1F,SAAU,EACVR,KAjMiB,EAkMjBmG,IAAK,EACL9G,SAAU,QACVgD,WAAY,EACZY,KAAMkC,IAICxG,GAAO,GAETyH,GAAI,EAAGA,GAvLQ,GAuLaA,KACnCzH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAMJ,MAEtC,IAAK,IAAIuD,GAAI,EAAGA,GA1LQ,GA0LaA,KACnCzH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAML,MAEtC,IAAK,IAAIwD,GAAI,EAAGA,GA7LQ,GA6LaA,KACnCzH,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAMH,MAGtCuD,SAASnJ,iBACP,WACA,SAACC,GACe,MAAVA,EAAEmJ,MACJ3H,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAMJ,OAExB,MAAV1F,EAAEmJ,MACJ3H,GAAI,sBACCA,IADD,CAEFuG,GAAW,CAAEjC,KAAMJ,EAAY3D,EAAGkF,EAASjF,EAAGkF,OAGpC,MAAVlH,EAAEmJ,MACJ3H,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAMH,OAExB,MAAV3F,EAAEmJ,MACJ3H,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAMH,EAAU5D,EAAGkF,EAASjF,EAAGkF,OAEjD,MAAVlH,EAAEmJ,MACJ3H,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAML,OAExB,MAAVzF,EAAEmJ,MACJ3H,GAAI,sBAAOA,IAAP,CAAauG,GAAW,CAAEjC,KAAML,EAAU1D,EAAGkF,EAASjF,EAAGkF,OAEjD,MAAVlH,EAAEmJ,MACJ5C,GAAeA,GAEH,MAAVvG,EAAEmJ,MACJ/F,GAAoBA,GAER,MAAVpD,EAAEmJ,MACJ9C,GAAeA,GAEH,MAAVrG,EAAEmJ,MACJxE,GAAqBA,GAET,MAAV3E,EAAEmJ,MACJlF,GAAeA,GAEH,MAAVjE,EAAEmJ,MACJ3C,GAAcA,GAEF,MAAVxG,EAAEmJ,MACJ7C,GAAgBA,GAEJ,MAAVtG,EAAEmJ,MACJvC,GAAgBA,GAEJ,MAAV5G,EAAEmJ,MACJ1C,GAAcA,GAEF,MAAVzG,EAAEmJ,MACJ3F,GAAeA,GAEH,MAAVxD,EAAEmJ,MACJxC,GAAmBA,GAEP,MAAV3G,EAAEmJ,MACJzC,GAAoBA,GAER,MAAV1G,EAAEmJ,MACJtC,GAAoBA,GAER,MAAV7G,EAAEmJ,MACJrC,GAAYA,GAEV9G,EAAEmJ,IAGQ,MAAVnJ,EAAEmJ,MACJ3H,GAAO,IAEK,MAAVxB,EAAEmJ,MACJ3H,GAAOA,GAAK4H,QAAO,kBAAMtG,KAAKsE,SAAW,OAE7B,MAAVpH,EAAEmJ,MACJhC,EACEJ,EAAejE,KAAKkC,MAAMlC,KAAKsE,SAAWL,EAAeM,aAG/D,GAGF,IAgCMgC,GAAsB,SAACpH,EAAKsF,GAChC,OAAOzE,KAAKwG,KAAK,SAACrH,EAAIF,EAAIwF,EAASxF,EAAM,GAAxB,SAA6BE,EAAID,EAAIuF,EAASvF,EAAM,KA6PvE,IAAMuH,GAAiB,WACrB/H,GAAKG,SAAQ,SAACM,GACZT,GAAKG,SAAQ,SAAC4F,GACRC,GAAiBvF,EAAKsF,KAEtBhB,GACAe,GAAgBrF,EAAKsF,IAndN,SAACtF,EAAKsF,GAAN,OAAmBtF,EAAI8G,UAAYxB,EAASwB,SAod3DS,CAAiBvH,EAAKsF,IACtBK,GAAoB3F,EAAKsF,GAhGnC,SAAqBtF,EAAKsF,GACxBtF,EAAIoB,SAAW,IACfkE,EAASlE,SAAW,IAFc,MAIblB,MAAIsH,IAAIxH,EAAII,MAAMC,UAAU,IAJf,mBAI3BoH,EAJ2B,KAIvBC,EAJuB,KAInBC,EAJmB,OAKbzH,MAAIsH,IAAIlC,EAASlF,MAAMC,UAAU,IALpB,mBAK3BuH,EAL2B,KAKvBC,EALuB,KAKnBC,EALmB,KAOlC9H,EAAI+H,MAAQ,IACZzC,EAASyC,MAAQ,IAEjB,IAAMC,EAAY,CAChBnH,KAAKkC,MAAMlC,KAAKwG,MAAMI,EAAKA,EAAKG,EAAKA,GAAM,IAC3C/G,KAAKkC,MAAMlC,KAAKwG,MAAMK,EAAKA,EAAKG,EAAKA,GAAM,IAC3ChH,KAAKkC,MAAMlC,KAAKwG,MAAMM,EAAKA,EAAKG,EAAKA,GAAM,KAbX,EAgBlBN,MAAIrH,IAAI6H,GAhBU,mBAgB7B1H,EAhB6B,KAgB1BC,EAhB0B,KAgBvBC,EAhBuB,KAiBlCD,EAAIM,KAAKkC,MAAMxC,EAAIM,KAAKsE,OAAO,IAAM,GACrC3E,EAAIK,KAAKkC,MAAMvC,EAAIK,KAAKsE,OAAO,IAAM,GAErC,IAAMnC,EACJnC,KAAKkC,MAAM/C,EAAIgD,MAAQsC,EAAStC,OAAS,EAAI,GAAMnC,KAAKsE,SACpDvC,EAAa/B,KAAKkC,MACtBlC,KAAKkC,MAAM/C,EAAI4C,WAAa0C,EAAS1C,YAAc,EAAI,EAAoB,EAAhB/B,KAAKsE,UAG5D/B,EAAevC,KAAKkC,MACxBlC,KAAKkC,MAAM/C,EAAIoD,aAAekC,EAASlC,cAAgB,EACrD,EACgB,EAAhBvC,KAAKsE,UAGHhC,EAAiBtC,KAAKkC,MAC1BlC,KAAKkC,MAAM/C,EAAImD,eAAiBmC,EAASnC,gBAAkB,EACzD,EACgB,EAAhBtC,KAAKsE,UAGH9B,EAAgBxC,KAAKkC,MACzBlC,KAAKkC,MAAM/C,EAAIqD,cAAgBiC,EAASjC,eAAiB,EACvD,EACgB,EAAhBxC,KAAKsE,UAGHvE,EACJC,KAAKkC,MAAM/C,EAAIY,KAAO0E,EAAS1E,MAAQ,EAAI,GAAsB,GAAhBC,KAAKsE,SAClD8C,EAAS,CACbxC,GAAIW,cACJC,KAAMC,MACNxG,EAAGe,KAAKkC,MAAM/C,EAAIF,EAAIwF,EAASxF,GAAK,EACpCC,EAAGc,KAAKkC,MAAM/C,EAAID,EAAIuF,EAASvF,GAAK,EACpCiB,UAAW,EACX+G,MAAO,EACPnF,WACEA,EA3hB6B,GA2hBMA,EA3hBN,GA4hB/BQ,aAAcA,EAAe,EAAIA,EAAe,EAChDD,eAAgBA,EAAiB,EAAIA,EAAiB,EACtDE,cAAeA,EAAgB,EAAIA,EAAgB,EACnDL,MAAOA,EA7iBW,EA6iBaA,EA7iBb,EA8iBlBuD,OA7iBmB,EA8iBnBC,UAAW3F,KAAKkC,OACb/C,EAAIwG,UAAYlB,EAASkB,WAAa,EAAoB,GAAhB3F,KAAKsE,SAAgB,GAElEsB,aAAc5F,KAAKkC,MAAM/C,EAAIyG,aAAenB,EAASmB,cAAgB,EACrEC,SAAU7F,KAAKkC,OACZ/C,EAAI0G,SAAWpB,EAASoB,UAAY,EAAoB,EAAhB7F,KAAKsE,SAAe,GAE/DwB,MAAO9F,KAAKkC,OAAO/C,EAAI2G,MAAQrB,EAASqB,OAAS,EAAoB,EAAhB9F,KAAKsE,SAAe,GACzEyB,gBAAiB/F,KAAKkC,OACnB/C,EAAI4G,gBAAkBtB,EAASsB,iBAAmB,GAErDxG,MAAM,IAAD,OAAMD,MAAID,IAAI,CAACI,EAAGC,EAAGC,KAC1BsG,UAAU,EACVoB,SAAS,EACT9F,KAAMC,EACNzB,KAAMA,EAzjBW,EAyjBWA,EAzjBX,EA0jBjBmG,IAAK,EACL3F,SAAU,EACV6B,WACEjD,EAAIiD,WAAaqC,EAASrC,WACtBjD,EAAIiD,WAAa,EACjBqC,EAASrC,WAAa,EAC5BzB,KAAMX,KAAKkC,MAAM/C,EAAIwB,KAAO8D,EAAS9D,MAAQ,EAziBtB,IA0iBvBqC,KAAM7D,EAAI6D,MAEZtE,GAAI,sBAAOA,IAAP,CAAa0I,IAaTE,CAAYnI,EAAKsF,GAEZD,GAAgBrF,EAAKsF,IAlcT,SAACtF,EAAKsF,GAC/B,SACGV,GACsB,YAAtBU,EAASrF,UACc,SAAtBqF,EAASrF,UACa,UAAtBqF,EAASrF,aAMXY,KAAKwG,KAAK,SAACrH,EAAIF,EAAIwF,EAASxF,EAAM,GAAxB,SAA6BE,EAAID,EAAIuF,EAASvF,EAAM,IAAKC,EAAI2G,QAIjD,UAAjB3G,EAAIC,UAAwB2D,EAAM5D,EAAI6D,MAAMC,QAAQwB,EAASzB,MAobtDuE,CAAmBpI,EAAKsF,IAAaO,GAAW7F,KAClDsF,EAASkB,UAAYlB,EAASkB,UAAYxG,EAAI0G,SAC1CpB,EAASkB,WAAa,GACxBlB,EAAS+C,QAAS,EAClB5I,EAAa6I,KAAK,CAAExI,EAAGwF,EAASxF,EAAGC,EAAGuF,EAASvF,IAC/CC,EAAIwB,KAAOxB,EAAIwB,KAAO8D,EAAS9D,MAE/B8D,EAAS7D,YAAa,WAqChCpE,GAAc,SAAC,GAA0B,IAAxBgB,EAAuB,EAAvBA,QAASE,EAAc,EAAdA,QAC9BM,QAAQC,IAAI6E,GACZpE,GAAKG,SAAQ,SAACM,GAAD,OAA4B,IAAnBA,EAAIuD,cAC1B1E,QAAQC,IAAIS,GAAKgJ,MAAK,SAACvI,GAAD,OAASA,EAAIuD,eACnChE,GAAKG,SAAQ,SAACM,GACPA,EAAIC,SAKP5B,GAAW2B,EAAIF,EAAoC,EAAhCa,EAAWX,EAAIC,UAAUW,MAC5CvC,GAAW2B,EAAIF,EAAoC,EAAhCa,EAAWX,EAAIC,UAAUW,MAC5CrC,GAAWyB,EAAID,EAAoC,EAAhCY,EAAWX,EAAIC,UAAUW,MAC5CrC,GAAWyB,EAAID,EAAoC,EAAhCY,EAAWX,EAAIC,UAAUW,MAE5C/B,QAAQC,IAAIkB,GACZA,EAAIuD,YAAa,EACjBI,EAAc3D,GAEd2D,EAAc,KAbd9E,QAAQC,IAAI,sBAAuBkB,OAkE1BwI,OAlCf,WAuBE,OACE,qBAAKvJ,UAAU,MAAf,SACE,cAAC,EAAD,CACE7B,KAzBO,SAACkC,EAAKzB,GACZgH,IACHvF,EAAIM,YACJN,EAAImB,UAAY,UAChBnB,EAAIO,SAAS,EAAG,EAAGP,EAAI7B,OAAOS,MAAOoB,EAAI7B,OAAOW,QGxqB3B,SAACkB,GAC1BA,EAAIuD,KAAO,aACXvD,EAAImB,UAAY,UAChB,IAAMgI,EAAUlJ,GAAK4H,QAAO,SAACnH,GAAD,OAASA,EAAI6D,OAASH,KAAU0B,OACtDsD,EAAWnJ,GAAK4H,QAAO,SAACnH,GAAD,OAASA,EAAI6D,OAASJ,KAAY2B,OACzDuD,EAASpJ,GAAK4H,QAAO,SAACnH,GAAD,OAASA,EAAI6D,OAASL,KAAU4B,OACvDT,GACFrF,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,4BAA6B,GAAI,IAC9CxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,UAAgB2F,EAAhB,oCAA2D,GAAI,IAC/DnJ,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,UAAgB6F,EAAhB,mCAAyD,GAAI,KAC7DrJ,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,UAAgB4F,EAAhB,qCAA6D,GAAI,KAC7DnE,GACFjF,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,wBAAyB,GAAI,OAE1CxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,yBAA0B,GAAI,MAEzC0B,GACFlF,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,mBAAoB,GAAI,OAErCxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,oBAAqB,GAAI,MAEpCsB,GACF9E,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,qBAAsB,GAAI,OAEvCxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,kBAAmB,GAAI,MAElCvB,GACFjC,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,qBAAsB,GAAI,OAEvCxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,kBAAmB,GAAI,MAElC4B,GACFpF,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,gCAAiC,GAAI,OAElDxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,iCAAkC,GAAI,MAEjD2B,GACFnF,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,2BAA4B,GAAI,OAE7CxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,4BAA6B,GAAI,MAE5CJ,GACFpD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,uBAAwB,GAAI,OAEzCxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,uBAAwB,GAAI,MAEvC8B,GACFtF,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,qCAAsC,GAAI,OAEvDxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,sCAAuC,GAAI,MAEtDwB,GACFhF,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,6BAA8B,GAAI,OAE/CxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,8BAA+B,GAAI,MAElDxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,sBAAoC,GAAI,KACxCxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,uBAAqC,GAAI,KACzCxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAJ,YAA0B,GAAI,OAE9BxD,EAAImB,UAAY,UAChBnB,EAAIwD,SAAS,6BAA8B,GAAI,KHolB7C8F,CAAYtJ,GApYK,SAACzB,GACtB0B,GAAKG,SAAQ,SAACM,GACZA,EAAIe,WAAaF,KAAKe,IAAI/D,EAAa,IACnCmC,EAAIwG,UAAYxG,EAAIyG,eACtBzG,EAAIwG,WAAa,IACbxG,EAAIwG,WAAaxG,EAAIyG,eACvBzG,EAAIyB,YAAa,IAGjBzB,EAAIoB,SAAW,IACjBpB,EAAIoB,SAAWpB,EAAIoB,SAAW,GAEhCpB,EAAI+G,IAAM/G,EAAI+G,IAAM,EAChB/G,EAAI+G,IAAM,IACZ/G,EAAIC,SAAW,UACND,EAAI+G,IAAM,IACnB/G,EAAIC,SAAW,OACND,EAAI+G,IAAM,KACnB/G,EAAIC,SAAW,QACND,EAAI+G,IAAM,KACnB/G,EAAIC,SAAW,QACfD,EAAI8G,UAAW,GACN9G,EAAI+G,IAAM,KAAStC,GAC5BzE,EAAIC,SAAW,UACfD,EAAI8G,UAAW,EACf9G,EAAIuG,OAAS,GACJ9B,IACTzE,EAAIqI,QAAS,MA0WbQ,CAAehL,GAxDnB0B,GAEGG,SAAQ,SAACM,GACRA,EAAIwB,KAAOxB,EAAIwB,KAAO,EAClBxB,EAAIwB,MAAQ,GAAKkD,IACnB1E,EAAIqI,QAAS,MArBnB9I,GAAOA,GAAK4H,QAAO,SAACnH,GAAD,OAAUA,EAAIqI,UAEjB,SAAC/I,GACb+E,GACFa,EAAYxF,SAAQ,SAACoJ,GACfA,EAAK/D,SAAWP,EAClBlF,EAAImB,UAAY,UAEhBnB,EAAImB,UAAY,UAElBnB,EAAIO,SAASiJ,EAAKhJ,EAAGgJ,EAAK/I,EAAG+I,EAAK5K,MAAO4K,EAAK1K,WAiE9C2K,CAAUzJ,GACN8E,GACF/E,EAASC,EAAKC,IA9MpBA,GAAKG,SAAQ,SAACM,GACRA,EAAI+H,MAAQ,GACd/H,EAAI+H,MAAQ/H,EAAI+H,MAAQ,EACxB/H,EAAI6G,SAAU,GAEd7G,EAAI6G,SAAU,KA5JlBtH,GAAKG,SAAQ,SAACM,GACZA,EAAIoC,KAAOC,EACXrC,EAAIgJ,MAAQzJ,GAAK4H,QACf,SAAC7B,GAAD,OACE8B,GAAoBpH,EAAKsF,GAAYtF,EAAIoD,cACzCkC,EAASG,KAAOzF,EAAIyF,IACpBG,GAAwB5F,EAAKsF,MAEjCtF,EAAIiJ,UAAY1J,GAAK4H,QACnB,SAAC7B,GAAD,OACE8B,GAAoBpH,EAAKsF,GAAYtF,EAAImD,gBACzCmC,EAASG,KAAOzF,EAAIyF,IACpBG,GAAwB5F,EAAKsF,MAEjCtF,EAAIkJ,MAAQ3J,GAAK4H,QACf,SAAC7B,GAAD,OACE8B,GAAoBpH,EAAKsF,GAAYtF,EAAIqD,eACzCiC,EAASG,KAAOzF,EAAIyF,IACpBnB,GACAe,GAAgBrF,EAAKsF,IACrBK,GAAoB3F,EAAKsF,IACzBO,GAAW7F,SAMjBT,GAAKG,SAAQ,SAACM,GACZ,IAAIA,EAAI6G,QAAR,CAGA7G,EAAIoC,KAAOC,EACX,IAAM8G,EAAY5J,GAAK4H,QACrB,SAAC7B,GAAD,OACEzE,KAAKC,IAAIwE,EAASxF,EAAIE,EAAIF,GAAKE,EAAI4C,YACnC/B,KAAKC,IAAIwE,EAASvF,EAAIC,EAAID,GAAKC,EAAI4C,YACnC0C,EAASG,KAAOzF,EAAIyF,MAElB2D,EAAiBD,EAAUhC,QAC/B,SAAC7B,GAAD,OAAcO,GAAWP,IAAaA,EAASG,KAAOzF,EAAIyF,MAGtDyD,EAAQE,EAAejC,QAC3B,SAAC7B,GAAD,OACEhB,GACAe,GAAgBrF,EAAKsF,IACrBK,GAAoB3F,EAAKsF,IACzBO,GAAW7F,MAEf,GAAIkJ,EAAM9D,OAAS,EAAG,CACpB,IAAMiE,EAAOH,EAAM,GACnBlJ,EAAIgB,UAAYH,KAAKyI,MAAMD,EAAKtJ,EAAIC,EAAID,EAAGsJ,EAAKvJ,EAAIE,EAAIF,GACxDE,EAAIoC,KAAOI,EAGb,IAAM+G,EAAUH,EAAejC,QAAO,SAAC7B,GAAD,OACpCM,GAAwBN,EAAUtF,MAEpC,GAAIuJ,EAAQnE,OAAS,EAAG,CACtB,IAAMoE,EAASD,EAAQ,GACvBvJ,EAAIgB,UAAYH,KAAKI,GAAKJ,KAAKyI,MAAME,EAAOzJ,EAAIC,EAAID,EAAGyJ,EAAO1J,EAAIE,EAAIF,GACtEE,EAAIoC,KAAOE,EAGb,GAAIiC,GAAcvE,EAAIwB,KAvXT,IAuX0B,CACrC,IAAMwH,EAAQG,EAAUhC,QAAO,SAAC7B,GAAD,OAC7BM,GAAwB5F,EAAKsF,MAE/B,GAAI0D,EAAM5D,OAAS,EAAG,CACpB,IAAMqE,EAAOT,EAAM,GACnBhJ,EAAIgB,UAAYH,KAAKyI,MAAMG,EAAK1J,EAAIC,EAAID,EAAG0J,EAAK3J,EAAIE,EAAIF,GACxDE,EAAIoC,KAAOG,GAIXvC,EAAIF,EAAI,MACVE,EAAIgB,UAAYH,KAAKI,IAEnBjB,EAAIF,EAAI,IACVE,EAAIgB,UAAY,GAEdhB,EAAID,EAAI,MACVC,EAAIgB,UAAa,EAAIH,KAAKI,GAAM,GAE9BjB,EAAID,EAAI,IACVC,EAAIgB,UAAYH,KAAKI,GAAK,GAG5BjB,EAAIgB,WACDH,KAAKI,GAAK,GAAMJ,KAAKsE,SAAWtE,KAAKI,GAAM,EAAIjB,EAAIgB,cAKxDzB,GAAKG,SAAQ,SAACM,GACZ,IAAIA,EAAI6G,QAAR,CAGA,IAAI6C,EACJ,OAAQ1J,EAAIC,UACV,IAAK,UACHyJ,EAAc,EACd,MACF,IAAK,OACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,IAAK,UACHA,EAAc,EACd,MACF,QACEA,EAAc,EAElB,IAAMC,EAAe3J,EAAIyB,WAAa,EAAI,EAAI,EACxCmI,EACJ5J,EAAIF,EAAIe,KAAKe,IAAI5B,EAAIgB,WAAahB,EAAIgD,MAAQ0G,EAAcC,EACxDE,EACJ7J,EAAID,EAAIc,KAAKgB,IAAI7B,EAAIgB,WAAahB,EAAIgD,MAAQ0G,EAAcC,EAE1DG,GAAkB,EACtB5E,EAAYxF,SAAQ,SAACoJ,GACnB,GAAIA,EAAK/D,SAAWP,EAGlB,OAFAxE,EAAIF,EAAI8J,OACR5J,EAAID,EAAI8J,GAIRD,GAAWd,EAAKhJ,GAChB8J,GAAWd,EAAKhJ,EAAIgJ,EAAK5K,OACzB2L,GAAWf,EAAK/I,GAChB8J,GAAWf,EAAK/I,EAAI+I,EAAK1K,SAGzB4B,EAAIgB,UAAYH,KAAKI,GAAKjB,EAAIgB,UAC9B8I,GAAkB,MAIjBA,IACH9J,EAAIF,EAAI8J,EACR5J,EAAID,EAAI8J,OA0NRvC,KAjCkB,SAAChI,GACH,OAAhBqE,IAIJrE,EAAIM,YACJN,EAAIE,YAAc,UAClBF,EAAI+B,UAAY,EAChB/B,EAAImB,UAAY,UAChBnB,EAAIyK,KAAK,IAAM,EAAG,IAAM,KACxBzK,EAAI4B,OACJ5B,EAAIgC,UAuBA0I,CAAgB1K,KAOdjC,YAAaA,GACbC,gBAAiBA,OIpsBV2M,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASjM,OACP,cAAC,IAAMkM,WAAP,UACE,cAAC,GAAD,MAEF1D,SAAS2D,eAAe,SAM1BX,O","file":"static/js/main.a3e1844e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasSupport\":\"AntHill_canvasSupport__1XU9R\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { hsl, hex, rgb } from \"color-convert\";\n\nimport generateStupidName from \"sillyname\";\n\nimport \"./App.css\";\nimport AntHill from \"./components/Anthill\";\nimport { drawAnts } from \"./drawAnts\";\nimport { displayHelp } from \"./displayHelp\";\n\nconst DEFAULT_SPEED = 1;\nconst DEFAULT_ENERGY = 2;\nconst DEFAULT_FOOD = 4000;\nconst DEFAULT_HIT_POINTS = 100;\nconst DEFAULT_MAX_HIT_POINTS = 100;\nconst DEFAULT_SIZE = 1;\nconst DEFAULT_STRENGTH = 40;\nconst DEFAULT_REACH = 30;\nconst DEFAULT_DR = 5;\n\nexport const DEFAULT_PERCEPTION = 80;\nexport const DEFAULT_TRACKING = 80;\nexport const DEFAULT_PHEROMON = 120;\n\nexport const DEFAULT_SENSOR_AREA = 80;\n\nexport const NORMAL_MODE = \"NORMAL_MODE\";\nexport const FLEEING_MODE = \"FLEEING_MODE\";\nexport const HUNTING_MODE = \"HUNTING_MODE\";\nexport const MATING_MODE = \"MATING_MODE\";\n\nexport const HEN_SIDE = \"HEN_SIDE\";\nexport const VIPER_SIDE = \"VIPER_SIDE\";\nexport const FOX_SIDE = \"FOX_SIDE\";\n\nconst NUMBER_PER_SIDE = 30;\n\nconst FOOD_LOW = 1000;\nconst FOOD_BOOST_NEWBORN = 700;\n\nlet selectedAnt = null;\n\nexport const sides = {\n  [HEN_SIDE]: {\n    side: HEN_SIDE,\n    color: \"#995500\",\n    canKill: { [VIPER_SIDE]: true },\n  },\n  [VIPER_SIDE]: {\n    side: VIPER_SIDE,\n    color: \"#44CC44\",\n    canKill: { [FOX_SIDE]: true },\n  },\n  [FOX_SIDE]: {\n    side: FOX_SIDE,\n    color: \"#CC4444\",\n    canKill: { [HEN_SIDE]: true },\n  },\n};\n\nexport const maturities = {\n  newborn: {\n    size: 2,\n  },\n  baby: {\n    size: 4,\n  },\n  child: {\n    size: 5,\n  },\n  adult: {\n    size: 8,\n  },\n  elderly: {\n    size: 7,\n  },\n};\n\nexport let displayAnts = true;\nexport let displayAntenna = false;\nexport let displayWillBreed = false;\nexport let displaySensorArea = false;\nexport let displayEyes = true;\nexport let displayWalls = true;\nexport let enableBreed = true;\nexport let enablePrey = false;\nexport let enableGate = false;\nexport let enableSenescence = true;\nexport let enableDieOnFood = true;\nexport let displayDebug = false;\nexport let displayFood = false;\nexport let enableChildKills = false;\nexport let isPaused = false;\n\nconst WALL_TEMPLATES = [\n  [],\n  [\n    { x: 100, y: 1400, width: 3800, height: 10 },\n    { x: 2000, y: 100, width: 10, height: 1300 },\n  ],\n  [\n    { x: 1900, y: 0, width: 200, height: 950 },\n    { x: 1900, y: 1050, width: 200, height: 950 },\n  ],\n  [\n    { x: 2000, y: 0, width: 10, height: 2000, isGate: true },\n    { x: 0, y: 1000, width: 4000, height: 10, isGate: true },\n  ],\n  [\n    { x: 2000, y: 0, width: 10, height: 2000, isGate: true },\n    { x: 1000, y: 1000, width: 2000, height: 10, isGate: true },\n    { x: 1600, y: 1000, width: 800, height: 10 },\n    { x: 1000, y: 600, width: 10, height: 800 },\n    { x: 3000, y: 600, width: 10, height: 800 },\n    { x: 1600, y: 400, width: 800, height: 10 },\n    { x: 1600, y: 1600, width: 800, height: 10 },\n    { x: 0, y: 600, width: 1000, height: 10 },\n    { x: 3000, y: 1400, width: 1000, height: 10 },\n  ],\n];\n\nlet cursorX = 0;\nlet cursorY = 0;\n\nconst handleMouseMove = ({ canvasX, canvasY }) => {\n  cursorX = canvasX;\n  cursorY = canvasY;\n};\nexport let listOfWalls =\n  WALL_TEMPLATES[Math.floor(Math.random() * WALL_TEMPLATES.length)];\n\nexport const listOfDeaths = [];\n\nconst areAntsSameGeneration = (ant, otherAnt) =>\n  ant.generation === otherAnt.generation;\nconst areNotSameAnts = (ant, otherAnt) => ant.id !== otherAnt.id;\nconst canBothAntsBreed = (ant, otherAnt) => ant.canBreed && otherAnt.canBreed;\nconst areCloseEnough = (ant, otherAnt) =>\n  Math.abs(otherAnt.x - ant.x) < 30 && Math.abs(otherAnt.y - ant.y) < 30;\nconst areAntsSameSide = (ant, otherAnt) => ant.side === otherAnt.side;\n\nconst isContactBetween = (ant, otherAnt) =>\n  areCloseEnough(ant, otherAnt) && areNotSameAnts(ant, otherAnt);\n\nconst canBothAntsHaveBaby = (ant, otherAnt) =>\n  ant.bredRest === 0 && otherAnt.bredRest === 0;\n\nconst isAntAThreatForOtherAnt = (ant, otherAnt) => {\n  if (\n    !enableChildKills &&\n    (otherAnt.maturity === \"newborn\" ||\n      otherAnt.maturity === \"baby\" ||\n      otherAnt.maturity === \"child\")\n  ) {\n    return false;\n  }\n\n  return ant.maturity === \"adult\" && sides[ant.side].canKill[otherAnt.side];\n};\nconst canAntKillOtherAnt = (ant, otherAnt) => {\n  if (\n    !enableChildKills &&\n    (otherAnt.maturity === \"newborn\" ||\n      otherAnt.maturity === \"baby\" ||\n      otherAnt.maturity === \"child\")\n  ) {\n    return false;\n  }\n\n  if (\n    Math.sqrt((ant.x - otherAnt.x) ** 2 + (ant.y - otherAnt.y) ** 2) > ant.reach\n  ) {\n    return false;\n  }\n  return ant.maturity === \"adult\" && sides[ant.side].canKill[otherAnt.side];\n};\nconst isAntAdult = (ant) => ant.maturity === \"adult\";\n\nconst randomSide = () => {\n  const sidesArray = Object.keys(sides);\n  const randomIndex = Math.floor(Math.random() * sidesArray.length);\n  return sidesArray[randomIndex];\n};\n\nconst antFactory = ({ side, x, y }) => {\n  const antSide = side ? side : randomSide();\n  return {\n    id: uuidv4(),\n    name: generateStupidName(),\n    x: x ? x : Math.floor(Math.random() * 3600) + 200,\n    y: y ? y : Math.floor(Math.random() * 1600) + 200,\n    direction: Math.PI / 2,\n    food: DEFAULT_FOOD,\n    speed: DEFAULT_SPEED,\n    energy: DEFAULT_ENERGY,\n    hitPoints: DEFAULT_HIT_POINTS,\n    maxHitPoints: DEFAULT_MAX_HIT_POINTS,\n    strength: DEFAULT_STRENGTH,\n    reach: DEFAULT_REACH,\n    damageReduction: DEFAULT_DR,\n    sensorArea: DEFAULT_SENSOR_AREA,\n    trackingArea: DEFAULT_TRACKING,\n    pheromonsArea: DEFAULT_PHEROMON,\n    perceptionArea: DEFAULT_PERCEPTION,\n    isTired: false,\n    color: sides[side].color,\n    canBreed: false,\n    bredRest: 0,\n    size: DEFAULT_SIZE,\n    age: 1,\n    maturity: \"child\",\n    generation: 1,\n    side: antSide,\n  };\n};\n\nexport let ants = [];\n\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: VIPER_SIDE })];\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: HEN_SIDE })];\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants = [...ants, antFactory({ side: FOX_SIDE })];\n}\n\ndocument.addEventListener(\n  \"keydown\",\n  (e) => {\n    if (e.key === \"v\") {\n      ants = [...ants, antFactory({ side: VIPER_SIDE })];\n    }\n    if (e.key === \"V\") {\n      ants = [\n        ...ants,\n        antFactory({ side: VIPER_SIDE, x: cursorX, y: cursorY }),\n      ];\n    }\n    if (e.key === \"f\") {\n      ants = [...ants, antFactory({ side: FOX_SIDE })];\n    }\n    if (e.key === \"F\") {\n      ants = [...ants, antFactory({ side: FOX_SIDE, x: cursorX, y: cursorY })];\n    }\n    if (e.key === \"h\") {\n      ants = [...ants, antFactory({ side: HEN_SIDE })];\n    }\n    if (e.key === \"H\") {\n      ants = [...ants, antFactory({ side: HEN_SIDE, x: cursorX, y: cursorY })];\n    }\n    if (e.key === \"B\") {\n      enableBreed = !enableBreed;\n    }\n    if (e.key === \"b\") {\n      displayWillBreed = !displayWillBreed;\n    }\n    if (e.key === \"a\") {\n      displayAnts = !displayAnts;\n    }\n    if (e.key === \"s\") {\n      displaySensorArea = !displaySensorArea;\n    }\n    if (e.key === \"e\") {\n      displayEyes = !displayEyes;\n    }\n    if (e.key === \"k\") {\n      enablePrey = !enablePrey;\n    }\n    if (e.key === \"w\") {\n      displayWalls = !displayWalls;\n    }\n    if (e.key === \"d\") {\n      displayDebug = !displayDebug;\n    }\n    if (e.key === \"g\") {\n      enableGate = !enableGate;\n    }\n    if (e.key === \"o\") {\n      displayFood = !displayFood;\n    }\n    if (e.key === \"x\") {\n      enableDieOnFood = !enableDieOnFood;\n    }\n    if (e.key === \"c\") {\n      enableSenescence = !enableSenescence;\n    }\n    if (e.key === \"i\") {\n      enableChildKills = !enableChildKills;\n    }\n    if (e.key === \" \") {\n      isPaused = !isPaused;\n    }\n    if (e.key === \"D\") {\n      debugger;\n    }\n    if (e.key === \"K\") {\n      ants = [];\n    }\n    if (e.key === \"S\") {\n      ants = ants.filter(() => Math.random() > 0.5);\n    }\n    if (e.key === \">\") {\n      listOfWalls =\n        WALL_TEMPLATES[Math.floor(Math.random() * WALL_TEMPLATES.length)];\n    }\n  },\n  false\n);\n\nconst handleBirthday = (frameCount) => {\n  ants.forEach((ant) => {\n    ant.oscillator = Math.cos(frameCount / 10);\n    if (ant.hitPoints < ant.maxHitPoints) {\n      ant.hitPoints += 0.25;\n      if (ant.hitPoints >= ant.maxHitPoints) {\n        ant.isInjuried = false;\n      }\n    }\n    if (ant.bredRest > 0) {\n      ant.bredRest = ant.bredRest - 1;\n    }\n    ant.age = ant.age + 1;\n    if (ant.age < 200) {\n      ant.maturity = \"newborn\";\n    } else if (ant.age < 400) {\n      ant.maturity = \"baby\";\n    } else if (ant.age < 1200) {\n      ant.maturity = \"child\";\n    } else if (ant.age < 8000) {\n      ant.maturity = \"adult\";\n      ant.canBreed = true;\n    } else if (ant.age < 10000 && enableSenescence) {\n      ant.maturity = \"elderly\";\n      ant.canBreed = false;\n      ant.energy = 5;\n    } else if (enableSenescence) {\n      ant.isDead = true;\n    }\n  });\n};\n\nconst distanceBetweenAnts = (ant, otherAnt) => {\n  return Math.sqrt((ant.x - otherAnt.x) ** 2 + (ant.y - otherAnt.y) ** 2);\n};\n\nconst handlePerceptions = () => {\n  ants.forEach((ant) => {\n    ant.mode = NORMAL_MODE;\n    ant.preys = ants.filter(\n      (otherAnt) =>\n        distanceBetweenAnts(ant, otherAnt) < ant.trackingArea &&\n        otherAnt.id !== ant.id &&\n        isAntAThreatForOtherAnt(ant, otherAnt)\n    );\n    ant.predators = ants.filter(\n      (otherAnt) =>\n        distanceBetweenAnts(ant, otherAnt) < ant.perceptionArea &&\n        otherAnt.id !== ant.id &&\n        isAntAThreatForOtherAnt(ant, otherAnt)\n    );\n    ant.mates = ants.filter(\n      (otherAnt) =>\n        distanceBetweenAnts(ant, otherAnt) < ant.pheromonsArea &&\n        otherAnt.id !== ant.id &&\n        enableBreed &&\n        areAntsSameSide(ant, otherAnt) &&\n        canBothAntsHaveBaby(ant, otherAnt) &&\n        isAntAdult(ant)\n    );\n  });\n};\n\nconst handleDirectionChange = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    ant.mode = NORMAL_MODE;\n    const neighbors = ants.filter(\n      (otherAnt) =>\n        Math.abs(otherAnt.x - ant.x) < ant.sensorArea &&\n        Math.abs(otherAnt.y - ant.y) < ant.sensorArea &&\n        otherAnt.id !== ant.id\n    );\n    const adultNeighbors = neighbors.filter(\n      (otherAnt) => isAntAdult(otherAnt) && otherAnt.id !== ant.id\n    );\n\n    const mates = adultNeighbors.filter(\n      (otherAnt) =>\n        enableBreed &&\n        areAntsSameSide(ant, otherAnt) &&\n        canBothAntsHaveBaby(ant, otherAnt) &&\n        isAntAdult(ant)\n    );\n    if (mates.length > 0) {\n      const mate = mates[0];\n      ant.direction = Math.atan2(mate.y - ant.y, mate.x - ant.x);\n      ant.mode = MATING_MODE;\n    }\n\n    const threats = adultNeighbors.filter((otherAnt) =>\n      isAntAThreatForOtherAnt(otherAnt, ant)\n    );\n    if (threats.length > 0) {\n      const threat = threats[0];\n      ant.direction = Math.PI + Math.atan2(threat.y - ant.y, threat.x - ant.x);\n      ant.mode = FLEEING_MODE;\n    }\n\n    if (enablePrey || ant.food < FOOD_LOW) {\n      const preys = neighbors.filter((otherAnt) =>\n        isAntAThreatForOtherAnt(ant, otherAnt)\n      );\n      if (preys.length > 0) {\n        const prey = preys[0];\n        ant.direction = Math.atan2(prey.y - ant.y, prey.x - ant.x);\n        ant.mode = HUNTING_MODE;\n      }\n    }\n\n    if (ant.x > 4000) {\n      ant.direction = Math.PI;\n    }\n    if (ant.x < 0) {\n      ant.direction = 0;\n    }\n    if (ant.y > 2000) {\n      ant.direction = (3 * Math.PI) / 2;\n    }\n    if (ant.y < 0) {\n      ant.direction = Math.PI / 2;\n    }\n\n    ant.direction =\n      -Math.PI / 18 + (Math.random() * Math.PI) / 9 + ant.direction;\n  });\n};\n\nconst handleMoveAnts = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    let speedFactor;\n    switch (ant.maturity) {\n      case \"newborn\":\n        speedFactor = 0;\n        break;\n      case \"baby\":\n        speedFactor = 1;\n        break;\n      case \"child\":\n        speedFactor = 2;\n        break;\n      case \"adult\":\n        speedFactor = 3;\n        break;\n      case \"elderly\":\n        speedFactor = 1;\n        break;\n      default:\n        speedFactor = 1;\n    }\n    const injuryFactor = ant.isInjuried ? 2 / 3 : 1;\n    const wantedX =\n      ant.x + Math.cos(ant.direction) * ant.speed * speedFactor * injuryFactor;\n    const wantedY =\n      ant.y + Math.sin(ant.direction) * ant.speed * speedFactor * injuryFactor;\n\n    let isAntInsideWall = false;\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ant.x = wantedX;\n        ant.y = wantedY;\n        return;\n      }\n      if (\n        wantedX >= wall.x &&\n        wantedX <= wall.x + wall.width &&\n        wantedY >= wall.y &&\n        wantedY <= wall.y + wall.height\n      ) {\n        // ant.direction = Math.PI + Math.atan2(wall.y - ant.y, wall.x - ant.x);\n        ant.direction = Math.PI + ant.direction;\n        isAntInsideWall = true;\n      }\n    });\n\n    if (!isAntInsideWall) {\n      ant.x = wantedX;\n      ant.y = wantedY;\n    }\n  });\n};\n\nconst handleFatigue = () => {\n  ants.forEach((ant) => {\n    if (ant.brood > 0) {\n      ant.brood = ant.brood - 1;\n      ant.isTired = true;\n    } else {\n      ant.isTired = false;\n    }\n  });\n};\n\nfunction handleBirth(ant, otherAnt) {\n  ant.bredRest = 400;\n  otherAnt.bredRest = 400;\n\n  const [r1, g1, b1] = hex.rgb(ant.color.substring(1));\n  const [r2, g2, b2] = hex.rgb(otherAnt.color.substring(1));\n\n  ant.brood = 100;\n  otherAnt.brood = 100;\n\n  const rgbNewAnt = [\n    Math.floor(Math.sqrt((r1 * r1 + r2 * r2) / 2)),\n    Math.floor(Math.sqrt((g1 * g1 + g2 * g2) / 2)),\n    Math.floor(Math.sqrt((b1 * b1 + b2 * b2) / 2)),\n  ];\n\n  let [h, s, l] = rgb.hsl(rgbNewAnt);\n  s = Math.floor(s + Math.random(10) - 5);\n  l = Math.floor(l + Math.random(10) - 5);\n\n  const speed =\n    Math.floor(ant.speed + otherAnt.speed) / 2 - 0.5 + Math.random();\n  const sensorArea = Math.floor(\n    Math.floor(ant.sensorArea + otherAnt.sensorArea) / 2 - 4 + Math.random() * 8\n  );\n\n  const trackingArea = Math.floor(\n    Math.floor(ant.trackingArea + otherAnt.trackingArea) / 2 -\n      4 +\n      Math.random() * 8\n  );\n\n  const perceptionArea = Math.floor(\n    Math.floor(ant.perceptionArea + otherAnt.perceptionArea) / 2 -\n      4 +\n      Math.random() * 8\n  );\n\n  const pheromonsArea = Math.floor(\n    Math.floor(ant.pheromonsArea + otherAnt.pheromonsArea) / 2 -\n      4 +\n      Math.random() * 8\n  );\n\n  const size =\n    Math.floor(ant.size + otherAnt.size) / 2 - 0.2 + Math.random() * 0.4;\n  const newAnt = {\n    id: uuidv4(),\n    name: generateStupidName(),\n    x: Math.floor(ant.x + otherAnt.x) / 2,\n    y: Math.floor(ant.y + otherAnt.y) / 2,\n    direction: 0,\n    brood: 0,\n    sensorArea:\n      sensorArea > DEFAULT_SENSOR_AREA ? sensorArea : DEFAULT_SENSOR_AREA,\n    trackingArea: trackingArea > 0 ? trackingArea : 0,\n    perceptionArea: perceptionArea > 0 ? perceptionArea : 0,\n    pheromonsArea: pheromonsArea > 0 ? pheromonsArea : 0,\n    speed: speed > DEFAULT_SPEED ? speed : DEFAULT_SPEED,\n    energy: DEFAULT_ENERGY,\n    hitPoints: Math.floor(\n      (ant.hitPoints + otherAnt.hitPoints) / 2 + Math.random() * 10 - 5\n    ),\n    maxHitPoints: Math.floor(ant.maxHitPoints + otherAnt.maxHitPoints) / 2,\n    strength: Math.floor(\n      (ant.strength + otherAnt.strength) / 2 + Math.random() * 4 - 2\n    ),\n    reach: Math.floor((ant.reach + otherAnt.reach) / 2 + Math.random() * 4 - 2),\n    damageReduction: Math.floor(\n      (ant.damageReduction + otherAnt.damageReduction) / 2\n    ),\n    color: `#${hsl.hex([h, s, l])}`,\n    canBreed: false,\n    hasBred: false,\n    mode: NORMAL_MODE,\n    size: size > DEFAULT_SIZE ? size : DEFAULT_SIZE,\n    age: 0,\n    bredRest: 0,\n    generation:\n      ant.generation > otherAnt.generation\n        ? ant.generation + 1\n        : otherAnt.generation + 1,\n    food: Math.floor(ant.food + otherAnt.food) / 2 + FOOD_BOOST_NEWBORN,\n    side: ant.side,\n  };\n  ants = [...ants, newAnt];\n}\n\nconst handleContacts = () => {\n  ants.forEach((ant) => {\n    ants.forEach((otherAnt) => {\n      if (isContactBetween(ant, otherAnt)) {\n        if (\n          enableBreed &&\n          areAntsSameSide(ant, otherAnt) &&\n          canBothAntsBreed(ant, otherAnt) &&\n          canBothAntsHaveBaby(ant, otherAnt)\n        ) {\n          handleBirth(ant, otherAnt);\n        } else {\n          if (!areAntsSameSide(ant, otherAnt)) {\n            if (canAntKillOtherAnt(ant, otherAnt) && isAntAdult(ant)) {\n              otherAnt.hitPoints = otherAnt.hitPoints - ant.strength;\n              if (otherAnt.hitPoints <= 0) {\n                otherAnt.isDead = true;\n                listOfDeaths.push({ x: otherAnt.x, y: otherAnt.y });\n                ant.food = ant.food + otherAnt.food;\n              } else {\n                otherAnt.isInjuried = true;\n              }\n            }\n          }\n        }\n      }\n    });\n  });\n};\n\nconst handleDeaths = () => {\n  ants = ants.filter((ant) => !ant.isDead);\n};\nconst drawWalls = (ctx) => {\n  if (displayWalls) {\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ctx.fillStyle = \"#333333\";\n      } else {\n        ctx.fillStyle = \"#888888\";\n      }\n      ctx.fillRect(wall.x, wall.y, wall.width, wall.height);\n    });\n  }\n};\n\nconst handleFood = () => {\n  ants\n    //    .filter((ant) => ant.maturity === \"adult\" || ant.maturity === \"elderly\")\n    .forEach((ant) => {\n      ant.food = ant.food - 1;\n      if (ant.food <= 0 && enableDieOnFood) {\n        ant.isDead = true;\n      }\n    });\n};\n\nconst handleClick = ({ canvasX, canvasY }) => {\n  console.log(selectedAnt);\n  ants.forEach((ant) => ant.isSelected === false);\n  console.log(ants.find((ant) => ant.isSelected));\n  ants.forEach((ant) => {\n    if (!ant.maturity) {\n      console.log(\"No maturity for ant\", ant);\n      return;\n    }\n    if (\n      canvasX >= ant.x - maturities[ant.maturity].size * 3 &&\n      canvasX <= ant.x + maturities[ant.maturity].size * 3 &&\n      canvasY >= ant.y - maturities[ant.maturity].size * 3 &&\n      canvasY <= ant.y + maturities[ant.maturity].size * 3\n    ) {\n      console.log(ant);\n      ant.isSelected = true;\n      selectedAnt = ant;\n    } else {\n      selectedAnt = null;\n    }\n  });\n};\n\nconst drawSelectedAnt = (ctx) => {\n  if (selectedAnt === null) {\n    return;\n  }\n\n  ctx.beginPath();\n  ctx.strokeStyle = \"#FFFF00\";\n  ctx.lineWidth = 2;\n  ctx.fillStyle = \"#000000\";\n  ctx.rect(3000, 0, 1000, 1000);\n  ctx.fill();\n  ctx.stroke();\n};\n\nfunction App() {\n  const draw = (ctx, frameCount) => {\n    if (!isPaused) {\n      ctx.beginPath();\n      ctx.fillStyle = \"#202020\";\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      displayHelp(ctx);\n      handleBirthday(frameCount);\n      handleFood();\n      handleDeaths();\n      drawWalls(ctx);\n      if (displayAnts) {\n        drawAnts(ctx, ants);\n      }\n      handleFatigue(ants);\n      handlePerceptions();\n      handleDirectionChange();\n      handleMoveAnts();\n      handleContacts();\n      drawSelectedAnt(ctx);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <AntHill\n        draw={draw}\n        handleClick={handleClick}\n        handleMouseMove={handleMouseMove}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useRef, useEffect } from 'react';\nimport styles from './AntHill.module.css';\n\nconst CANVAS_WIDTH = 4000;\nconst CANVAS_HEIGHT = 2000;\n\nconst AntHill = (props) => {\n  const canvasRef = useRef(null);\n  const { draw, handleClick, handleMouseMove } = props;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    canvas.addEventListener('mousemove', (e) => {\n      const canvasWidth = canvas.getBoundingClientRect().width;\n      const canvasHeight = canvas.getBoundingClientRect().height;\n      const canvasX = e.clientX*CANVAS_WIDTH/canvasWidth;\n      const canvasY = e.clientY*CANVAS_HEIGHT/canvasHeight;\n      handleMouseMove({canvasX, canvasY});\n    }, false);\n    canvas.addEventListener('click', (e) => {\n      const canvasWidth = canvas.getBoundingClientRect().width;\n      const canvasHeight = canvas.getBoundingClientRect().height;\n      const canvasX = e.clientX*CANVAS_WIDTH/canvasWidth;\n      const canvasY = e.clientY*CANVAS_HEIGHT/canvasHeight;\n      handleClick({canvasX, canvasY});\n    }, false);\n\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [draw]);\n\n  console.log(window.innerWidth / 2);\n  console.log(window.innerHeight/ 2);\n  return <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} className={styles.canvasSupport} ref={canvasRef}{...props}></canvas>\n};\n\nexport default AntHill;","import { hex, hsl } from \"color-convert\";\nimport {\n  sides,\n  listOfDeaths,\n  displayWillBreed,\n  displayAntenna,\n  displaySensorArea,\n  displayEyes,\n  displayFood,\n  maturities,\n  NORMAL_MODE,\n  FLEEING_MODE,\n  HUNTING_MODE,\n  MATING_MODE,\n} from \"./App\";\n\nconst drawPerceptionCircles = (ctx, ant) => {\n  ctx.beginPath();\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"#C0E0C0\";\n  ctx.arc(ant.x, ant.y, ant.perceptionArea, 0, 2 * Math.PI);\n  ctx.stroke();\n\n  ctx.font = \"20px monospace\";\n  ctx.fillStyle = \"#C0E0C0\";\n  ctx.fillText(\n    `${Math.floor(ant.perceptionArea)}`,\n    ant.x - ant.perceptionArea + 5,\n    ant.y\n  );\n\n  ctx.beginPath();\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"#E0C0C0\";\n  ctx.arc(ant.x, ant.y, ant.trackingArea, 0, 2 * Math.PI);\n  ctx.stroke();\n\n  ctx.font = \"20px monospace\";\n  ctx.fillStyle = \"#E0C0C0\";\n  ctx.fillText(\n    `${Math.floor(ant.trackingArea)}`,\n    ant.x + ant.trackingArea - 30,\n    ant.y\n  );\n\n  ctx.beginPath();\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"#E0C0D0\";\n  ctx.arc(ant.x, ant.y, ant.pheromonsArea, 0, 2 * Math.PI);\n  ctx.stroke();\n\n  ctx.font = \"20px monospace\";\n  ctx.fillStyle = \"#E0C0D0\";\n  ctx.fillText(\n    `${Math.floor(ant.pheromonsArea)}`,\n    ant.x,\n    ant.y - ant.pheromonsArea + 5\n  );\n};\n\nconst drawSensorArea = (ctx, ant) => {\n  ctx.lineWidth = 0.25;\n  ctx.strokeRect(\n    ant.x - ant.sensorArea / 2,\n    ant.y - ant.sensorArea / 2,\n    ant.sensorArea,\n    ant.sensorArea\n  );\n  ctx.font = \"16px monospace\";\n  ctx.fillStyle = ant.color;\n  ctx.fillText(\n    `${Math.floor(ant.sensorArea)}`,\n    ant.x - ant.sensorArea / 2,\n    ant.y - ant.sensorArea / 2\n  );\n  ctx.fillText(\n    `${Math.floor(ant.speed * 10)}`,\n    ant.x + ant.sensorArea / 2 - 12,\n    ant.y - ant.sensorArea / 2\n  );\n  ctx.fillText(\n    `${Math.floor(ant.generation)}`,\n    ant.x,\n    ant.y - ant.sensorArea / 2\n  );\n};\n\nconst drawEyes = (ctx, ant) => {\n  const [h, s, l] = hex.hsl(ant.color.substring(1));\n\n  const eyeSize = 4;\n  ctx.beginPath();\n  //  ctx.fillStyle = `#${hsl.hex(h, s, l + 30)}`;\n  ctx.fillStyle = \"#ffffff\";\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n\n  ctx.beginPath();\n  const pupilSize = ant.mode === NORMAL_MODE ? 2 : 3;\n  let pupilColor;\n  switch (ant.mode) {\n    case NORMAL_MODE:\n      pupilColor = \"#000000\";\n      break;\n    case FLEEING_MODE:\n      pupilColor = \"#008000\";\n      break;\n    case HUNTING_MODE:\n      pupilColor = \"#ff0000\";\n      break;\n    case MATING_MODE:\n      pupilColor = \"#ff00ff\";\n      break;\n    default:\n      pupilColor = \"#000000\";\n  }\n\n  /// ctx.fillStyle = `#${hsl.hex(h, s, l - 30)}`;\n  ctx.fillStyle = pupilColor;\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n};\n\nconst drawAntenna = (ctx, ant) => {\n  ctx.strokeStyle = ant.color;\n  ctx.fillStyle = ant.color;\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x +\n      Math.cos(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10,\n    ant.y +\n      Math.sin(ant.direction - Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = ant.color;\n  ctx.stroke();\n\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x +\n      Math.cos(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10,\n    ant.y +\n      Math.sin(ant.direction + Math.PI / 6) *\n        maturities[ant.maturity].size *\n        ant.size *\n        10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = ant.color;\n  ctx.stroke();\n};\n\nexport const drawAnts = (ctx, ants) => {\n  ctx.strokeStyle = \"#331111\";\n  listOfDeaths.forEach((point) => {\n    ctx.beginPath();\n    ctx.fillRect(point.x, point.y, 1, 1);\n  });\n  ants.forEach((ant) => {\n    ctx.beginPath();\n    if (ant.maturity === \"elderly\") {\n      const [h, s, l] = hex.hsl(ant.color.substring(1));\n      ctx.fillStyle = `#${hsl.hex(h, s / 2, l - 10)}`;\n    } else {\n      ctx.fillStyle = ant.color;\n    }\n    ctx.ellipse(\n      ant.x,\n      ant.y,\n      maturities[ant.maturity].size * ant.size * 2,\n      maturities[ant.maturity].size * ant.size +\n        maturities[ant.maturity].size * ant.size * Math.abs(ant.oscillator),\n      ant.direction,\n      0,\n      2 * Math.PI\n    );\n    ctx.fill();\n    if (displayWillBreed && ant.bredRest > 0) {\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 1;\n      ctx.stroke();\n    }\n    if (displayFood) {\n      if (ant.food < 500) {\n        ctx.strokeStyle = \"#ff0000\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 1000) {\n        ctx.strokeStyle = \"#ffff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 2000) {\n        ctx.strokeStyle = \"#00ff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      }\n    }\n    if (ant.isInjuried) {\n      ctx.beginPath();\n      ctx.fillStyle = \"#ff0000\";\n      ctx.ellipse(\n        ant.x,\n        ant.y,\n        maturities[ant.maturity].size * ant.size * 2,\n        maturities[ant.maturity].size * ant.size +\n          maturities[ant.maturity].size * ant.size * Math.abs(ant.oscillator),\n        ant.direction,\n        Math.PI - Math.PI / 3,\n        Math.PI + Math.PI / 3\n      );\n      ctx.fill();\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(ant.x, ant.y);\n    ctx.lineTo(\n      ant.x +\n        Math.cos(ant.direction) * maturities[ant.maturity].size * ant.size * 2,\n      ant.y +\n        Math.sin(ant.direction) * maturities[ant.maturity].size * ant.size * 2\n    );\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = ant.color;\n    ctx.stroke();\n\n    if (displayAntenna) {\n      drawAntenna(ctx, ant);\n    }\n    if (\n      displayEyes &&\n      (ant.maturity === \"adult\" ||\n        ant.maturity === \"elderly\" ||\n        ant.maturity === \"child\" ||\n        ant.maturity === \"baby\")\n    ) {\n      drawEyes(ctx, ant);\n    }\n\n    if (displaySensorArea) {\n      drawSensorArea(ctx, ant);\n      drawPerceptionCircles(ctx, ant);\n    }\n    if (ant.isSelected) {\n      ctx.beginPath();\n      ctx.strokeStyle = \"#ff8888\";\n      ctx.fillStyle = \"#ffffff\";\n      ctx.lineWidth = 3;\n      ctx.arc(\n        ant.x,\n        ant.y,\n        maturities[ant.maturity].size * ant.size * 3,\n        0,\n        2 * Math.PI\n      );\n      ctx.stroke();\n    }\n  });\n};\n","import {\n  ants,\n  FOX_SIDE,\n  VIPER_SIDE,\n  HEN_SIDE,\n  displayDebug,\n  enablePrey,\n  enableGate,\n  displayAnts,\n  displayFood,\n  enableDieOnFood,\n  enableSenescence,\n  displaySensorArea,\n  enableBreed,\n  enableChildKills,\n} from \"./App\";\n\nexport const displayHelp = (ctx) => {\n  ctx.font = \"36px serif\";\n  ctx.fillStyle = \"#ffffff\";\n  const nbFoxes = ants.filter((ant) => ant.side === FOX_SIDE).length;\n  const nbVipers = ants.filter((ant) => ant.side === VIPER_SIDE).length;\n  const nbHens = ants.filter((ant) => ant.side === HEN_SIDE).length;\n  if (displayDebug) {\n    ctx.fillStyle = \"#00FF00\";\n    ctx.fillText(\"Display debug (d) enabled\", 30, 40);\n    ctx.fillStyle = \"#CC4444\";\n    ctx.fillText(`${nbFoxes} foxes, (f) to add (F) on cursor`, 30, 80);\n    ctx.fillStyle = \"#995500\";\n    ctx.fillText(`${nbHens} hens, (h) to add (H) on cursor`, 30, 120);\n    ctx.fillStyle = \"#44CC44\";\n    ctx.fillText(`${nbVipers} vipers, (v) to add (V) on cursor`, 30, 160);\n    if (enablePrey) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Prey mode (k) enabled\", 30, 200);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Prey mode (k) disabled\", 30, 200);\n    }\n    if (enableGate) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Gate (g) enabled\", 30, 240);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Gate (g) disabled\", 30, 240);\n    }\n    if (displayAnts) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Ants (a) displayed\", 30, 280);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Ants (a) hidden\", 30, 280);\n    }\n    if (displayFood) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Food (o) displayed\", 30, 320);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Food (o) hidden\", 30, 320);\n    }\n    if (enableDieOnFood) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on starvation (x) enabled\", 30, 360);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on starvation (x) disabled\", 30, 360);\n    }\n    if (enableSenescence) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on aging (c) enabled\", 30, 400);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on aging (c) disabled\", 30, 400);\n    }\n    if (displaySensorArea) {\n      ctx.fillStyle = \"#CCCC33\";\n      ctx.fillText(\"Sensor (s) displayed\", 30, 440);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Sensor (s) displayed\", 30, 440);\n    }\n    if (enableChildKills) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Allow to kill children (i) enabled\", 30, 480);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Allow to kill children (i) disabled\", 30, 480);\n    }\n    if (enableBreed) {\n      ctx.fillStyle = \"#00FF00\";\n      ctx.fillText(\"Allow to breed (B) enabled\", 30, 520);\n    } else {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Allow to breed (B) disabled\", 30, 520);\n    }\n    ctx.fillStyle = \"#880000\";\n    ctx.fillText(`Kill everybody, (K)`, 30, 560);\n    ctx.fillStyle = \"#808080\";\n    ctx.fillText(`Randomize walls, (>)`, 30, 600);\n    ctx.fillStyle = \"#880000\";\n    ctx.fillText(`Snap, (S)`, 30, 640);\n  } else {\n    ctx.fillStyle = \"#808080\";\n    ctx.fillText(\"Display debug (d) disabled\", 30, 40);\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}