{"version":3,"sources":["App.js","components/Anthill/index.jsx","drawAnts.js","reportWebVitals.js","index.js","components/Anthill/AntHill.module.css"],"names":["AntHill","props","canvasRef","useRef","draw","useEffect","animationFrameId","context","current","getContext","frameCount","render","window","requestAnimationFrame","cancelAnimationFrame","console","log","innerWidth","innerHeight","width","height","className","styles","canvasSupport","ref","drawAnts","ctx","ants","strokeStyle","listOfDeaths","forEach","point","beginPath","fillRect","x","y","ant","maturity","hex","hsl","sides","side","color","substring","h","s","l","fillStyle","ellipse","size","Math","abs","oscillator","direction","PI","fill","displayWillBreed","bredRest","lineWidth","stroke","displayFood","food","moveTo","lineTo","cos","sin","displayAntenna","drawAntenna","displayEyes","arc","pupilColor","pupilSize","mode","NORMAL_MODE","FLEEING_MODE","HUNTING_MODE","MATING_MODE","drawEyes","displaySensorArea","strokeRect","SENSOR_AREA","drawSensorArea","HEN_SIDE","VIPER_SIDE","FOX_SIDE","canKill","displayAnts","displayWalls","enablePrey","enableGate","enableSenescence","enableDieOnFood","displayDebug","listOfWalls","isGate","areAntsSameSide","otherAnt","isContactBetween","areCloseEnough","id","areNotSameAnts","canBothAntsHaveBaby","canAntKillOtherAnt","isAntAdult","randomSide","sidesArray","Object","keys","floor","random","length","antFactory","uuidv4","speed","energy","isTired","canBreed","age","generation","i","push","document","addEventListener","e","key","handleContacts","canBothAntsBreed","rgb","r1","g1","b1","r2","g2","b2","brood","rgbNewAnt","sqrt","newAnt","hasBred","handleBirth","isDead","App","canvas","font","fontWeight","nbFoxes","filter","nbVipers","nbHens","fillText","displayHelp","handleBirthday","wall","drawWalls","neighbors","adultNeighbors","threats","threat","atan2","mates","mate","preys","prey","speedFactor","wantedX","wantedY","isAntInsideWall","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"oJAqHA,I,iHCrFeA,EA7BC,SAACC,GACf,IAAMC,EAAYC,iBAAO,MACjBC,EAASH,EAATG,KACRC,qBAAU,WACR,IAIIC,EAHEC,EADSL,EAAUM,QACFC,WAAW,MAE9BC,EAAa,EAUjB,OAPe,SAATC,IACJD,IACAN,EAAKG,EAASG,GACdJ,EAAmBM,OAAOC,sBAAsBF,GAElDA,GAEO,WACLC,OAAOE,qBAAqBR,MAG7B,CAACF,IACJW,QAAQC,IAAIJ,OAAOK,WAAa,GAChCF,QAAQC,IAAIJ,OAAOM,YAAa,GAGhC,OAAO,oCAAQC,MAFD,IAEgBC,OADf,IACgCC,UAAWC,IAAOC,cAAeC,IAAKtB,GAAcD,KCsFxFwB,EAAW,SAACC,EAAKC,GAC5BD,EAAIE,YAAc,UAClBC,EAAaC,SAAQ,SAACC,GACpBL,EAAIM,YACJN,EAAIO,SAASF,EAAMG,EAAGH,EAAMI,EAAG,EAAG,MAEpCR,EAAKG,SAAQ,SAACM,GAEZ,GADAV,EAAIM,YACiB,YAAjBI,EAAIC,SAAwB,CAAC,IAAD,EACZC,MAAIC,IAAIC,EAAMJ,EAAIK,MAAMC,MAAMC,UAAU,IAD5B,mBACvBC,EADuB,KACpBC,EADoB,KACjBC,EADiB,KAE9BpB,EAAIqB,UAAJ,WAAoBR,MAAID,IAAIM,EAAGC,EAAI,EAAGC,EAAI,UAE1CpB,EAAIqB,UAAYP,EAAMJ,EAAIK,MAAMC,MAElChB,EAAIsB,QACFZ,EAAIF,EACJE,EAAID,EACO,EAAXC,EAAIa,KACJb,EAAIa,KAAOb,EAAIa,KAAOC,KAAKC,IAAIf,EAAIgB,YACnChB,EAAIiB,UACJ,EACA,EAAIH,KAAKI,IAEX5B,EAAI6B,OACAC,GAAoBpB,EAAIqB,SAAW,IACrC/B,EAAIE,YAAc,UAClBF,EAAIgC,UAAY,EAChBhC,EAAIiC,UAEFC,IACExB,EAAIyB,KAAO,KACbnC,EAAIE,YAAc,UAClBF,EAAIgC,UAAY,EAChBhC,EAAIiC,UACKvB,EAAIyB,KAAO,KACpBnC,EAAIE,YAAc,UAClBF,EAAIgC,UAAY,EAChBhC,EAAIiC,UACKvB,EAAIyB,KAAO,MACpBnC,EAAIE,YAAc,UAClBF,EAAIgC,UAAY,EAChBhC,EAAIiC,WAIRjC,EAAIM,YACJN,EAAIoC,OAAO1B,EAAIF,EAAGE,EAAID,GACtBT,EAAIqC,OACF3B,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,WAAajB,EAAIa,KAAO,EAC7Cb,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,WAAajB,EAAIa,KAAO,GAE/CvB,EAAIgC,UAAY,EAChBhC,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIiC,SAEAO,GAjFY,SAACxC,EAAKU,GACxBV,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIqB,UAAYP,EAAMJ,EAAIK,MAAMC,MAChChB,EAAIgC,UAAY,GAChBhC,EAAIM,YACJN,EAAIoC,OAAO1B,EAAIF,EAAGE,EAAID,GACtBT,EAAIqC,OACF3B,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KAAO,GAC3Db,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KAAO,IAE7DvB,EAAIgC,UAAY,EAChBhC,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIiC,SAEJjC,EAAIgC,UAAY,GAChBhC,EAAIM,YACJN,EAAIoC,OAAO1B,EAAIF,EAAGE,EAAID,GACtBT,EAAIqC,OACF3B,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KAAO,GAC3Db,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KAAO,IAE7DvB,EAAIgC,UAAY,EAChBhC,EAAIE,YAAcY,EAAMJ,EAAIK,MAAMC,MAClChB,EAAIiC,SA2DAQ,CAAYzC,EAAKU,IAGjBgC,GACkB,UAAjBhC,EAAIC,UACc,YAAjBD,EAAIC,UACa,UAAjBD,EAAIC,UACa,SAAjBD,EAAIC,UAxJK,SAACX,EAAKU,GAAS,IAAD,EACXE,MAAIC,IAAIC,EAAMJ,EAAIK,MAAMC,MAAMC,UAAU,IAD7B,kCAI7BjB,EAAIM,YAEJN,EAAIqB,UAAY,UAChBrB,EAAI2C,IACFjC,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KACpDb,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KANtC,EAQd,EACA,EAAIC,KAAKI,IAEX5B,EAAI2C,IACFjC,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KACpDb,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KAbtC,EAed,EACA,EAAIC,KAAKI,IAEX5B,EAAI6B,OAEJ7B,EAAIM,YACJ,IACIsC,EADEC,EAAYnC,EAAIoC,OAASC,EAAc,EAAI,EAEjD,OAAQrC,EAAIoC,MACV,KAAKC,EACHH,EAAa,UACb,MACF,KAAKI,EACHJ,EAAa,UACb,MACF,KAAKK,EACHL,EAAa,UAEb,MACF,KAAKM,EACHN,EAAa,UACb,MACF,QACEA,EAAa,UAIjB5C,EAAIqB,UAAYuB,EAChB5C,EAAI2C,IACFjC,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KACpDb,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KACpDsB,EACA,EACA,EAAIrB,KAAKI,IAEX5B,EAAI2C,IACFjC,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KACpDb,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,UAAYH,KAAKI,GAAK,GAAKlB,EAAIa,KACpDsB,EACA,EACA,EAAIrB,KAAKI,IAEX5B,EAAI6B,OA8FAsB,CAASnD,EAAKU,GAGZ0C,GAvKe,SAACpD,EAAKU,GAC3BV,EAAIgC,UAAY,IAChBhC,EAAIqD,WACF3C,EAAIF,EAAI8C,EAAc,EACtB5C,EAAID,EAAI6C,EAAc,EACtBA,EACAA,GAkKEC,CAAevD,EAAKU,OF7Kb4C,EAAc,GAEdP,EAAc,cACdC,EAAe,eACfC,EAAe,eACfC,EAAc,cAErBM,EAAW,WACXC,EAAa,aACbC,EAAW,WAOJ5C,GAAK,mBACf0C,EAAW,CACVzC,KAAMyC,EACNxC,MAAO,UACP2C,QAAQ,eAAIF,GAAa,KAJX,cAMfA,EAAa,CACZ1C,KAAM0C,EACNzC,MAAO,UACP2C,QAAQ,eAAID,GAAW,KATT,cAWfA,EAAW,CACV3C,KAAM2C,EACN1C,MAAO,UACP2C,QAAQ,eAAIH,GAAW,KAdT,GAkBPI,GAAc,EACdpB,GAAiB,EACjBV,GAAmB,EACnBsB,GAAoB,EACpBV,GAAc,EACdmB,GAAe,EACfC,GAAa,EACbC,GAAa,EACbC,GAAmB,EACnBC,GAAkB,EAClBC,GAAe,EACfhC,GAAc,EAEZ/B,EAAe,GACfgE,EAAc,CACzB,CAAE3D,EAAG,IAAMC,EAAG,EAAGhB,MAAO,GAAIC,OAAQ,IAAM0E,QAAQ,GAClD,CAAE5D,EAAG,IAAMC,EAAG,IAAMhB,MAAO,IAAMC,OAAQ,GAAI0E,QAAQ,GACrD,CAAE5D,EAAG,KAAMC,EAAG,IAAMhB,MAAO,IAAKC,OAAQ,IACxC,CAAEc,EAAG,IAAMC,EAAG,IAAKhB,MAAO,GAAIC,OAAQ,KACtC,CAAEc,EAAG,IAAMC,EAAG,IAAKhB,MAAO,GAAIC,OAAQ,KACtC,CAAEc,EAAG,KAAMC,EAAG,IAAKhB,MAAO,IAAKC,OAAQ,IACvC,CAAEc,EAAG,KAAMC,EAAG,KAAMhB,MAAO,IAAKC,OAAQ,IACxC,CAAEc,EAAG,EAAGC,EAAG,IAAKhB,MAAO,IAAMC,OAAQ,IACrC,CAAEc,EAAG,IAAMC,EAAG,KAAMhB,MAAO,IAAMC,OAAQ,KASrC2E,EAAkB,SAAC3D,EAAK4D,GAAN,OAAmB5D,EAAIK,OAASuD,EAASvD,MAE3DwD,EAAmB,SAAC7D,EAAK4D,GAAN,OAJF,SAAC5D,EAAK4D,GAAN,OACrB9C,KAAKC,IAAI6C,EAAS9D,EAAIE,EAAIF,GAAK,IAAMgB,KAAKC,IAAI6C,EAAS7D,EAAIC,EAAID,GAAK,GAIpE+D,CAAe9D,EAAK4D,IAPC,SAAC5D,EAAK4D,GAAN,OAAmB5D,EAAI+D,KAAOH,EAASG,GAO3BC,CAAehE,EAAK4D,IAEjDK,EAAsB,SAACjE,EAAK4D,GAAN,OACT,IAAjB5D,EAAIqB,UAAwC,IAAtBuC,EAASvC,UAE3B6C,EAAqB,SAAClE,EAAK4D,GAAN,MACR,UAAjB5D,EAAIC,UAAwBG,EAAMJ,EAAIK,MAAM4C,QAAQW,EAASvD,OAEzD8D,EAAa,SAACnE,GAAD,MAA0B,UAAjBA,EAAIC,UAE1BmE,EAAa,WACjB,IAAMC,EAAaC,OAAOC,KAAKnE,GAE/B,OAAOiE,EADavD,KAAK0D,MAAM1D,KAAK2D,SAAWJ,EAAWK,UAItDC,EAAa,SAAC,GAAD,IAAGtE,EAAH,EAAGA,KAAH,MAAe,CAChC0D,GAAIa,cACJ9E,EAAGgB,KAAK0D,MAAsB,KAAhB1D,KAAK2D,UAAmB,IACtC1E,EAAGe,KAAK0D,MAAsB,KAAhB1D,KAAK2D,UAAmB,IACtCxD,UAAWH,KAAKI,GAAK,EACrBO,KA5FmB,IA6FnBoD,MA/FoB,EAgGpBC,OA/FqB,EAgGrBC,SAAS,EACTzE,MAAO,UACP0E,UAAU,EACV3D,SAAU,EACVR,KAAM,EACNoE,IAAK,EACLhF,SAAU,QACViF,WAAY,EACZ7E,KAAMA,GAAc+D,MAGX7E,EAAO,GAET4F,EAAI,EAAGA,EA/FQ,GA+FaA,IACnC5F,EAAK6F,KAAKT,EAAW,CAAEtE,KAAM0C,KAE/B,IAAK,IAAIoC,EAAI,EAAGA,EAlGQ,GAkGaA,IACnC5F,EAAK6F,KAAKT,EAAW,CAAEtE,KAAMyC,KAE/B,IAAK,IAAIqC,EAAI,EAAGA,EArGQ,GAqGaA,IACnC5F,EAAK6F,KAAKT,EAAW,CAAEtE,KAAM2C,KAG/BqC,SAASC,iBACP,WACA,SAACC,GACe,MAAVA,EAAEC,KACJjG,EAAK6F,KAAKT,EAAW,CAAEtE,KAAM0C,KAEjB,MAAVwC,EAAEC,KACJjG,EAAK6F,KAAKT,EAAW,CAAEtE,KAAM2C,KAEjB,MAAVuC,EAAEC,KACJjG,EAAK6F,KAAKT,EAAW,CAAEtE,KAAMyC,KAEjB,MAAVyC,EAAEC,MACJpE,GAAoBA,GAER,MAAVmE,EAAEC,MACJtC,GAAeA,GAEH,MAAVqC,EAAEC,MACJ9C,GAAqBA,GAET,MAAV6C,EAAEC,MACJxD,GAAeA,GAEH,MAAVuD,EAAEC,MACJpC,GAAcA,GAEF,MAAVmC,EAAEC,MACJrC,GAAgBA,GAEJ,MAAVoC,EAAEC,MACJhC,GAAgBA,GAEJ,MAAV+B,EAAEC,MACJnC,GAAcA,GAEF,MAAVkC,EAAEC,MACJhE,GAAeA,GAEH,MAAV+D,EAAEC,MACJjC,GAAmBA,GAEP,MAAVgC,EAAEC,MACJlC,GAAoBA,MAGxB,GA6MF,IAAMmC,EAAiB,WACrBlG,EAAKG,SAAQ,SAACM,GACZT,EAAKG,SAAQ,SAACkE,GACRC,EAAiB7D,EAAK4D,KAEtBD,EAAgB3D,EAAK4D,IArTN,SAAC5D,EAAK4D,GAAN,OAAmB5D,EAAIgF,UAAYpB,EAASoB,SAsT3DU,CAAiB1F,EAAK4D,IACtBK,EAAoBjE,EAAK4D,GA/CnC,SAAqB5D,EAAK4D,GACxB5D,EAAIqB,SAAW,IACfuC,EAASvC,SAAW,IAFc,MAIbnB,MAAIyF,IAAI3F,EAAIM,MAAMC,UAAU,IAJf,mBAI3BqF,EAJ2B,KAIvBC,EAJuB,KAInBC,EAJmB,OAKb5F,MAAIyF,IAAI/B,EAAStD,MAAMC,UAAU,IALpB,mBAK3BwF,EAL2B,KAKvBC,EALuB,KAKnBC,EALmB,KAOlCjG,EAAIkG,MAAQ,IACZtC,EAASsC,MAAQ,IAEjB,IAAMC,EAAY,CAChBrF,KAAK0D,MAAM1D,KAAKsF,MAAMR,EAAKA,EAAKG,EAAKA,GAAM,IAC3CjF,KAAK0D,MAAM1D,KAAKsF,MAAMP,EAAKA,EAAKG,EAAKA,GAAM,IAC3ClF,KAAK0D,MAAM1D,KAAKsF,MAAMN,EAAKA,EAAKG,EAAKA,GAAM,KAGvCpB,EACJ/D,KAAK0D,MAAMxE,EAAI6E,MAAQjB,EAASiB,OAAS,EAAI,GAAM/D,KAAK2D,SACpD4B,EAAS,CACbtC,GAAIa,cACJ9E,EAAGgB,KAAK0D,MAAMxE,EAAIF,EAAI8D,EAAS9D,GAAK,EACpCC,EAAGe,KAAK0D,MAAMxE,EAAID,EAAI6D,EAAS7D,GAAK,EACpCkB,UAAW,EACXiF,MAAO,EACPrB,MAAOA,EAnWW,EAmWaA,EAnWb,EAoWlBC,OAnWmB,EAoWnBxE,MAAM,IAAD,OAAMqF,MAAIzF,IAAIiG,IACnBnB,UAAU,EACVsB,SAAS,EACTlE,KAAMC,EACNxB,KAAM,EACNoE,IAAK,EACL5D,SAAU,EACV6D,WAAYlF,EAAIkF,WAAa,EAC7BzD,KAAMX,KAAK0D,MAAMxE,EAAIyB,KAAOmC,EAASnC,MAAQ,EA3VtB,IA4VvBpB,KAAML,EAAIK,MAEZd,EAAK6F,KAAKiB,GAYFE,CAAYvG,EAAK4D,GAEZD,EAAgB3D,EAAK4D,IACpBM,EAAmBlE,EAAK4D,IAAaO,EAAWnE,KAClD4D,EAAS4C,QAAS,EAClB/G,EAAa2F,KAAK,CAAEtF,EAAG8D,EAAS9D,EAAGC,EAAG6D,EAAS7D,IAC/CC,EAAIyB,KAAOzB,EAAIyB,KAAO,cAgIrBgF,MA3Bf,WAoBE,OACE,qBAAKxH,UAAU,MAAf,SACE,cAAC,EAAD,CAASjB,KArBA,SAACsB,EAAKhB,GACjBgB,EAAIM,YACJN,EAAIqB,UAAY,UAChBrB,EAAIO,SAAS,EAAG,EAAGP,EAAIoH,OAAO3H,MAAOO,EAAIoH,OAAO1H,QAhFhC,SAACM,GACnBA,EAAIqH,KAAO,aACXrH,EAAIsH,WAAa,OACjBtH,EAAIqB,UAAY,UAChB,IAAMkG,EAAUtH,EAAKuH,QAAO,SAAC9G,GAAD,OAASA,EAAIK,OAAS2C,KAAU0B,OACtDqC,EAAWxH,EAAKuH,QAAO,SAAC9G,GAAD,OAASA,EAAIK,OAAS0C,KAAY2B,OACzDsC,EAASzH,EAAKuH,QAAO,SAAC9G,GAAD,OAASA,EAAIK,OAASyC,KAAU4B,OACvDlB,GACFlE,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,4BAA6B,GAAI,IAC9C3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAJ,UAAgBJ,EAAhB,sBAA6C,GAAI,IACjDvH,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAJ,UAAgBD,EAAhB,qBAA2C,GAAI,KAC/C1H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAJ,UAAgBF,EAAhB,uBAA+C,GAAI,KAC/C3D,GACF9D,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,wBAAyB,GAAI,OAE1C3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,yBAA0B,GAAI,MAEzC5D,GACF/D,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,mBAAoB,GAAI,OAErC3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,oBAAqB,GAAI,MAEpC/D,GACF5D,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,qBAAsB,GAAI,OAEvC3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,kBAAmB,GAAI,MAElCzF,GACFlC,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,qBAAsB,GAAI,OAEvC3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,kBAAmB,GAAI,MAElC1D,GACFjE,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,0BAA2B,GAAI,OAE5C3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,2BAA4B,GAAI,MAE3C3D,GACFhE,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,2BAA4B,GAAI,OAE7C3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,4BAA6B,GAAI,QAGhD3H,EAAIqB,UAAY,UAChBrB,EAAI2H,SAAS,6BAA8B,GAAI,KAsB/CC,CAAY5H,GApUO,SAAChB,GACtBiB,EAAKG,SAAQ,SAACM,GACZA,EAAIgB,WAAaF,KAAKc,IAAItD,EAAa,IACnC0B,EAAIqB,SAAW,IACjBrB,EAAIqB,SAAWrB,EAAIqB,SAAW,GAEhCrB,EAAIiF,IAAMjF,EAAIiF,IAAM,EAChBjF,EAAIiF,IAAM,KACZjF,EAAIC,SAAW,UACfD,EAAIa,KAAO,GACFb,EAAIiF,IAAM,KACnBjF,EAAIC,SAAW,OACfD,EAAIa,KAAO,GACFb,EAAIiF,IAAM,MACnBjF,EAAIC,SAAW,QACfD,EAAIa,KAAO,GACFb,EAAIiF,IAAM,KACnBjF,EAAIC,SAAW,QACfD,EAAIa,KAAO,EACXb,EAAIgF,UAAW,GACNhF,EAAIiF,IAAM,KAAS3B,GAC5BtD,EAAIC,SAAW,UACfD,EAAIa,KAAO,EACXb,EAAIgF,UAAW,EACfhF,EAAI8E,OAAS,GACJxB,IACTtD,EAAIwG,QAAS,MA2SfW,CAAe7I,GAlBjBiB,EAEGG,SAAQ,SAACM,GAERA,EAAIyB,KAAOzB,EAAIyB,KAAO,EAClBzB,EAAIyB,MAAQ,GAAK8B,IACnBvD,EAAIwG,QAAS,MAtFnBjH,EAAOA,EAAKuH,QAAO,SAAC9G,GAAD,OAAUA,EAAIwG,UAEjB,SAAClH,GACb6D,GACFM,EAAY/D,SAAQ,SAAC0H,GACfA,EAAK1D,SAAWL,EAClB/D,EAAIqB,UAAY,UAEhBrB,EAAIqB,UAAY,UAElBrB,EAAIO,SAASuH,EAAKtH,EAAGsH,EAAKrH,EAAGqH,EAAKrI,MAAOqI,EAAKpI,WA2FhDqI,CAAU/H,GACN4D,GACF7D,EAASC,EAAKC,GAlLlBA,EAAKG,SAAQ,SAACM,GACRA,EAAIkG,MAAQ,GACdlG,EAAIkG,MAAQlG,EAAIkG,MAAQ,EACxBlG,EAAI+E,SAAU,GAEd/E,EAAI+E,SAAU,KA7HlBxF,EAAKG,SAAQ,SAACM,GACZ,IAAIA,EAAI+E,QAAR,CAGA/E,EAAIoC,KAAOC,EACX,IAAMiF,EAAY/H,EAAKuH,QACrB,SAAClD,GAAD,OACE9C,KAAKC,IAAI6C,EAAS9D,EAAIE,EAAIF,GAAK8C,GAC/B9B,KAAKC,IAAI6C,EAAS7D,EAAIC,EAAID,GAAK6C,GAC/BgB,EAASG,KAAO/D,EAAI+D,MAElBwD,EAAiBD,EAAUR,QAC/B,SAAClD,GAAD,OAAcO,EAAWP,IAAaA,EAASG,KAAO/D,EAAI+D,MAGtDyD,EAAUD,EAAeT,QAAO,SAAClD,GAAD,OACpCM,EAAmBN,EAAU5D,MAE/B,GAAIwH,EAAQ9C,OAAS,EAAG,CACtB,IAAM+C,EAASD,EAAQ,GACvBxH,EAAIiB,UAAYH,KAAKI,GAAKJ,KAAK4G,MAAMD,EAAO1H,EAAIC,EAAID,EAAG0H,EAAO3H,EAAIE,EAAIF,GACtEE,EAAIoC,KAAOE,EAGb,IAAMqF,EAAQJ,EAAeT,QAC3B,SAAClD,GAAD,OACED,EAAgB3D,EAAK4D,IACrBK,EAAoBjE,EAAK4D,IACzBO,EAAWnE,MAEf,GAAI2H,EAAMjD,OAAS,EAAG,CACpB,IAAMkD,EAAOD,EAAM,GACnB3H,EAAIiB,UAAYH,KAAK4G,MAAME,EAAK7H,EAAIC,EAAID,EAAG6H,EAAK9H,EAAIE,EAAIF,GACxDE,EAAIoC,KAAOI,EAGb,GAAIY,GAAcpD,EAAIyB,KA5NT,IA4N0B,CACrC,IAAMoG,EAAQP,EAAUR,QAAO,SAAClD,GAAD,OAC7BM,EAAmBlE,EAAK4D,MAE1B,GAAIiE,EAAMnD,OAAS,EAAG,CACpB,IAAMoD,EAAOD,EAAM,GACnB7H,EAAIiB,UAAYH,KAAK4G,MAAMI,EAAK/H,EAAIC,EAAID,EAAG+H,EAAKhI,EAAIE,EAAIF,GACxDE,EAAIoC,KAAOG,GAIXvC,EAAIF,EAAI,MACVE,EAAIiB,UAAYH,KAAKI,IAEnBlB,EAAIF,EAAI,IACVE,EAAIiB,UAAY,GAEdjB,EAAID,EAAI,MACVC,EAAIiB,UAAa,EAAIH,KAAKI,GAAM,GAE9BlB,EAAID,EAAI,IACVC,EAAIiB,UAAYH,KAAKI,GAAK,GAG5BlB,EAAIiB,WACDH,KAAKI,GAAK,GAAMJ,KAAK2D,SAAW3D,KAAKI,GAAM,EAAIlB,EAAIiB,cAKxD1B,EAAKG,SAAQ,SAACM,GACZ,IAAIA,EAAI+E,QAAR,CAGA,IAAIgD,EACJ,OAAQ/H,EAAIC,UACV,IAAK,UACH8H,EAAc,EACd,MACF,IAAK,OACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,IAAK,QACHA,EAAc,EACd,MACF,IAAK,UACHA,EAAc,EACd,MACF,QACEA,EAAc,EAElB,IAAMC,EAAUhI,EAAIF,EAAIgB,KAAKc,IAAI5B,EAAIiB,WAAajB,EAAI6E,MAAQkD,EACxDE,EAAUjI,EAAID,EAAIe,KAAKe,IAAI7B,EAAIiB,WAAajB,EAAI6E,MAAQkD,EAE1DG,GAAkB,EACtBzE,EAAY/D,SAAQ,SAAC0H,GACnB,GAAIA,EAAK1D,SAAWL,EAGlB,OAFArD,EAAIF,EAAIkI,OACRhI,EAAID,EAAIkI,GAIRD,GAAWZ,EAAKtH,GAChBkI,GAAWZ,EAAKtH,EAAIsH,EAAKrI,OACzBkJ,GAAWb,EAAKrH,GAChBkI,GAAWb,EAAKrH,EAAIqH,EAAKpI,SAGzBgB,EAAIiB,UAAYH,KAAKI,GAAKlB,EAAIiB,UAC9BiH,GAAkB,MAIjBA,IACHlI,EAAIF,EAAIkI,EACRhI,EAAID,EAAIkI,OA6LVxC,UGnfW0C,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASrK,OACP,cAAC,IAAMsK,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASyD,eAAe,SAM1BX,M,kBCfAY,EAAOC,QAAU,CAAC,cAAgB,kC","file":"static/js/main.ac788621.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { hex, rgb } from \"color-convert\";\n\nimport \"./App.css\";\nimport AntHill from \"./components/Anthill\";\nimport { drawAnts } from \"./drawAnts\";\n\nconst DEFAULT_SPEED = 1;\nconst DEFAULT_ENERGY = 2;\nconst DEFAULT_FOOD = 4000;\n\nexport const SENSOR_AREA = 80;\n\nexport const NORMAL_MODE = \"NORMAL_MODE\";\nexport const FLEEING_MODE = \"FLEEING_MODE\";\nexport const HUNTING_MODE = \"HUNTING_MODE\";\nexport const MATING_MODE = \"MATING_MODE\";\n\nconst HEN_SIDE = \"HEN_SIDE\";\nconst VIPER_SIDE = \"VIPER_SIDE\";\nconst FOX_SIDE = \"FOX_SIDE\";\n\nconst NUMBER_PER_SIDE = 30;\n\nconst FOOD_LOW = 1000;\nconst FOOD_BOOST_NEWBORN = 600;\n\nexport const sides = {\n  [HEN_SIDE]: {\n    side: HEN_SIDE,\n    color: \"#995500\",\n    canKill: { [VIPER_SIDE]: true },\n  },\n  [VIPER_SIDE]: {\n    side: VIPER_SIDE,\n    color: \"#44CC44\",\n    canKill: { [FOX_SIDE]: true },\n  },\n  [FOX_SIDE]: {\n    side: FOX_SIDE,\n    color: \"#CC4444\",\n    canKill: { [HEN_SIDE]: true },\n  },\n};\n\nexport let displayAnts = true;\nexport let displayAntenna = false;\nexport let displayWillBreed = false;\nexport let displaySensorArea = false;\nexport let displayEyes = true;\nexport let displayWalls = true;\nexport let enablePrey = false;\nexport let enableGate = false;\nexport let enableSenescence = true;\nexport let enableDieOnFood = true;\nexport let displayDebug = false;\nexport let displayFood = false;\n\nexport const listOfDeaths = [];\nexport const listOfWalls = [\n  { x: 2000, y: 0, width: 10, height: 2000, isGate: true },\n  { x: 1000, y: 1000, width: 2000, height: 10, isGate: true },\n  { x: 1600, y: 1000, width: 800, height: 10 },\n  { x: 1000, y: 600, width: 10, height: 800 },\n  { x: 3000, y: 600, width: 10, height: 800 },\n  { x: 1600, y: 400, width: 800, height: 10 },\n  { x: 1600, y: 1600, width: 800, height: 10 },\n  { x: 0, y: 600, width: 1000, height: 10 },\n  { x: 3000, y: 1400, width: 1000, height: 10 },\n];\n\nconst areAntsSameGeneration = (ant, otherAnt) =>\n  ant.generation === otherAnt.generation;\nconst areNotSameAnts = (ant, otherAnt) => ant.id !== otherAnt.id;\nconst canBothAntsBreed = (ant, otherAnt) => ant.canBreed && otherAnt.canBreed;\nconst areCloseEnough = (ant, otherAnt) =>\n  Math.abs(otherAnt.x - ant.x) < 30 && Math.abs(otherAnt.y - ant.y) < 30;\nconst areAntsSameSide = (ant, otherAnt) => ant.side === otherAnt.side;\n\nconst isContactBetween = (ant, otherAnt) =>\n  areCloseEnough(ant, otherAnt) && areNotSameAnts(ant, otherAnt);\n\nconst canBothAntsHaveBaby = (ant, otherAnt) =>\n  ant.bredRest === 0 && otherAnt.bredRest === 0;\n\nconst canAntKillOtherAnt = (ant, otherAnt) =>\n  ant.maturity === \"adult\" && sides[ant.side].canKill[otherAnt.side];\n\nconst isAntAdult = (ant) => ant.maturity === \"adult\";\n\nconst randomSide = () => {\n  const sidesArray = Object.keys(sides);\n  const randomIndex = Math.floor(Math.random() * sidesArray.length);\n  return sidesArray[randomIndex];\n};\n\nconst antFactory = ({ side }) => ({\n  id: uuidv4(),\n  x: Math.floor(Math.random() * 3600) + 200,\n  y: Math.floor(Math.random() * 1600) + 200,\n  direction: Math.PI / 2,\n  food: DEFAULT_FOOD,\n  speed: DEFAULT_SPEED,\n  energy: DEFAULT_ENERGY,\n  isTired: false,\n  color: \"#44CCCC\",\n  canBreed: false,\n  bredRest: 0,\n  size: 1,\n  age: 1,\n  maturity: \"child\",\n  generation: 1,\n  side: side ? side : randomSide(),\n});\n\nexport let ants = [];\n\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants.push(antFactory({ side: VIPER_SIDE }));\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants.push(antFactory({ side: HEN_SIDE }));\n}\nfor (let i = 0; i < NUMBER_PER_SIDE; i++) {\n  ants.push(antFactory({ side: FOX_SIDE }));\n}\n\ndocument.addEventListener(\n  \"keydown\",\n  (e) => {\n    if (e.key === \"v\") {\n      ants.push(antFactory({ side: VIPER_SIDE }));\n    }\n    if (e.key === \"f\") {\n      ants.push(antFactory({ side: FOX_SIDE }));\n    }\n    if (e.key === \"h\") {\n      ants.push(antFactory({ side: HEN_SIDE }));\n    }\n    if (e.key === \"b\") {\n      displayWillBreed = !displayWillBreed;\n    }\n    if (e.key === \"a\") {\n      displayAnts = !displayAnts;\n    }\n    if (e.key === \"s\") {\n      displaySensorArea = !displaySensorArea;\n    }\n    if (e.key === \"e\") {\n      displayEyes = !displayEyes;\n    }\n    if (e.key === \"k\") {\n      enablePrey = !enablePrey;\n    }\n    if (e.key === \"w\") {\n      displayWalls = !displayWalls;\n    }\n    if (e.key === \"d\") {\n      displayDebug = !displayDebug;\n    }\n    if (e.key === \"g\") {\n      enableGate = !enableGate;\n    }\n    if (e.key === \"o\") {\n      displayFood = !displayFood;\n    }\n    if (e.key === \"x\") {\n      enableDieOnFood = !enableDieOnFood;\n    }\n    if (e.key === \"c\") {\n      enableSenescence = !enableSenescence;\n    }\n  },\n  false\n);\n\nconst handleBirthday = (frameCount) => {\n  ants.forEach((ant) => {\n    ant.oscillator = Math.cos(frameCount / 10);\n    if (ant.bredRest > 0) {\n      ant.bredRest = ant.bredRest - 1;\n    }\n    ant.age = ant.age + 1;\n    if (ant.age < 200) {\n      ant.maturity = \"newborn\";\n      ant.size = 2;\n    } else if (ant.age < 400) {\n      ant.maturity = \"baby\";\n      ant.size = 4;\n    } else if (ant.age < 1200) {\n      ant.maturity = \"child\";\n      ant.size = 5;\n    } else if (ant.age < 8000) {\n      ant.maturity = \"adult\";\n      ant.size = 8;\n      ant.canBreed = true;\n    } else if (ant.age < 10000 && enableSenescence) {\n      ant.maturity = \"elderly\";\n      ant.size = 7;\n      ant.canBreed = false;\n      ant.energy = 5;\n    } else if (enableSenescence) {\n      ant.isDead = true;\n    }\n  });\n};\n\nconst handleDirectionChange = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    ant.mode = NORMAL_MODE;\n    const neighbors = ants.filter(\n      (otherAnt) =>\n        Math.abs(otherAnt.x - ant.x) < SENSOR_AREA &&\n        Math.abs(otherAnt.y - ant.y) < SENSOR_AREA &&\n        otherAnt.id !== ant.id\n    );\n    const adultNeighbors = neighbors.filter(\n      (otherAnt) => isAntAdult(otherAnt) && otherAnt.id !== ant.id\n    );\n\n    const threats = adultNeighbors.filter((otherAnt) =>\n      canAntKillOtherAnt(otherAnt, ant)\n    );\n    if (threats.length > 0) {\n      const threat = threats[0];\n      ant.direction = Math.PI + Math.atan2(threat.y - ant.y, threat.x - ant.x);\n      ant.mode = FLEEING_MODE;\n    }\n\n    const mates = adultNeighbors.filter(\n      (otherAnt) =>\n        areAntsSameSide(ant, otherAnt) &&\n        canBothAntsHaveBaby(ant, otherAnt) &&\n        isAntAdult(ant)\n    );\n    if (mates.length > 0) {\n      const mate = mates[0];\n      ant.direction = Math.atan2(mate.y - ant.y, mate.x - ant.x);\n      ant.mode = MATING_MODE;\n    }\n\n    if (enablePrey || ant.food < FOOD_LOW) {\n      const preys = neighbors.filter((otherAnt) =>\n        canAntKillOtherAnt(ant, otherAnt)\n      );\n      if (preys.length > 0) {\n        const prey = preys[0];\n        ant.direction = Math.atan2(prey.y - ant.y, prey.x - ant.x);\n        ant.mode = HUNTING_MODE;\n      }\n    }\n\n    if (ant.x > 4000) {\n      ant.direction = Math.PI;\n    }\n    if (ant.x < 0) {\n      ant.direction = 0;\n    }\n    if (ant.y > 2000) {\n      ant.direction = (3 * Math.PI) / 2;\n    }\n    if (ant.y < 0) {\n      ant.direction = Math.PI / 2;\n    }\n\n    ant.direction =\n      -Math.PI / 18 + (Math.random() * Math.PI) / 9 + ant.direction;\n  });\n};\n\nconst handleMoveAnts = () => {\n  ants.forEach((ant) => {\n    if (ant.isTired) {\n      return;\n    }\n    let speedFactor;\n    switch (ant.maturity) {\n      case \"newborn\":\n        speedFactor = 0;\n        break;\n      case \"baby\":\n        speedFactor = 1;\n        break;\n      case \"child\":\n        speedFactor = 2;\n        break;\n      case \"adult\":\n        speedFactor = 3;\n        break;\n      case \"elderly\":\n        speedFactor = 1;\n        break;\n      default:\n        speedFactor = 1;\n    }\n    const wantedX = ant.x + Math.cos(ant.direction) * ant.speed * speedFactor;\n    const wantedY = ant.y + Math.sin(ant.direction) * ant.speed * speedFactor;\n\n    let isAntInsideWall = false;\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ant.x = wantedX;\n        ant.y = wantedY;\n        return;\n      }\n      if (\n        wantedX >= wall.x &&\n        wantedX <= wall.x + wall.width &&\n        wantedY >= wall.y &&\n        wantedY <= wall.y + wall.height\n      ) {\n        // ant.direction = Math.PI + Math.atan2(wall.y - ant.y, wall.x - ant.x);\n        ant.direction = Math.PI + ant.direction;\n        isAntInsideWall = true;\n      }\n    });\n\n    if (!isAntInsideWall) {\n      ant.x = wantedX;\n      ant.y = wantedY;\n    }\n  });\n};\n\nconst handleFatigue = () => {\n  ants.forEach((ant) => {\n    if (ant.brood > 0) {\n      ant.brood = ant.brood - 1;\n      ant.isTired = true;\n    } else {\n      ant.isTired = false;\n    }\n  });\n};\n\nfunction handleBirth(ant, otherAnt) {\n  ant.bredRest = 400;\n  otherAnt.bredRest = 400;\n\n  const [r1, g1, b1] = hex.rgb(ant.color.substring(1));\n  const [r2, g2, b2] = hex.rgb(otherAnt.color.substring(1));\n\n  ant.brood = 100;\n  otherAnt.brood = 100;\n\n  const rgbNewAnt = [\n    Math.floor(Math.sqrt((r1 * r1 + r2 * r2) / 2)),\n    Math.floor(Math.sqrt((g1 * g1 + g2 * g2) / 2)),\n    Math.floor(Math.sqrt((b1 * b1 + b2 * b2) / 2)),\n  ];\n\n  const speed =\n    Math.floor(ant.speed + otherAnt.speed) / 2 - 0.5 + Math.random();\n  const newAnt = {\n    id: uuidv4(),\n    x: Math.floor(ant.x + otherAnt.x) / 2,\n    y: Math.floor(ant.y + otherAnt.y) / 2,\n    direction: 0,\n    brood: 0,\n    speed: speed > DEFAULT_SPEED ? speed : DEFAULT_SPEED,\n    energy: DEFAULT_ENERGY,\n    color: `#${rgb.hex(rgbNewAnt)}`,\n    canBreed: false,\n    hasBred: false,\n    mode: NORMAL_MODE,\n    size: 1,\n    age: 0,\n    bredRest: 0,\n    generation: ant.generation + 1,\n    food: Math.floor(ant.food + otherAnt.food) / 2 + FOOD_BOOST_NEWBORN,\n    side: ant.side,\n  };\n  ants.push(newAnt);\n}\n\nconst handleContacts = () => {\n  ants.forEach((ant) => {\n    ants.forEach((otherAnt) => {\n      if (isContactBetween(ant, otherAnt)) {\n        if (\n          areAntsSameSide(ant, otherAnt) &&\n          canBothAntsBreed(ant, otherAnt) &&\n          canBothAntsHaveBaby(ant, otherAnt)\n        ) {\n          handleBirth(ant, otherAnt);\n        } else {\n          if (!areAntsSameSide(ant, otherAnt)) {\n            if (canAntKillOtherAnt(ant, otherAnt) && isAntAdult(ant)) {\n              otherAnt.isDead = true;\n              listOfDeaths.push({ x: otherAnt.x, y: otherAnt.y });\n              ant.food = ant.food + 1500;\n            }\n          }\n        }\n      }\n    });\n  });\n};\n\nconst handleDeaths = () => {\n  ants = ants.filter((ant) => !ant.isDead);\n};\nconst drawWalls = (ctx) => {\n  if (displayWalls) {\n    listOfWalls.forEach((wall) => {\n      if (wall.isGate && !enableGate) {\n        ctx.fillStyle = \"#333333\";\n      } else {\n        ctx.fillStyle = \"#888888\";\n      }\n      ctx.fillRect(wall.x, wall.y, wall.width, wall.height);\n    });\n  }\n};\n\nconst displayHelp = (ctx) => {\n  ctx.font = \"36px serif\";\n  ctx.fontWeight = \"bold\";\n  ctx.fillStyle = \"#ffffff\";\n  const nbFoxes = ants.filter((ant) => ant.side === FOX_SIDE).length;\n  const nbVipers = ants.filter((ant) => ant.side === VIPER_SIDE).length;\n  const nbHens = ants.filter((ant) => ant.side === HEN_SIDE).length;\n  if (displayDebug) {\n    ctx.fillStyle = \"#00FF00\";\n    ctx.fillText(\"Display debug (D) enabled\", 30, 40);\n    ctx.fillStyle = \"#CC4444\";\n    ctx.fillText(`${nbFoxes} foxes, (F) to add`, 30, 80);\n    ctx.fillStyle = \"#995500\";\n    ctx.fillText(`${nbHens} hens, (H) to add`, 30, 120);\n    ctx.fillStyle = \"#44CC44\";\n    ctx.fillText(`${nbVipers} vipers, (V) to add`, 30, 160);\n    if (enablePrey) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Prey mode (K) enabled\", 30, 200);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Prey mode (K) disabled\", 30, 200);\n    }\n    if (enableGate) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Gate (G) enabled\", 30, 240);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Gate (G) disabled\", 30, 240);\n    }\n    if (displayAnts) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Ants (A) displayed\", 30, 280);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Ants (A) hidden\", 30, 280);\n    }\n    if (displayFood) {\n      ctx.fillStyle = \"#CCCCCC\";\n      ctx.fillText(\"Food (O) displayed\", 30, 320);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Food (O) hidden\", 30, 320);\n    }\n    if (enableDieOnFood) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on food (X) enabled\", 30, 360);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on food (X) disabled\", 30, 360);\n    }\n    if (enableSenescence) {\n      ctx.fillStyle = \"#FF0000\";\n      ctx.fillText(\"Die on aging (C) enabled\", 30, 400);\n    } else {\n      ctx.fillStyle = \"#808080\";\n      ctx.fillText(\"Die on aging (C) disabled\", 30, 400);\n    }\n  } else {\n    ctx.fillStyle = \"#808080\";\n    ctx.fillText(\"Display debug (D) disabled\", 30, 40);\n  }\n};\n\nconst handleFood = () => {\n  ants\n    //    .filter((ant) => ant.maturity === \"adult\" || ant.maturity === \"elderly\")\n    .forEach((ant) => {\n      debugger;\n      ant.food = ant.food - 1;\n      if (ant.food <= 0 && enableDieOnFood) {\n        ant.isDead = true;\n      }\n    });\n};\n\nfunction App() {\n  const draw = (ctx, frameCount) => {\n    ctx.beginPath();\n    ctx.fillStyle = \"#202020\";\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    displayHelp(ctx);\n    handleBirthday(frameCount);\n    handleFood();\n    handleDeaths();\n    drawWalls(ctx);\n    if (displayAnts) {\n      drawAnts(ctx, ants);\n    }\n    handleFatigue(ants);\n    handleDirectionChange();\n    handleMoveAnts();\n    handleContacts();\n  };\n\n  return (\n    <div className=\"App\">\n      <AntHill draw={draw} />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useRef, useEffect } from 'react';\nimport styles from './AntHill.module.css';\n\nconst AntHill = (props) => {\n  const canvasRef = useRef(null);\n  const { draw } = props;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n\n  }, [draw]);\n  console.log(window.innerWidth / 2);\n  console.log(window.innerHeight/ 2);\n  const width = 4000;\n  const height = 2000;\n  return <canvas width={width } height={height } className={styles.canvasSupport} ref={canvasRef}{...props}></canvas>\n};\n\nexport default AntHill;","import { hex, hsl } from \"color-convert\";\nimport {\n  sides,\n  listOfDeaths,\n  displayWillBreed,\n  displayAntenna,\n  displaySensorArea,\n  displayEyes,\n  displayFood,\n  SENSOR_AREA,\n  NORMAL_MODE,\n  FLEEING_MODE,\n  HUNTING_MODE,\n  MATING_MODE,\n} from \"./App\";\n\nconst drawSensorArea = (ctx, ant) => {\n  ctx.lineWidth = 0.25;\n  ctx.strokeRect(\n    ant.x - SENSOR_AREA / 2,\n    ant.y - SENSOR_AREA / 2,\n    SENSOR_AREA,\n    SENSOR_AREA\n  );\n};\n\nconst drawEyes = (ctx, ant) => {\n  const [h, s, l] = hex.hsl(sides[ant.side].color.substring(1));\n\n  const eyeSize = 4;\n  ctx.beginPath();\n  //  ctx.fillStyle = `#${hsl.hex(h, s, l + 30)}`;\n  ctx.fillStyle = \"#ffffff\";\n  ctx.arc(\n    ant.x + Math.cos(ant.direction + Math.PI / 6) * ant.size,\n    ant.y + Math.sin(ant.direction + Math.PI / 6) * ant.size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x + Math.cos(ant.direction - Math.PI / 6) * ant.size,\n    ant.y + Math.sin(ant.direction - Math.PI / 6) * ant.size,\n    eyeSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n\n  ctx.beginPath();\n  const pupilSize = ant.mode === NORMAL_MODE ? 2 : 3;\n  let pupilColor;\n  switch (ant.mode) {\n    case NORMAL_MODE:\n      pupilColor = \"#000000\";\n      break;\n    case FLEEING_MODE:\n      pupilColor = \"#008000\";\n      break;\n    case HUNTING_MODE:\n      pupilColor = \"#ff0000\";\n      debugger;\n      break;\n    case MATING_MODE:\n      pupilColor = \"#ff00ff\";\n      break;\n    default:\n      pupilColor = \"#000000\";\n  }\n\n  /// ctx.fillStyle = `#${hsl.hex(h, s, l - 30)}`;\n  ctx.fillStyle = pupilColor;\n  ctx.arc(\n    ant.x + Math.cos(ant.direction + Math.PI / 6) * ant.size,\n    ant.y + Math.sin(ant.direction + Math.PI / 6) * ant.size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.arc(\n    ant.x + Math.cos(ant.direction - Math.PI / 6) * ant.size,\n    ant.y + Math.sin(ant.direction - Math.PI / 6) * ant.size,\n    pupilSize,\n    0,\n    2 * Math.PI\n  );\n  ctx.fill();\n};\n\nconst drawAntenna = (ctx, ant) => {\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.fillStyle = sides[ant.side].color;\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x + Math.cos(ant.direction - Math.PI / 6) * ant.size * 10,\n    ant.y + Math.sin(ant.direction - Math.PI / 6) * ant.size * 10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.stroke();\n\n  ctx.lineWidth = 0.5;\n  ctx.beginPath();\n  ctx.moveTo(ant.x, ant.y);\n  ctx.lineTo(\n    ant.x + Math.cos(ant.direction + Math.PI / 6) * ant.size * 10,\n    ant.y + Math.sin(ant.direction + Math.PI / 6) * ant.size * 10\n  );\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = sides[ant.side].color;\n  ctx.stroke();\n};\n\nexport const drawAnts = (ctx, ants) => {\n  ctx.strokeStyle = \"#331111\";\n  listOfDeaths.forEach((point) => {\n    ctx.beginPath();\n    ctx.fillRect(point.x, point.y, 1, 1);\n  });\n  ants.forEach((ant) => {\n    ctx.beginPath();\n    if (ant.maturity === \"elderly\") {\n      const [h, s, l] = hex.hsl(sides[ant.side].color.substring(1));\n      ctx.fillStyle = `#${hsl.hex(h, s / 2, l - 10)}`;\n    } else {\n      ctx.fillStyle = sides[ant.side].color;\n    }\n    ctx.ellipse(\n      ant.x,\n      ant.y,\n      ant.size * 2,\n      ant.size + ant.size * Math.abs(ant.oscillator),\n      ant.direction,\n      0,\n      2 * Math.PI\n    );\n    ctx.fill();\n    if (displayWillBreed && ant.bredRest > 0) {\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 1;\n      ctx.stroke();\n    }\n    if (displayFood) {\n      if (ant.food < 500) {\n        ctx.strokeStyle = \"#ff0000\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 1000) {\n        ctx.strokeStyle = \"#ffff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      } else if (ant.food < 2000) {\n        ctx.strokeStyle = \"#00ff00\";\n        ctx.lineWidth = 3;\n        ctx.stroke();\n      }\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(ant.x, ant.y);\n    ctx.lineTo(\n      ant.x + Math.cos(ant.direction) * ant.size * 2,\n      ant.y + Math.sin(ant.direction) * ant.size * 2\n    );\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = sides[ant.side].color;\n    ctx.stroke();\n\n    if (displayAntenna) {\n      drawAntenna(ctx, ant);\n    }\n    if (\n      displayEyes &&\n      (ant.maturity === \"adult\" ||\n        ant.maturity === \"elderly\" ||\n        ant.maturity === \"child\" ||\n        ant.maturity === \"baby\")\n    ) {\n      drawEyes(ctx, ant);\n    }\n\n    if (displaySensorArea) {\n      drawSensorArea(ctx, ant);\n    }\n  });\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasSupport\":\"AntHill_canvasSupport__1XU9R\"};"],"sourceRoot":""}